{"version":3,"sources":["components/plot3/index.js","components/Header.js","states.js","components/Input.js","components/Login.js","utils_dates/functions.js","components/Table.js","components/Chart.js","utils_dates/config.js","utils_dates/graphics.js","components/AxisX.js","components/AxisY.js","components/Legend.js","components/Static_Line.js","components/Pointer_Line.js","components/Info_Box.js","utils_dates/area_path.js","Test_Plot_Dates.js","components/Area_Path.js","components/Plot.js","App.js","config.js","serviceWorker.js","index.js","components/plot3/src/plot/utils_dates/functions.js","components/plot3/src/plot/utils_dates/config.js","components/plot3/src/plot/parts/AxisX.js","components/plot3/src/plot/parts/AxisY.js","components/plot3/src/plot/parts/functions.js","components/plot3/src/plot/parts/Legend.js","components/plot3/src/plot/parts/Static_Line.js","components/plot3/src/plot/parts/Pointer_Line.js","components/plot3/src/plot/parts/Info_Box.js","components/plot3/src/plot/parts/Area_Path.js","components/plot3/src/plot/KeywordPlot.js","components/plot3/src/plot/parts/Plot.js","components/plot3/src/plot/index.js","components/plot3/src/index.js"],"names":["module","exports","require","Header","props","state","authenticated","className","Form","this","username","Button","variant","type","Component","USA_STATES","sort","a","b","localeCompare","time_frames","InputComponent","handleClick","bind","handleChange","selectedState","selectedTimeFrame","keywords","selected_state_name","selected_time_frame","event","preventDefault","arrayTrim","callbackFromParent","setState","target","value","split","array","map","el","trim","namesList","key","time_framesList","time_frame","onSubmit","Group","Label","htmlFor","Control","placeholder","onChange","id","as","LoginComponent","handleChangeLogin","handleChangePassword","password","callbackFromLogin","controlId","get_random","min","max","Math","ceil","floor","random","get_random_colors","number","slice","scale_data_area_dates","data","ranges","width","height","prefix","result","x_frame","abs","max_x","min_x","y_frame","max_y","min_y","i","length","push","get_random_mock_area_array_dates","dates","s_d1","s_d2","capitalizeString","string","str","splitStr","toLowerCase","charAt","toUpperCase","substring","join","titleCase","get_historical_dates","Date","UTC","get_forecasted_dates","get_min_value","min_result","j","get_max_value","max_result","TableComponent","tableHeaders","tableData","headers","entity","index","tableRows","cells","e","toFixed","title","Table","striped","bordered","hover","highchartsMap","Highcharts","western_states","central_states","eastern_states","southern_states","Chart","setHoverData","callbackFromApp","point","updateWindowDimensions","mapOptions","chart","events","drilldown","console","log","drillup","panning","panKey","tooltip","enabled","formatter","name","legend","layout","align","verticalAlign","text","mapNavigation","buttonOptions","plotOptions","states","color","brightness","series","click","concat","keys","mapData","mapDataIE","dataLabels","format","showInLegend","activeDataLabelStyle","textDecoration","textOutline","drillUpButton","relativeTo","position","x","y","window","addEventListener","removeEventListener","constructorType","highcharts","options","React","PureComponent","appConfig","dimensions","box_width","box_height","number_of_plots","ranges_dates","array_length_dates","array_length_dates_forecast","KEYWORDS_URL","make_yy_tick","line","get_y_ticks","lines_number","frame","make_x_tick","get_ticks","ticks_number","make_y_tick","get_y_axis","lower_index","upper_index","prepare_x_axis","data_mock","y_trans","Object","data_frame","formatDate_monthly","formatDate","height_trans","get_red_line","historical_data_length","get_info_box","info_box","y_data","undefined","value_y","colors","date","value_x","pos_x","pos_y","visibility","prepare_legend","keyword_sizes","width2","l","calculate_translate_for_legend","translation","reduce","width_trans","x_trans","y_trans2","trans","keyword_length","d","dd","getDate","mm","getMonth","getFullYear","AxisX","ticks","dangerouslySetInnerHTML","__html","x_label","AxisY","lower_bound","upper_bound","y_label","Legend","Static_Line","Pointer_Line","mark_line","pos","Info_Box","svgPath","points","command","dash","acc","bezierCommand","areaPath","d1","bezierCommand_upper","d3","reverse","bezierCommand_lower","lineCommand","area_path","controlPoint","current","previous","next","o","pointA","pointB","lengthX","lengthY","sqrt","pow","angle","atan2","PI","cos","sin","cps","cpe","controlPoint_upper","controlPoint_lower","line_lower","line_upper","Area_Path","style","Plot","y_number","historical_data_mock","forecasted_data_mock","unshift","KEYWORDS_URL3","KEYWORDS_URL2","KEYWORDS_NEW","RATE_RANKER_URL","GROWTH_RANKER_URL","App","fetchCallback","displayResults","fetchData","mapCallback","region_state","historical_data","forecasted_data","rate_table_data","growth_table_data","fetching_results","myRef","createRef","fetch","method","body","JSON","stringify","then","res","json","offsetWidth","x_trans2","get_historical_data","get_forecasted_data","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","catch","error","focus","div_height","ref","Input","number_of_series","Row","timeout","Login","toLoginCallback","keyword","k_w","arr","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","class","text-anchor","fill","data-z-index","transform","stroke","stroke-width","textAnchor","font-size","stroke-dasharray","strokeWidth","opacity","yyyy","pointer-events","KeywordPlot","handleMouseMove","handleHoverOff","innerWidth","divRef","scaled_historical_data","scale_data_mocks","scaled_forecasted_data","data_map_area_DATES","get_data_map_area_DATES","info_box_height","get_box_height","forecasted_data_length","div_width2","clientWidth","div_width","data_mocks_area_DATES1","data_mocks_area_DATES2","scaled_data_mocks_area_DATES","scaled_data_mocks_area_future_DATES","data_mocks_area_DATES","y_data_normal","y_data_min","y_data_max","get_data_mocks_area_DATES","dim","getBoundingClientRect","clientX","left","clientY","top","x_diff","round","left_index","right_index","area_paths","area_paths_future","v_b","v_trans","aa","bb","calc_y_number","version","xmlns","preserveAspectRatio","onMouseMove","onMouseLeave","viewBox","useState","display","aria-busy","createElement","defaultProps","visible"],"mappings":"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","file":"static/js/main.d5183871.chunk.js","sourcesContent":["module.exports = require('./src/index');","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\nclass Header extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authenticated: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"myheader\">\n        <Form>\n          <b>Hello, {this.props.username}&nbsp;</b>\n          <Button variant=\"light\" className=\"btn-white\" type=\"submit\">\n              Logout\n          </Button>\n        </Form>\n      </div>\n\t\t);\n  }\n}\n\nexport default Header","\nexport const USA_STATES =[\n    ['us', 0, ' All states'],\n    ['us-ma', 1, 'Massachusetts'],\n    ['us-wa', 2, 'Washington'],\n    ['us-ca', 3, 'California'],\n    ['us-or', 4, 'Oregon'],\n    ['us-wi', 5, 'Wisconsin'],\n    ['us-me', 6, 'Maine'],\n    ['us-mi', 7, 'Michigan'],\n    ['us-nv', 8, 'Nevada'],\n    ['us-nm', 9, 'New Mexico'],\n    ['us-co', 10, \"Colorado\"],\n    ['us-wy', 11, 'Wyoming'],\n    ['us-ks', 12, 'Kansas'],\n    ['us-ne', 13, 'Nebraska'],\n    ['us-ok', 14, 'Oklahoma'],\n    ['us-mo', 15, 'Missouri'],\n    ['us-il', 16, 'Illinois'],\n    ['us-in', 17, 'Indiana'],\n    ['us-vt', 18, 'Vermont'],\n    ['us-ar', 19, 'Arkansas'],\n    ['us-tx', 20, 'Texas'],\n    ['us-ri', 21, 'Rhode Island'],\n    ['us-al', 22, 'Alabama'],\n    ['us-ms', 23, 'Mississippi'],\n    ['us-nc', 24, 'North Carolina'],\n    ['us-va', 25, 'Virginia'],\n    ['us-ia', 26, 'Iowa'],\n    ['us-md', 27, 'Maryland'],\n    ['us-de', 28, 'Delaware'],\n    ['us-pa', 29, 'Pennsylvania'],\n    ['us-nj', 30, 'New Jersey'],\n    ['us-ny', 31, 'New York'],\n    ['us-id', 32, 'Idaho'],\n    ['us-sd', 33, 'South Dakota'],\n    ['us-ct', 34, 'Connecticut'],\n    ['us-nh', 35, 'New Hampshire'],\n    ['us-ky', 36, 'Kentucky'],\n    ['us-oh', 37, 'Ohio'],\n    ['us-tn', 38, 'Tennessee'],\n    ['us-wv', 39, 'West Virginia'],\n    ['us-dc', 40, 'District of Columbia'],\n    ['us-la', 41, 'Louisiana'],\n    ['us-fl', 42, 'Florida'],\n    ['us-ga', 43, 'Georgia'],\n    ['us-sc', 44, 'South Carolina'],\n    ['us-mn', 45, 'Minnesota'],\n    ['us-mt', 46, 'Montana'],\n    ['us-nd', 47, 'North Dakota'],\n    ['us-az', 48, 'Arizona'],\n    ['us-ut', 49, 'Utah'],\n    ['us-hi', 50, 'Hawaii'],\n    ['us-ak', 51, 'Alaska']\n].sort(function (a, b) {\n    return ('' + a[2]).localeCompare(b[2]);\n})","import React, { Component } from 'react';\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport { USA_STATES } from '../states.js';\n\nconst time_frames = [\n    [0, \"Past 5 years\", \"today 5-y\"],\n    [1, \"Past 12 months\", \"today 12-m\"],\n    [2, \"Past 1 month\", \"today 1-m\"],\n    [3, \"Last 7 days\", \"now 7-d\"],\n]\n\nclass InputComponent extends Component {\t\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.selectedState = this.selectedState.bind(this);\n        this.selectedTimeFrame = this.selectedTimeFrame.bind(this);\n        this.state = {\n            keywords: [],\n            selected_state_name: USA_STATES[0][0],\n            selected_time_frame: time_frames[0][2]\n        };\n    }\n\n    handleClick(event){\n        event.preventDefault();\n\n        let keywords = this.arrayTrim(this.state.keywords);\n        let selectedState = this.state.selected_state_name;\n        let selectedTimeFrame = this.state.selectedTimeFrame;\n\n        // console.log(\"input state: \" + selectedState)\n\n        this.props.callbackFromParent(keywords, selectedState, selectedTimeFrame);\n    }\n\n    selectedState(event){\n        this.setState({\n            selected_state_name: event.target.value.split(',')[0]\n        });\n    }\n\n    selectedTimeFrame(event){\n        this.setState({\n            selected_time_frame: event.target.value.split(',')[2]\n        });\n    }\n\n    handleChange(event) {\n\n        let array = event.target.value.split(',')\n\n        this.setState({\n            keywords: array,\n            username: \"name\",\n        });\n    }\n\n    arrayTrim(array){\n        let result = array.map(function (el) {\n            return el.trim();\n        });\n\n        return result;\n    }\n    \n    render() {\n        let namesList = USA_STATES.map(function(state){\n            return <option key={state[1]} value={state}>{state[2]}</option>;\n        })\n\n        let time_framesList = time_frames.map(function(time_frame){\n            return <option key={time_frame[0]} value={time_frame}>{time_frame[1]}</option>;\n        })\n\n        return (\n            <div className=\"input_bar input-bar-item width100\">\n                <Form onSubmit={this.handleClick}>\n                    <Form.Group className=\"form-inline\">\n                        <div className=\"keyword_div\"> \n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"keywords_input\"><h5>Type your keywords:</h5></Form.Label>\n                                </div>\n                                <Form.Control className=\"width100 mr-1 input_keywords\" type=\"text\" placeholder=\"Enter keywords\" value={this.state.keywords} onChange={this.handleChange} id=\"keywords_input\" />\n                            </div>\n                        </div>\n                        <div className=\"timeframe_div\">\n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_timeframe_input\"><h5>Select time frame:</h5></Form.Label>\n                                </div>\n                                <Form.Control as=\"select\" onChange={this.selectedTimeFrame}  id=\"select_timeframe_input\" className=\"form-control width100 mr-1 input_timeframe\">\n                                    {time_framesList}\n                                </Form.Control>                                \n                            </div>\n                        </div>\n                        <div className=\"state_select_div\">\n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_state_input\"><h5>Select state:</h5></Form.Label>\n                                </div>\n                                <Form.Control as=\"select\" onChange={this.selectedState}  id=\"select_state_input\" className=\"form-control width100 mr-1 input_state\">\n                                    {namesList}\n                                </Form.Control>                                \n                                <div className=\"input_button\">\n                                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </Form.Group>\n                </Form>\n            </div>\n\t\t);\n    }\n}\n\nexport default InputComponent\n","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\n\nclass LoginComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChangeLogin = this.handleChangeLogin.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.state = {\n        authenticated: true,\n        username: \"user\",\n        password: \"user\"\n    };\n  }\n\n  handleClick(){\n    if(this.state.username === \"user\" && this.state.password === \"user\"){\n      this.props.callbackFromLogin(this.state);\n    }\n  }\n\n  handleChangeLogin(event) {\n    this.setState({\n        username: event.target.value\n    });\n  }\n\n  handleChangePassword(event) {\n    this.setState({\n        password: event.target.value\n    });\n  }\n\n\n  render() {\n\n    return (\n\t\t<div className=\"loginform\">\n        <h2>Login page</h2>\n        <br/>\n\n        <h5>Username: user</h5>\n        <h5>Password: user</h5>\n        <br/>\n            <Form onSubmit={this.handleClick}>\n              <Form.Group controlId=\"formBasicUsername\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter username\" value={this.state.keywords} onChange={this.handleChangeLogin}/>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.keywords} onChange={this.handleChangePassword}/>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                  Login\n              </Button>\n            </Form>\n\n\t\t</div>\n\t\t);\n\n  }\n\n\n}\n\nexport default LoginComponent","\n\nexport function add(a, b){\n    return a + b;\n}\n\n// get random int\nexport function get_random(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//get random double\nexport function get_random_double(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        let y = get_random(min_y, max_y);\n        result.push([i, y - s_dev, y + s_dev, y])\n    }\n\n    return result;\n}\n\nexport function scale_data(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_area_data(area_data, ranges, width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<area_data.length; i++){\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\n    }\n\n    return result;\n}\n\n\n/////////////\n// MOCKED DATA\n\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=min_x; i<=max_x; i++){\n        result.push([i, get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n\n// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\n\n\nexport function get_random_colors(number) {\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\n\n    return colors.slice(0, number);\n}\n\nexport function get_box_height(number){\n    if (number === 0){\n        return 0;\n    }\n    return 25*(number + 1) + 10;\n}\n\n\n///////////////////////////////\n// MOCKED DATA with DATES\n\n\nexport function get_random_mock_array_dates(dates, min_y, max_y){\n    let result = [];\n\n    for (let i=0; i<dates.length; i++){\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n\n//     return result;\n// }\n\nexport function scale_data_dates(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\n    let result = [];\n    let x_diff = Math.abs(ranges.max_x - ranges.min_x);\n    let y_diff = Math.abs(ranges.max_y - ranges.min_y);\n    \n    // console.log(\"*** ranges\")\n    // console.log(ranges)\n    // console.log(\"$$$$\")\n    // console.log(y_diff)\n    \n    let x_frame = width/(x_diff - 1);\n    let y_frame = height/y_diff;\n    // console.log(\"^^^^^^^^ \" + y_frame*(ranges.min_y))\n\n    for (let i=0; i<data.length; i++){\n        // console.log(data[i])\n        // if(i<255){\n        //     result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }else{\n        //     result.push([(data[i][0] + 256) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n        // if(i>77 && i< 95){\n        //     console.log([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][3] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][4] * y_frame - y_frame*(Math.abs(ranges.min_y))])\n        \n        \n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y), height - data[i][3] * y_frame + y_frame*(ranges.min_y), height - data[i][4] * y_frame + y_frame*(ranges.min_y)])\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y-20), height - data[i][3] * y_frame + y_frame*(ranges.min_y-20), height - data[i][4] * y_frame + y_frame*(ranges.min_y-20)])\n\n\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*ranges.min, height - data[i][3] * y_frame - y_frame*ranges.min, height - data[i][4] * y_frame - y_frame*ranges.min])\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][3] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][4] * y_frame - y_frame*(Math.abs(ranges.min_y))])\n    }\n\n    // console.log(result)\n\n    return result;\n}\n\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\n    let result = [];\n    \n\n\n\n    for (let i=0; i<dates.length; i++){\n        let s_d1 = get_random(2,8);\n        let s_d2 = get_random(2,8);\n        let random = get_random(min_y, max_y);\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\n    }\n\n    return result;\n}\n\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\n    let result = []\n\n    for(let i=0;i<number;i++){\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\n    }\n\n    // console.log(Object.keys(result[k_w][MA_Day_5+k_w]).length)\n// console.log(Object.keys(result))\n    // console.log(result)\n\n    return result\n\n}\n\nexport function scale_data_mocks(data_mocks_area_DATES1, data_mocks_area_DATES2, ranges, width, height, number_of_plots){\n    let scaled_data_mocks_area_DATES = []\n    let scaled_data_mocks_area_future_DATES = []\n\n    for (let i=0; i<number_of_plots; i++){\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data_mocks_area_DATES1[i], ranges, width, height));\n        // scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, 256));\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, data_mocks_area_DATES1[i].length - 1));\n    }\n\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\n}\n\nexport function get_data_map_area_DATES(data_mocks_area_DATES, array_length_dates, number_of_plots){\n\n    let data_map_area_DATES = []\n    // console.log(\"@@@@@\")\n    // console.log(\"@@@@@\" + array_length_dates)\n    // console.log(data_mocks_area_DATES)\n    \n    let counter = 0;\n\n\n    for(let i = 0; i<array_length_dates-2; i++) {\n        let y_data_normal = [];\n        let y_data_min = [];\n        let y_data_max = [];\n        let date;\n      \n        // if(console.log(data_mocks_area_DATES[0][i])=== undefined){\n        //     counter++;\n        //     console.log(\"@@@@@\" + counter)\n        // }\n      \n        date = data_mocks_area_DATES[0][i][1]\n      \n      \n        for(let j=0; j<number_of_plots; j++) {\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\n        }\n      \n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\n    }\n\n    return data_map_area_DATES;\n}\n\nexport function capitalizeString(string) {\n    return titleCase(string);\n}\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n    }\n    return splitStr.join(' '); \n }\n\nexport function get_historical_dates(){\n    let dates = []\n    dates.push(Date.UTC(2010, 0, 18))\n    dates.push(Date.UTC(2010, 1, 18))\n    dates.push( Date.UTC(2010, 2, 18))\n    dates.push(Date.UTC(2010, 3, 18))\n    dates.push( Date.UTC(2010, 4, 18))\n    dates.push( Date.UTC(2010, 5, 18))\n    dates.push( Date.UTC(2010, 6, 18))\n    dates.push( Date.UTC(2010, 7, 18))\n    // dates.push(Date.UTC(2010, 8, 18))\n    // dates.push( Date.UTC(2010, 9, 18))\n    // dates.push( Date.UTC(2010, 10, 18))\n    \n    return dates;\n}\n\nexport function get_forecasted_dates(){\n    let dates = []\n    // dates.push( Date.UTC(2010, 7, 18))\n    dates.push(Date.UTC(2010, 8, 18))\n    dates.push( Date.UTC(2010, 9, 18))\n\n    return dates;\n\n}\n\nexport function get_min_value(data){\n    // let min_result = data[0][0][3];\n    let min_result = 100;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][3]!==null && data[i][j][3] < min_result){\n                min_result = data[i][j][3]\n            }\n        }\n    }\n    // console.log(\"min@: \" + min_result)\n    return min_result\n}\n\nexport function get_max_value(data){\n    // let max_result = data[0][0][4];\n    let max_result = 0;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][4]!==null && data[i][j][4] > max_result){\n                max_result = data[i][j][4]\n            }\n        }\n    }\n    \n    return max_result\n}","import React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport { capitalizeString } from '../utils_dates/functions'\n\nclass TableComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      keywords: []\n\t\t};\n  }\n\n  render() {\n\n    var tableHeaders = this.props.tableData.headers.map(( entity, index ) => {\n      return (\n        <th key={index} className=\"align-top\">{entity}</th>\n      );\n    })\n\n    var tableRows = this.props.tableData.data.map(( entity, index ) => {\n      let cells = entity.map((e,i) => {\n\n        if(e !== null){\n          if(i>0){\n            return <td key = {i}>{e.toFixed(2)}</td>\n          }else{\n            return <td key = {i}>{capitalizeString(e)}</td>\n          }\n        }else{\n          if(i>0){\n            return <td key = {i}>{\"0.00\"}</td>\n          }else{\n            return <td key = {i}>{\"0.00\"}</td>\n          }\n        }\n      })\n      \n      return (\n        <tr key={index}>\n          <td>{index + 1}</td>\n          {cells}\n        </tr>\n      );\n    })\n\n    return (\n\t\t<div className=\"table_div\">\n      <span className=\"center\"><h3>{this.props.title}</h3></span>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th className=\"align-top\">#</th>\n            <th className=\"align-top\">Keyword</th>\n            {tableHeaders}\n          </tr>\n        </thead>\n        <tbody>\n          {tableRows}\n        </tbody>\n      </Table>\n\t\t</div>\n\t\t);\n  }\n}\n\nexport default TableComponent","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highchartsMap from \"highcharts/modules/map\";\nimport mapDataIE from \"@highcharts/map-collection/countries/us/us-all.geo.json\";\nhighchartsMap(Highcharts); // Initialize the map module\n\n// const data = [\n//     ['us-ma', 0],\n//     ['us-wa', 1],\n//     ['us-ca', 2],\n//     ['us-or', 3],\n//     ['us-wi', 4],\n//     ['us-me', 5],\n//     ['us-mi', 6],\n//     ['us-nv', 7],\n//     ['us-nm', 8],\n//     ['us-co', 9],\n//     ['us-wy', 10],\n//     ['us-ks', 11],\n//     ['us-ne', 12],\n//     ['us-ok', 13],\n//     ['us-mo', 14],\n//     ['us-il', 15],\n//     ['us-in', 16],\n//     ['us-vt', 17],\n//     ['us-ar', 18],\n//     ['us-tx', 19],\n//     ['us-ri', 20],\n//     ['us-al', 21],\n//     ['us-ms', 22],\n//     ['us-nc', 23],\n//     ['us-va', 24],\n//     ['us-ia', 25],\n//     ['us-md', 26],\n//     ['us-de', 27],\n//     ['us-pa', 28],\n//     ['us-nj', 29],\n//     ['us-ny', 30],\n//     ['us-id', 31],\n//     ['us-sd', 32],\n//     ['us-ct', 33],\n//     ['us-nh', 34],\n//     ['us-ky', 35],\n//     ['us-oh', 36],\n//     ['us-tn', 37],\n//     ['us-wv', 38],\n//     ['us-dc', 39],\n//     ['us-la', 40],\n//     ['us-fl', 41],\n//     ['us-ga', 42],\n//     ['us-sc', 43],\n//     ['us-mn', 44],\n//     ['us-mt', 45],\n//     ['us-nd', 46],\n//     ['us-az', 47],\n//     ['us-ut', 48],\n//     ['us-hi', 49],\n//     ['us-ak', 50],\n//     ['undefined', 51]\n// ];\n\nconst western_states = [\n  ['us-ca', \"#20e012\"],\n  ['us-or', \"#20e012\"],\n  ['us-id', \"#20e012\"],\n  ['us-mt', \"#20e012\"],\n  ['us-az', \"#20e012\"],\n  ['us-nv', \"#20e012\"],\n  ['us-wa', \"#20e012\"],\n  ['us-ut', \"#20e012\"]\n];\n\nconst central_states = [\n  ['us-wy', \"#BADA55\"],\n  ['us-nd', \"#BADA55\"],\n  ['us-sd', \"#BADA55\"],\n  ['us-co', \"#BADA55\"],\n  ['us-ks', \"#BADA55\"],\n  ['us-ky', \"#BADA55\"],\n  ['us-in', \"#BADA55\"],\n  ['us-wi', \"#BADA55\"],\n  ['us-ne', \"#BADA55\"],\n  ['us-ia', \"#BADA55\"],\n  ['us-mi', \"#BADA55\"],\n  ['us-mo', \"#BADA55\"],\n  ['us-il', \"#BADA55\"],\n  ['us-mn', \"#BADA55\"],\n  ['undefined', \"#BADA55\"]\n];\n\nconst eastern_states = [\n  ['us-oh', \"#003fed\"],\n  ['us-ny', \"#003fed\"],\n  ['us-nc', \"#003fed\"],\n  ['us-vt', \"#003fed\"],\n  ['us-wv', \"#003fed\"],\n  ['us-md', \"#003fed\"],\n  ['us-de', \"#003fed\"],\n  ['us-ri', \"#003fed\"],\n  ['us-ma', \"#003fed\"],\n  ['us-me', \"#003fed\"],\n  ['us-nh', \"#003fed\"],\n  ['us-sc', \"#003fed\"],\n  ['us-va', \"#003fed\"],\n  ['us-nj', \"#003fed\"],\n  ['us-dc', \"#003fed\"],\n  ['us-ct', \"#003fed\"],\n  ['us-pa', \"#003fed\"]\n];\n\nconst southern_states = [\n  ['us-tx', \"#e08a12\"],\n  ['us-nm', \"#e08a12\"],\n  ['us-tn', \"#e08a12\"],\n  ['us-ga', \"#e08a12\"],\n  ['us-fl', \"#e08a12\"],\n  ['us-ar', \"#e08a12\"],\n  ['us-ok', \"#e08a12\"],\n  ['us-la', \"#e08a12\"],\n  ['us-al', \"#e08a12\"],\n  ['us-hi', \"#e08a12\"],\n  ['us-ak', \"#e08a12\"],\n  ['us-ms', \"#e08a12\"]\n];\n\nclass Chart extends React.PureComponent {\n\n  constructor(props) {\n      super(props);\n\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  \n      this.state = {\n          mapOptions:  {\n              chart: {\n                height: this.props.height,\n\n                map: \"countries/ie/ie-all\",\n                events: {\n                    drilldown: function(e) {\n                      console.log('from drillDown');\n                    },\n                    drillup: function() {\n                      console.log('from drillUp');\n                    }\n                  },\n                panning: true,\n                panKey: 'shift'\n              },\n              tooltip: { \n                enabled: true,\n                formatter: function () {\n                  return '<b>' + this.point.name + '</b>';\n                },\n              },\n              legend: {\n                layout: \"vertical\",\n                align: \"right\",\n                verticalAlign: \"middle\",\n                enabled: false\n              },\n            \n              title: {\n                text: null\n              },\n            \n              mapNavigation: {\n                enabled: false,\n                buttonOptions: {\n                  verticalAlign: \"bottom\"\n                }\n              },\n            \n              plotOptions: {\n                map: {\n                  states: {\n\n                    color: \"#126c31\",\n\n                    hover: {\n                      color: \"#000000\",\n                      enabled: true,\n                      brightness: 0.5\n                    },\n                    \n                  }\n                },\n                series:{\n                    point:{\n                        events:{\n                            click: this.setHoverData.bind(this)\n                        }\n                    }\n                }\n              },\n            \n              series: [\n                // {\n                //   data: data,\n                //   mapData: mapDataIE,\n                //   name: \"USA\",\n                //   dataLabels: {\n                //       enabled: true,\n                //       format: \"{point.properties.postal-code}\"\n                //   }\n                // },\n\n                {\n                  data: western_states.concat(central_states).concat(eastern_states).concat(southern_states),\n                  keys: ['hc-key', 'color'],\n                  mapData: mapDataIE,\n                  name: \" \",\n                  dataLabels: {\n                      enabled: true,\n                      color: '#FFFFFF',\n                      format: \"{point.properties.postal-code}\"\n                  },\n                  showInLegend: false\n                },\n\n              ],\n\n              legend: {\n                enabled: true\n              },\n            \n              drilldown: {\n                activeDataLabelStyle: {\n                  color: \"#FFFFFF\",\n                  textDecoration: \"none\",\n                  textOutline: \"1px #000000\"\n                },\n                drillUpButton: {\n                  relativeTo: \"spacingBox\",\n                  position: {\n                    x: 0,\n                    y: 60\n                  }\n                }\n              }\n            }\n      };\n    }\n\n    setHoverData = (e) => {\n      // console.log(e.point[\"hc-key\"])\n      this.props.callbackFromApp(e.point[\"hc-key\"])\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  \n    \n    updateWindowDimensions() {\n      \n      // let div_width2 = this.divRef.current.clientWidth;\n      // let div_width = div_width2 - 2*85;\n      // let height = this.props.height - 2*85;\n  \n      this.setState({\n        mapOptions:  {\n          chart: {\n            height: this.props.height,\n\n            map: \"countries/ie/ie-all\",\n            events: {\n                drilldown: function(e) {\n                  console.log('from drillDown');\n                },\n                drillup: function() {\n                  console.log('from drillUp');\n                }\n              },\n            panning: true,\n            panKey: 'shift'\n          },\n          tooltip: { \n            enabled: true,\n            formatter: function () {\n              return '<b>' + this.point.name + '</b>';\n            },\n          },\n          legend: {\n            layout: \"vertical\",\n            align: \"right\",\n            verticalAlign: \"middle\",\n            enabled: false\n          },\n        \n          title: {\n            text: null\n          },\n        \n          mapNavigation: {\n            enabled: false,\n            buttonOptions: {\n              verticalAlign: \"bottom\"\n            }\n          },\n        \n          plotOptions: {\n            map: {\n              states: {\n\n                color: \"#126c31\",\n\n                hover: {\n                  color: \"#000000\",\n                  enabled: true,\n                  brightness: 0.5\n                },\n                \n              }\n            },\n            series:{\n                point:{\n                    events:{\n                        click: this.setHoverData.bind(this)\n                    }\n                }\n            }\n          },\n        \n          series: [\n            {\n              data: western_states.concat(central_states).concat(eastern_states).concat(southern_states),\n              keys: ['hc-key', 'color'],\n              mapData: mapDataIE,\n              name: \" \",\n              dataLabels: {\n                  enabled: true,\n                  color: '#FFFFFF',\n                  format: \"{point.properties.postal-code}\"\n              },\n              showInLegend: false\n            },\n          ],\n\n          legend: {\n            enabled: false\n          },\n        \n          drilldown: {\n            activeDataLabelStyle: {\n              color: \"#FFFFFF\",\n              textDecoration: \"none\",\n              textOutline: \"1px #000000\"\n            },\n            drillUpButton: {\n              relativeTo: \"spacingBox\",\n              position: {\n                x: 0,\n                y: 60\n              }\n            }\n          }\n        }         \n      });\n    }\n  \n    render() {\n        return (\n            <div className=\"map_content\">\n                <HighchartsReact\n                    constructorType={\"mapChart\"}\n                    highcharts={Highcharts}\n                    options={this.state.mapOptions} \n                />\n            </div>\n        );\n      }\n  }\n\n  export default Chart\n\n","\nlet w = 1100;\nlet h = 400;\n\nexport const appConfig = {\n\n\n  dimensions: {\n    box_width: 400,\n    box_height: 120\n  },\n\n  number_of_plots: 5,\n\n  // ranges_dates: {\n  //   max_x: (261 + 52 + 0),\n  //   // max_x: (100 + 52 + 0),\n  //   // max_x: (8 + 2 + 0),\n  //   min_x: 0,\n  //   max_y: 100,\n  //   min_y: 0,\n  //   // max_x_forecast: 53\n  // },\n\n  ranges_dates: {\n    max_x: (261 + 52 + 0),\n    // max_x: (100 + 52 + 0),\n    // max_x: (8 + 2 + 0),\n    min_x: 0,\n    max_y: 110,\n    min_y: -10,\n    // max_x_forecast: 53\n  },\n  // array_length_dates: 256,\n  // array_length_dates_forecast: 48,\n\n  array_length_dates: 261,\n  // array_length_dates: 100,\n  array_length_dates_forecast: 52,\n\n  // array_length_dates: 8,\n  // array_length_dates_forecast: 2,\n\n  KEYWORDS_URL: \"http://0.0.0.0:5000\",\n\n\n};\n//53","import { capitalizeString } from \"./functions\";\n\n\nfunction make_line (point, width) {\n\n    let line = `M 0 ${point} H ${width}`;\n    return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n}\n\nfunction make_yy_tick(x, y) {\n\n    let line = `M ${x-10} ${y} L ${x} ${y}`;\n    // return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\n    return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n}\n\nexport function get_lines (width, height, lines_number) {\n\n    let frame = height / lines_number;\n\n    let result = [];\n\n    for (let i=lines_number; i<=lines_number; i++){\n        let point = frame * i;\n        result.push(make_line(point,width))\n    }\n\n    return result;\n}\n\nexport function get_y_ticks (height, lines_number) {\n    let result = []\n\n    let frame = height / lines_number;\n\n    for (let i=0; i<=lines_number; i++){\n        let point = frame * i;\n        result.push(make_yy_tick(0,point))\n    }\n\n    return result\n}\n\n\nfunction make_x_tick(x, y) {\n\n    let line = `M ${x} ${y} L ${x} ${y + 10}`;\n    return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\n}\n\nexport function get_ticks(width, height, ticks_number){\n    let result = [];\n\n    let frame = width / (ticks_number - 1);\n\n    for (let i=0; i<ticks_number; i++){\n        let point = frame * i;\n        result.push(make_x_tick(point, height))\n    }\n\n    // let frame = width / (length - 1)\n    // for(let i=0; i<ticks_number; i++){\n    //     // result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n    //     result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[i][1])}</text>`)\n    // }\n\n    return result;\n}\n\nfunction make_y_tick(x, y, value) {\n    return `<text x=\"${x}\" text-anchor=\"end\" class=\"plot_ytick\" y=\"${y}\">${value}</text>`\n}\n\nexport function get_y_axis(x, y, height, lower_index, upper_index) {\n    let result = [];\n\n    let lines_number = upper_index - lower_index;\n\n    let frame = height / lines_number;\n\n    // let lower_index = 10 - lines_number;\n\n    let difference = Math.abs(lower_index)\n\n    // for(let i=0; i<=lines_number; i++){\n    //     result.push(make_y_tick(-20, height - frame*(i),i * 10));\n    // }\n\n    for(let i=lower_index; i<=upper_index; i++){\n        result.push(make_y_tick(-20, height - frame*(i -lower_index),i * 10));\n    }\n\n    let line = `M ${x} ${y} L ${x} ${y + height}`;\n    result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n\n    return result;\n}\n\nexport function prepare_title(title, width, height, x_trans, y_trans){\n    return `<text x=\"${width/2}\" class=\"plot_title\" text-anchor=\"middle\" y=\"${-y_trans/3}\">${title}</text>`\n}\n\n\n\nexport function prepare_x_axis(width, height, ticks_number, data_mock, title, y_trans){\n    let result = []\n\n    let length = Object.keys(data_mock).length;\n    let data_frame = Math.floor(length/(ticks_number-1));\n\n    let frame = width / (ticks_number - 1)\n\n    if(width<=700){\n        for(let i=0; i<ticks_number; i++){\n            result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 25}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n        }\n    }else{\n        for(let i=0; i<ticks_number; i++){\n            result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 25}\">${formatDate(data_mock[data_frame*i][1])}</text>`)\n        }\n    }\n\n    let line = `M 0 ${height} H ${width}`;\n\n    // console.log(\"***\")\n    // console.log(height)\n    // console.log(y_trans)\n\n    let height_trans = y_trans\n    // if(width>800){\n    //     height_trans = height_trans/2\n    // }\n\n    if(width>700){\n        result.push(`<text x=\"${width/2}\" text-anchor=\"middle\" class=\"plot_xaxis_title\" y=\"${height + height_trans - 30}\"><tspan>${title}</tspan></text>`)\n    }else{\n        result.push(`<text x=\"${width/2}\" text-anchor=\"middle\" class=\"plot_xaxis_title\" y=\"${height +40}\"><tspan>${title}</tspan></text>`)\n    }\n    result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n    \n    \n\n    return result \n\n}\n\n// export function get_x_axis(title, width, height, x_trans, y_trans){\n//     let result = []\n//     let line = `M 0 ${height} H ${width}`;\n\n//     // console.log(\"***\")\n//     // console.log(y_trans)\n//     let height_trans = y_trans\n//     if(width>800){\n//         height_trans = height_trans/2\n//     }\n\n//     result.push(`<text x=\"${width/2}\" text-anchor=\"middle\" class=\"plot_xaxis_title\" y=\"${height + height_trans + 10}\"><tspan>${title}</tspan></text>`)\n//     result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n    \n//     return result\n// }\n\nexport function get_y_axis_label(title, height, x_trans){\n    return `<g transform=\"translate(${-(x_trans/2 + 10)},${height/2})\"><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>${title}</tspan></text></g>`\n}\n\nexport function get_red_line(dimensions, ranges_dates){\n\n    let x_frame = dimensions.width/(ranges_dates.max_x-1)\n\n    // console.log(\"%%%%\")\n    // console.log(dimensions)\n    // console.log(ranges_dates)\n\n    // let x = x_frame * 256;\n    let x = x_frame * (dimensions.historical_data_length - 1);\n\n\n    return `<g>\n        <path fill=\"none\" class=\"plot_pointer_line\" d=\"M ${x} 0 L ${x} ${dimensions.height}\" stroke-dasharray=\"6\" data-z-index=\"0\"></path>\n    </g>`\n}\n\nexport function get_mark_line(mark_line, height){\n    return `<g transform=\"translate(${mark_line.pos}, 0)\">\n        <path fill=\"none\" data-z-index=\"0\" class=\"plot_mark_line\" d=\"M 0 0 L 0 ${height}\" visibility=\"${mark_line.visibility}\" />         \n    </g>`\n}\n\n// export function get_info_box2(info_box, box_width, box_height){ \n\n//     let y_data = [];\n//     // console.log(info_box.value_y)\n    \n//     if(info_box !== undefined && info_box.value_y !== undefined) {\n//         for(let i=0; i<info_box.colors.length; i++){\n//             y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n//             <text stroke=\"#343640\" opacity=\"1\" x=25 y=${(i + 1)*25 + 25}>Series ${i + 1} value y: ${info_box.value_y[2][i]}</text>`)\n//         }\n//     }\n\n//     let date = formatDate(info_box.value_x)\n    \n//     return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n//         <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n//         <text x=5 y=\"25\" class=\"plot_info_box_header\">Date: ${date}</text>\n//         ${y_data}\n//     </g>`\n// }\n\n// export function get_y_axis(x, y, height){\n//     let line = `M ${x} ${y} L ${x} ${y + height}`;\n//     return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n// }\n\n// <text x=25 y=${(i + 1)*25 + 25}>${capitalizeString(keywords[i])} </text>`)\n\nexport function get_info_box(info_box, box_width, box_height, keywords){ \n\n    let y_data = [];\n    \n    if(info_box !== undefined && info_box.value_y !== undefined) {\n        for(let i=0; i<info_box.colors.length; i++){\n            \n            if(info_box.value_y[3][i] !== null && info_box.value_y[2][i] !== null){\n                y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n                <text x=25 y=${(i + 1)*25 + 25}>${capitalizeString(keywords[i])} ${info_box.value_y[2][i].toFixed(1)} (min: ${info_box.value_y[3][i].toFixed(1)} | max: ${info_box.value_y[4][i].toFixed(1)})</text>`)\n            } else {\n                y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n                \n                 <text x=25 y=${(i + 1)*25 + 25}>${capitalizeString(keywords[i])} ${info_box.value_y[2][i].toFixed(1)}</text>`)\n            }\n\n            \n        }\n    }\n\n    let date = formatDate(info_box.value_x)\n    \n    return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n        <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n        <g class=\"plot_info_box_header\">\n        <text x=5 y=\"25\">Date: ${date}</text>\n        </g>\n        ${y_data}\n    </g>`\n}\n\nexport function prepare_legend(dimensions, colors, keywords){\n\n    let legend = [];\n    let keyword_sizes = []\n\n    if (dimensions.width2>700){\n        for(let i=0; i<colors.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            \n    \n            let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n    \n            legend.push(`\n                <g data-z-index=\"1\" transform=\"translate(${translation},3)\">\n                    <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n                    <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"12px\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n                </g>\n            `);\n            keyword_sizes.push(l);\n        }\n\n        let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n        let width_trans = (dimensions.width2)/2 - translation/2 - dimensions.x_trans;\n        let height_trans = dimensions.height + dimensions.y_trans/2;\n        height_trans = dimensions.height + dimensions.y_trans - dimensions.y_trans2;\n        height_trans = dimensions.height + dimensions.y_trans - 25;\n    \n        return `\n            <g transform=\"translate(${width_trans}, ${height_trans})\" class=\"plot_legend\" >\n                ${legend}\n            </g>`\n        \n    } else {\n        for(let i=0; i<keywords.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            keyword_sizes.push(l);\n        }\n\n        for(let i=0; i<colors.length; i++){\n            // let l = calculate_translate_for_legend(keywords[i].length);\n\n            let trans = Math.max(...keyword_sizes);\n    \n            legend.push(`\n                <g data-z-index=\"1\" transform=\"translate(${(dimensions.width)/2 - trans/2}, ${i*18+10})\">\n                    <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n                    <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"12px\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n                </g>\n            `);\n        }\n\n        let height_trans = dimensions.height + 43;\n    \n        return `\n            <g transform=\"translate(${0}, ${height_trans})\" class=\"plot_legend\" >\n                ${legend}\n            </g>`\n    }\n}\n\nfunction calculate_translate_for_legend(keyword_length){\n    return (6,5)*keyword_length + 55;\n}\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}\n\nfunction formatDate_monthly(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = mm+'-'+yyyy\n}\n\n// function capitalizeString(string) {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n// }\n","import React from 'react';\nimport { get_ticks, get_x_axis, prepare_x_axis } from \"../utils_dates/graphics\"\n\nclass AxisX extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n\n      let ticks = this.props.ticks + 1;\n      \n      if(this.props.dimensions.width<=700){\n        ticks = 6 + 1;\n      }\n\n      return (\n        <g>\n            {/* <g dangerouslySetInnerHTML={{ __html: get_x_axis(this.props.x_label, this.props.dimensions.width, this.props.dimensions.height, this.props.dimensions.x_trans, this.props.dimensions.y_trans) }} />  */}\n            <g dangerouslySetInnerHTML={{ __html: get_ticks(this.props.dimensions.width, this.props.dimensions.height, ticks) }} />\n            <g dangerouslySetInnerHTML={{ __html: prepare_x_axis(this.props.dimensions.width, this.props.dimensions.height, ticks, this.props.dates, this.props.x_label, this.props.dimensions.y_trans2) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default AxisX;","import React from 'react';\nimport { get_y_axis, get_y_axis_label } from \"../utils_dates/graphics\"\n\nclass AxisY extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            {/* <g dangerouslySetInnerHTML={{ __html: get_y_axis(0, 0, this.props.dimensions.height, this.props.y_number) }} /> */}\n            <g dangerouslySetInnerHTML={{ __html: get_y_axis(0, 0, this.props.dimensions.height, this.props.lower_bound/10, this.props.upper_bound/10) }} />\n            <g dangerouslySetInnerHTML={{ __html: get_y_axis_label(this.props.y_label, this.props.dimensions.height, this.props.dimensions.x_trans) }} />\n        </g>\n      );\n    }\n  }\n\n  export default AxisY;","import React from 'react';\nimport { prepare_legend } from \"../utils_dates/graphics\"\n\nclass Legend extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: prepare_legend(this.props.dimensions, this.props.colors, this.props.keywords) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Legend ;","import React from 'react';\nimport { get_red_line } from \"../utils_dates/graphics\"\n\nclass Static_Line extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_red_line(this.props.dimensions, this.props.ranges) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Static_Line ;","import React from 'react';\nimport { get_mark_line } from \"../utils_dates/graphics\"\n\nclass Pointer_Line extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_mark_line(this.props.mark_line, this.props.height) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Pointer_Line;","import React from 'react';\nimport { get_info_box } from \"../utils_dates/graphics\"\n\nclass Info_Box extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_info_box(this.props.info_box, this.props.width, this.props.height, this.props.keywords ) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Info_Box ;","      \nconst lineBottomCommand = point => `L ${point[0]} ${point[3]}`\n\nconst lineUpperCommand = point => `L ${point[0]} ${point[4]}`\n\n// const svgCommand = point => `L ${point[0]} ${point[2]}`\n\n\nconst svgPath = (points, command, color, dash) => {\n\n  const d = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[2]}`\n  : `${acc} ${bezierCommand(point, i, a)}`\n  , '')\n\n  return `<path d=\"${d}\" fill=\"none\" stroke=${color} stroke-width=2  data-z-index=\"0\" stroke-dasharray=${dash} pointer-events=\"none\" />`\n}\n// stroke-dasharray=\"4\"\n\nconst areaPath = (points, command, color) => {\n\n  let d1 = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[4]}`\n  : `${acc} ${bezierCommand_upper(point, i, a)}`\n  , '');\n\n\n\n  d1 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][3]}  `;\n\n  let d3 = points.reverse().reduce((acc, point, i, a) => i === 0\n  ? `L ${point[0]},${point[3]}`\n  : `${acc} ${bezierCommand_lower(point, i, a)}`\n  , '');\n\n\n  d3 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][4]}  `;\n\n  let d = d1 + d3;\n//////////////////////////////////////////\n\n  return `<path d=\"${d}\" fill=${color} stroke=${color} stroke-width=2 data-z-index=\"0\" pointer-events=\"none\" opacity=\"0.35\" />`\n}\n\n\n\nconst lineCommand = point => `L ${point[0]} ${point[2]}`\n\n    \nexport function area_path(data, color, dash=0, slice=0){\n\n\n    let result = [];\n    result.push(svgPath(data, lineCommand, color, dash));\n    result.push(areaPath(data.slice(slice), bezierCommand, color));\n\n    return result;\n}\n\n// export function area_path_future(data, color, dash=0){\n\n//   let result = [];\n\n//   // console.log(data)\n//   result.push(svgPath(data, lineCommand, color, 4 ));\n//   result.push(areaPath(data, bezierCommand, color));\n\n//   return result;\n// }\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// The smoothing ratio\nconst smoothing = 0.2\n\n\n// Properties of a line \n// I:  - pointA (array) [x,y]: coordinates\n//     - pointB (array) [x,y]: coordinates\n// O:  - (object) { length: l, angle: a }: properties of the line\nconst line = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[2] - pointA[2]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n// Position of a control point \n// I:  - current (array) [x, y]: current point coordinates\n//     - previous (array) [x, y]: previous point coordinates\n//     - next (array) [x, y]: next point coordinates\n//     - reverse (boolean, optional): sets the direction\n// O:  - (array) [x,y]: a tuple of coordinates\nconst controlPoint = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[2] + Math.sin(angle) * length\n  return [x, y]\n}\n\n// Create the bezier curve command \n// I:  - point (array) [x,y]: current point coordinates\n//     - i (integer): index of 'point' in the array 'a'\n//     - a (array): complete array of points coordinates\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\nconst bezierCommand = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[2]}`\n}\n\n\nconst bezierCommand_upper = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_upper(a[i - 1], a[i - 2], point)\n\n  // if(point[4]<0){\n  //   console.log(point[0]+ \": \" +point[1] + \" : \" + point[4])\n  // }\n  // end control point\n  const cpe = controlPoint_upper(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[4]}`\n}\n\nconst bezierCommand_lower = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_lower(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint_lower(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[3]}`\n}\n\n\nconst line_lower = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[3] - pointA[3]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nconst line_upper = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[4] - pointA[4]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst controlPoint_lower = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_lower(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[3] + Math.sin(angle) * length\n  return [x, y]\n}\n\nconst controlPoint_upper = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_upper(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[4] + Math.sin(angle) * length\n  return [x, y]\n}","import React from 'react';\nimport './App.css';\nimport { get_random_colors, get_box_height, get_data_mocks_area_DATES, scale_data_mocks, get_data_map_area_DATES, get_historical_dates, get_forecasted_dates, get_random_mock_area_array_dates, get_min_value, get_max_value} from './utils_dates/functions'\nimport { appConfig } from './utils_dates/config.js';\n\nimport AxisX from './components/AxisX';\nimport AxisY from './components/AxisY';\nimport Legend from './components/Legend';\nimport Static_Line from './components/Static_Line';\nimport Pointer_Line from './components/Pointer_Line';\nimport Info_Box from './components/Info_Box';\nimport Area_Path from './components/Area_Path';\nimport Plot from './components/Plot';\n\n\nlet dimensions = appConfig.dimensions;\n// let ranges = appConfig.ranges_dates;\nlet number_of_plots = appConfig.number_of_plots;\nlet array_length_dates = appConfig.array_length_dates + appConfig.array_length_dates_forecast;\n\n// dimensions.box_height = get_box_height(number_of_plots);\n\nlet historical_mock1 = get_random_mock_area_array_dates(get_historical_dates(),10,30)\nlet historical_mock2 = get_random_mock_area_array_dates(get_historical_dates(),40,80)\n\nlet forecasted_mock1 = get_random_mock_area_array_dates(get_forecasted_dates(),10,30)\nlet forecasted_mock2 = get_random_mock_area_array_dates(get_forecasted_dates(),40,80)\n\nlet historical_data_mock = [historical_mock1, historical_mock2]\nlet forecasted_data_mock = [forecasted_mock1, forecasted_mock2]\n\nfor(let i=0;i<historical_data_mock.length; i++){\n  forecasted_data_mock[i].unshift(historical_data_mock[i][historical_data_mock[i].length - 1])\n}\n\nclass Test_Plot_Dates extends React.Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleHoverOff = this.handleHoverOff.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    let x_trans = 85;\n    let y_trans = 85;\n    let y_trans2 = 85;\n\n    let width = window.innerWidth*(0.6) - 2*x_trans;\n    // let height = this.props.height - 2*y_trans;\n    let height = this.props.height - y_trans - y_trans2;\n\n    this.divRef = React.createRef();\n\n    let min_y = get_min_value(this.props.historical_data);\n    let max_y = get_max_value(this.props.historical_data);\n\n    // console.log(\"ranges\")\n    // console.log(this.props.ranges)\n\n    this.state = {\n        title: this.props.options.title,\n        ticks_number: array_length_dates,\n        x_label: this.props.options.x_label,\n        y_label: this.props.options.y_label,\n        mark_line: {\n          pos: 0,\n          visibility: \"hidden\"\n        },\n        info_box: {\n          pos_x: 0,\n          pos_y: 0,\n          visibility: \"hidden\",\n          colors: get_random_colors(this.props.number_of_series),\n        },\n       scaled_historical_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, this.props.ranges, width, height, this.props.number_of_series)[0],\n       scaled_forecasted_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, this.props.ranges, width, height, this.props.number_of_series)[1],\n\n      //  scaled_historical_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, width, height, 2)[0],\n      //  scaled_forecasted_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, width, height, 2)[1],\n\n       data_map_area_DATES: this.get_data_map_area_DATES(this.props.historical_data, this.props.forecasted_data, array_length_dates, this.props.number_of_series),\n      //  data_map_area_DATES: this.get_data_map_area_DATES(historical_data_mock, forecasted_data_mock, array_length_dates, 2),\n\n       colors: this.get_random_colors(this.props.number_of_series),\n       info_box_height: this.get_box_height(this.props.number_of_series),\n       number: this.props.number_of_series,\n       dimensions: {\n        width2: width,\n        width: width/1.1,\n        height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        y_trans2: y_trans2,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       },\n       min_y: get_min_value(this.props.historical_data),\n       max_y: get_max_value(this.props.historical_data), \n       y_number: 12,\n    };\n  }\n\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.divRef.current.focus();\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  scaling(){\n\n  }\n  \n  updateWindowDimensions() {\n    \n    let div_width2 = this.divRef.current.clientWidth;\n\n    let x_trans = this.props.x_trans;\n    let y_trans = this.props.y_trans;\n    let x_trans2 = this.props.x_trans2;\n    let y_trans2 = this.props.y_trans2;\n\n    let div_width = div_width2 - x_trans - x_trans2;\n    let height = this.props.height - y_trans - y_trans2;\n    // let height = this.props.height - 2*y_trans;\n\n    // console.log(\"$$\")\n    // console.log(height)\n    // console.log(y_trans2)\n\n    this.setState({\n      dimensions: {\n        width2: div_width2,\n        width: div_width,\n        height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        x_trans2: x_trans2,\n        y_trans2: y_trans2,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       },\n       scaled_historical_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, this.props.ranges, div_width, height, this.props.number_of_series)[0],\n       scaled_forecasted_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, this.props.ranges, div_width, height, this.props.number_of_series)[1],\n       min_y: get_min_value(this.props.historical_data),\n       max_y: get_max_value(this.props.historical_data), \n\n      //  scaled_historical_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, div_width, height, 2)[0],\n      //  scaled_forecasted_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, div_width, height, 2)[1],\n       \n    });\n  }\n\n  scale_data_mocks(data, forecasted_data, ranges, width, height , number_of_series){\n    return scale_data_mocks(data, forecasted_data, ranges, width, height , number_of_series)\n  }\n\n  get_data_map_area_DATES(data, forecasted_data, array_length_dates, number_of_series){\n    return get_data_map_area_DATES(get_data_mocks_area_DATES(data, forecasted_data, number_of_series), array_length_dates, number_of_series)\n  }\n\n  get_random_colors(number_of_series){\n    return get_random_colors(number_of_series)\n  }\n\n  get_box_height(number_of_series){\n    return get_box_height(number_of_series)\n  }\n\n\n  handleMouseMove(event) {\n    var e = event.target;\n    var dim = e.getBoundingClientRect();\n    var x = event.clientX - dim.left - this.state.dimensions.x_trans;\n    var y = event.clientY - dim.top - this.state.dimensions.y_trans;\n\n    // console.log(x)\n    // console.log(this.state.dimensions)\n\n\n    if(x >= 0 && y >= 0 && x <= this.state.dimensions.width && y <= this.state.dimensions.height){\n\n      let x_diff = this.props.ranges.max_x - this.props.ranges.min_x;  \n      let x_frame = this.state.dimensions.width/x_diff;\n      let key = Math.round((x)/x_frame);\n\n      if (this.state.data_map_area_DATES[key] !== undefined){\n\n        let left_index = Math.round((this.props.ranges.max_x - this.props.ranges.min_x)/2) - 1;\n        let right_index = Math.round((this.props.ranges.max_x - this.props.ranges.min_x)/2) + 1;\n\n        //keys left\n        for(let i=this.props.ranges.min_x; i<=key; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i\n          }\n        }\n\n        //keys right\n        for(let i=key; i<=this.props.ranges.max_x; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            right_index = i\n          }\n        }\n    \n        //index difference\n        this.setState({\n          mark_line: {\n            pos: x,  \n          },\n          info_box: {\n            pos_x: x,\n            pos_y: y,\n            value_x: this.state.data_map_area_DATES[key][1],\n            value_y: this.state.data_map_area_DATES[key],\n            colors: get_random_colors(this.props.number_of_series)\n          }\n        })\n        if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n          this.setState({\n            mark_line: {\n              pos: x\n            }\n          })\n        }\n      } else if (key !== undefined){\n////////////////////////////\n\n        let left_index = key - 1;\n        let right_index = key + 1;\n        \n        //keys left\n        for (let i=key; i>=0; i--) {\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i;\n            break;\n          }\n        }\n\n        //keys right\n        for (let i=key; i<=this.props.ranges.max_x; i++) {\n          if(this.state.data_map_area_DATES[i] !== undefined) {\n            right_index = i;\n            break;\n          }\n        }\n\n        //index difference\n        let left_diff = key - left_index;\n        let right_diff = right_index - key;\n\n\n        if((this.state.data_map_area_DATES[left_index] !== undefined) && (this.state.data_map_area_DATES[right_index] !== undefined)){\n          if (left_diff<=right_diff ) {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          } else {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          }\n\n        }\n/////////////////\n\n      }\n    } else if (x > this.state.dimensions.width || y > this.state.dimensions.height || x < this.state.dimensions.x_trans || y < this.state.dimensions.y_trans){\n      this.setState({\n        mark_line: {\n          visibility: \"hidden\",\n          pos: 9999\n        },\n        info_box: {\n          visibility: \"hidden\",\n          pos_x: 9999,\n          pos_y: 9999,\n          colors: get_random_colors(this.props.number_of_series)\n        }\n      })\n    }\n  }\n  \n\n  handleHoverOff(event) {\n    this.setState({\n      mark_line:{\n          pos: 0,\n          visibility: \"hidden\"\n      },\n      info_box: {\n        pos_x: 0,\n        pos_y: 0,\n        visibility: \"hidden\",\n        colors: get_random_colors(this.props.number_of_series)\n      }\n    })\n  }\n\n  render() {\n\n    // console.log(this.state.min_y)\n    // console.log(this.state.max_y)\n    // console.log(\"$$$$$\")\n    // console.log(Object.keys(this.state.data_map_area_DATES).length)\n    // console.log(this.state.data_map_area_DATES)\n    // console.log(this.state.dimensions)\n    // console.log(this.state.scaled_forecasted_data)\n\n    // console.log(this.state.scaled_historical_data)\n\n    let area_paths = this.state.scaled_historical_data.map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"none\"} slice={4}/>\n      );\n    });\n\n    let area_paths_future = this.state.scaled_forecasted_data.map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"dash\"} />\n      );\n    });\n\n    let v_b = \"0 0 \" + this.state.dimensions.width2 + \" \" + this.props.height;\n    let v_trans = \"translate(\" + this.state.dimensions.x_trans + \",\" + this.state.dimensions.y_trans + \")\";\n\n    const aa = this.state.max_y;\n    const bb = this.state.min_y;\n\n    // console.log(\"max: \" + aa)\n    // console.log(\"min: \" + bb)\n\n    let lower_bound = (Math.ceil(((bb)+1) / 10)-1) * 10\n    let upper_bound = Math.ceil((Math.abs(aa)+1) / 10) * 10\n\n\n    let calc_y_number = (upper_bound - lower_bound)/10;\n\n    // console.log(\"!! \" + lower_bound)\n    // console.log(\"@@ \" + upper_bound)\n    // console.log(\"## \" + calc_y_number)\n\n\n    return (\n      <div ref={this.divRef}>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" onMouseMove={this.handleMouseMove} onMouseLeave={this.handleHoverOff} className=\"test_plot\" width={this.state.dimensions.width2} height={this.props.height} viewBox={v_b}>\n          {/* <rect fill=\"#ffffff\" className=\"\" x=\"0\" y=\"0\" width={dimensions.width} height={dimensions.height} rx=\"0\" ry=\"0\"></rect>  */}\n            <g>\n              <g transform={v_trans}>\n\n                { area_paths }\n\n                { area_paths_future }\n                \n                {/* <Plot dimensions={this.state.dimensions} y_number={this.state.y_number} title={this.state.title} />\n\n                <AxisY dimensions={this.state.dimensions} y_number={this.state.y_number} y_label={this.state.y_label} /> */}\n\n                <Plot dimensions={this.state.dimensions} y_number={calc_y_number} title={this.state.title} />\n\n                <AxisY dimensions={this.state.dimensions} y_number={calc_y_number} y_label={this.state.y_label} lower_bound={lower_bound} upper_bound={upper_bound} />\n\n                {/* <AxisY dimensions={this.state.dimensions} y_number={calc_y_number} y_label={this.state.y_label} lower_bound={this.props.ranges.min_y} upper_bound={this.props.ranges.max_y} /> */}\n\n                <AxisX dimensions={this.state.dimensions} x_label={this.state.x_label} ticks={12} dates={this.state.data_map_area_DATES} />\n                \n                <Legend dimensions={this.state.dimensions} colors={this.state.colors} keywords={this.props.keywords} />\n\n                <Static_Line dimensions={this.state.dimensions} ranges={this.props.ranges} />\n\n                <Pointer_Line mark_line={this.state.mark_line} height={this.state.dimensions.height} />\n\n                <Info_Box info_box={this.state.info_box} width={dimensions.box_width} height={this.state.info_box_height} keywords={this.props.keywords}  />\n                \n              </g>\n            </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\n// function round(num,pre) {\n//   if( !pre) pre = 0;\n//   var pow = Math.pow(10,pre);\n//   return Math.round(num*pow)/pow;\n// }\n\nexport default Test_Plot_Dates;\n","import React from 'react';\nimport { area_path } from \"../utils_dates/area_path\";\n\nclass Area_Path extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      if(this.props.style === \"dash\"){\n        return (\n          <g dangerouslySetInnerHTML={{ __html: area_path(this.props.data, this.props.color, 4) }} />\n        );\n      } else {\n        return (\n          <g dangerouslySetInnerHTML={{ __html: area_path(this.props.data, this.props.color, 0, this.props.slice) }} />\n        );\n      }\n\n    }\n  }\n\n  export default Area_Path;","import React from 'react';\nimport { get_lines, prepare_title, get_y_ticks, get_y_axis } from \"../utils_dates/graphics\";\n\nclass Plot extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <g>\n                {/* <g dangerouslySetInnerHTML={{ __html: get_y_axis(0,0, this.props.dimensions.height) }} /> */}\n                {/* <g dangerouslySetInnerHTML={{ __html: get_lines(this.props.dimensions.width, this.props.dimensions.height, this.props.y_number) }} /> */}\n                <g dangerouslySetInnerHTML={{ __html: get_y_ticks(this.props.dimensions.height, this.props.y_number) }} />\n                <g dangerouslySetInnerHTML={{ __html: prepare_title(this.props.title, this.props.dimensions.width, this.props.dimensions.height, this.props.dimensions.x_trans, this.props.dimensions.y_trans) }} />\n            </g>\n        );\n    }\n  }\n\n  export default Plot;","import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport Loader from \"react-loader-spinner\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport KeywordPlot from './components/plot3'\n\nimport { get_min_value, get_max_value} from './utils_dates/functions'\nimport './styles/plot.css'\n\nimport { appConfig } from './config.js';\n\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\nconst ratio = 4.5;\n\n\n\nclass App extends React.PureComponent {\n  \n    constructor(props){\n      super(props);\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n      this.state = {\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        selected_time_frame: \"today 5-y\",\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n        historical_data: [],\n        forecasted_data: [],\n        rate_table_data: [],\n        growth_table_data: [],\n        x_trans: 85,\n        y_trans: 85,\n        fetching_results: false,\n      };\n\n      this.myRef = React.createRef();\n\n    }\n\n    fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(keywords, selected_state_name, selected_time_frame)\n    }\n\n    mapCallback = (state) => {\n      console.log(\"state \" + state)\n\n      this.setState({\n        displayResults: false,\n      });\n\n      this.fetchData(this.state.keywords, state, this.state.selected_time_frame)\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n        // let url = appConfig.KEYWORDS_NEW;\n        let url = \"/new\"\n\n        this.setState({\n          fetching_results: true,\n          keywords: keywords\n        })\n\n        // console.log(\"state \" + state)\n        \n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: keywords, region_state: state, time_frame: selected_time_frame\n          }),\n        }).then(res => res.json())\n            .then(\n            (result) => {\n\n              // console.log(\"result:\")\n              // console.log(result)\n\n              let width = this.myRef.current.offsetWidth;\n              let height = width/(ratio);\n              let x_trans = this.state.x_trans;\n              let y_trans = this.state.y_trans;\n\n              let x_trans2 = this.state.x_trans;\n              let y_trans2 = this.state.y_trans;\n\n              if(width>1800){\n                height = height;\n                x_trans = 80;\n                y_trans = 80;\n                x_trans2 = 50;\n                y_trans2 = 80;\n              }\n        \n              if(width<=1800){\n                height = (1.2)*width/(ratio);\n                x_trans = 80;\n                y_trans = 80;\n                x_trans2 = 50;\n                y_trans2 = 80;\n              }\n        \n              if(width<=1600){\n                height = (1.4)*width/(ratio);\n                x_trans = 80;\n                y_trans = 80;\n                x_trans2 = 50;\n                y_trans2 = 80;\n              }\n              \n              if(width<=1400){\n                height = (1.6)*width/(ratio);\n                x_trans = 70;\n                y_trans = 70;\n                x_trans2 = 50;\n                y_trans2 = 70;\n              }\n        \n              if(width<=1200){\n                height = (1.8)*width/(ratio);\n                x_trans = 60;\n                y_trans = 60;\n                x_trans2 = 50;\n                y_trans2 = 60;\n              }\n        \n              // if(width<=800){\n              //   height = (2.2)*width/(ratio);\n              //   x_trans = 60;\n              //   y_trans = 20;\n              //   x_trans2 = 20;\n              //   y_trans2 = 60;\n              // }\n        \n              if(width<=700){\n                height = (4)*width/(ratio);\n                x_trans = 60;\n                y_trans = 20;\n                x_trans2 = 50;\n                y_trans2 = keywords.length*14+ 80;\n              }\n        \n              this.setState({\n                  keywords: keywords,\n                  displayResults: true,\n                  region_state: state,\n                  selected_time_frame: selected_time_frame,\n                  displayResults: true,\n                  historical_data: this.get_historical_data(keywords, result),\n                  forecasted_data: this.get_forecasted_data(keywords, result),\n                  rate_table_data: this.getRateTableData(result.growth_rate_result),\n                  growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n                  div_height: height,\n                  x_trans: x_trans,\n                  y_trans: y_trans,\n                  x_trans2: x_trans2,\n                  y_trans2: y_trans2,\n                  fetching_results: false\n              });\n            }).catch(function(error) {\n                 console.log(\"error:\")\n                //  this.setState({\n                //   fetching_results: false\n                // });\n                 console.log(error)\n          })\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n      this.myRef.current.focus();\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n      let width = this.myRef.current.offsetWidth;\n      let height = width/(ratio);\n      let x_trans = this.state.x_trans;\n      let y_trans = this.state.y_trans;\n      let x_trans2 = this.state.x_trans;\n      let y_trans2 = this.state.y_trans;\n\n      if(width>1800){\n        height = height;\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n\n      if(width<=1800){\n        height = (1.2)*width/(ratio);\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n\n      if(width<=1600){\n        height = (1.4)*width/(ratio);\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n      \n      if(width<=1400){\n        height = (1.6)*width/(ratio);\n        x_trans = 70;\n        y_trans = 70;\n        x_trans2 = 50;\n        y_trans2 = 70;\n      }\n\n      if(width<=1200){\n        height = (1.8)*width/(ratio);\n        x_trans = 60;\n        y_trans = 60;\n        x_trans2 = 50;\n        y_trans2 = 70;\n      }\n\n      // if(width<=800){\n      //   height = (2.2)*width/(ratio);\n      //   x_trans = 60;\n      //   y_trans = 20;\n      //   x_trans2 = 20;\n      //   y_trans2 = 60;\n      // }\n\n      if(width<=700){\n        height = (4)*width/(ratio);\n        x_trans = 60;\n        y_trans = 20;\n        x_trans2 = 50;\n        y_trans2 = this.state.keywords.length*14 + 80;\n      }\n\n      this.setState({\n        div_height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        x_trans2: x_trans2,\n        y_trans2: y_trans2,\n      });\n    }\n\n    render() {\n\n      let ranges =  {\n        max_x: (261 + 52 + 0),\n        min_x: 0,\n        max_y: 120,\n        min_y: -10,\n      }\n\n        if(this.state.displayResults){\n\n          let min_y = get_min_value(this.state.historical_data);\n          let max_y = get_max_value(this.state.historical_data);\n\n          \n\n          let lower_bound = (Math.ceil(((min_y)+1) / 10)-1) * 10\n          let upper_bound = Math.ceil((Math.abs(max_y)+1) / 10) * 10\n\n          ranges = {\n            max_x: (this.state.historical_data[0].length + this.state.forecasted_data[0].length),\n            min_x: 0,\n            max_y: upper_bound,\n            min_y: lower_bound,\n          }\n\n          // console.log(\"ranges\")\n          // console.log(ranges)\n        }\n\n        // console.log(this.state.keywords.length)\n\n\n        if (this.state.authenticated) {\n\n        return (      \n          <div ref={this.myRef}>\n            <div className=\"main_results\">\n\n            {/* {this.state.keywords.length<=5 ? (<div>\n\n              \n\n            </div>) : (<div>Too many keywords</div>)\n              \n            } */}\n\n            {(this.state.displayResults) ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"results_div\">\n                    <div className=\"map_div\">\n                      {/* <Chart height={this.state.div_height} /> */}\n                      <Chart callbackFromApp={this.mapCallback} height={this.state.div_height} />\n                    </div>\n                    <div id=\"plot_div\"> \n                        {/* <Test_Plot_Dates options={this.state.options} ranges={ranges} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} x_trans2={this.state.x_trans2} y_trans2={this.state.y_trans2} /> */}\n                        {/* <Plot options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} /> */}\n                        <KeywordPlot options={this.state.options} ranges={ranges} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} x_trans2={this.state.x_trans2} y_trans2={this.state.y_trans2} />\n                    </div>\n              </div>\n              <div className=\"tables\">\n                <Row>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.rate_table_data} title={\"Growth Rate\"}/>\n                    </div>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.growth_table_data} title={\"Projected growth\"} />\n                    </div>\n                </Row>\n                <Row>\n                  {/* <KeywordPlot height={500} width={500} radius={50} color={\"red\"} /> */}\n                  {/* <KeywordPlot options={this.state.options} ranges={ranges} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} x_trans2={this.state.x_trans2} y_trans2={this.state.y_trans2} /> */}\n                </Row>\n              </div>\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"intro\">\n              </div>\n              {this.state.fetching_results ? (    \n                <div className=\"spinner\">\n                  <Loader type=\"Oval\" color=\"#007bff\" height={200} width={200} timeout={30000}/>\n                </div>   \n                ) : (<div></div>) }\n\n\n            </div>\n            )\n          }\n          </div>\n        </div>\n      );\n        } else{\n        return (\n        <div ref={this.myRef}>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n            \n        </div>);      \n        }\n    }\n    \n      getGrowthTableData(data){\n        let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"]\n        \n        \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n    \n      getRateTableData(data){\n        let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"]\n        let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: table_headers\n        }\n    \n        return result;\n      }\n\n      get_historical_data(keywords, result){\n        let data = []\n        // console.log(result)\n\n        for (let keyword in keywords) {  \n            let index = 0;\n\n            \n\n            let k_w = keywords[keyword]\n\n            \n\n            // console.log(Object.keys(result[k_w][MA_Day_5+k_w]).length)\n            // let arr = Object.keys(result[k_w][MA_Day_5+k_w]).slice(4,260).map(\n            let arr = Object.keys(result[k_w][MA_Day_5+k_w]).map(\n            function(key){\n              // console.log(result[k_w][UPPER_BAND+k_w][key])\n              if(index<4){\n                return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[k_w][k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n              }else{\n                return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n              }\n              \n              // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[k_w][k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n                // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n            );\n            data.push(arr)\n        }\n\n        return data;\n    }\n    \n    get_forecasted_data(keywords, result){\n    let data = []\n\n    for (let keyword in keywords) {  \n        let index = 0;\n        let k_w = keywords[keyword]\n\n        // console.log(Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).length)\n\n        let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n        function(key){\n\n          if(index<4){\n            return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n          }else{\n            return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n          }\n\n          // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n          //return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n          // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n        }\n        );\n        data.push(arr)\n    }\n\n    return data;\n    }\n}\n  \n  \nexport default App;\n","\nexport const appConfig = {\n    KEYWORDS_URL: \"http://localhost:5000/keywords\",\n    KEYWORDS_URL3: \"http://localhost:5000/all\",\n    KEYWORDS_URL2: \"http://0.0.0.0:5000/\",\n    KEYWORDS_NEW: \"http://0.0.0.0:5000/new\",\n    RATE_RANKER_URL: \"http://localhost:5000/rateranker\",\n    GROWTH_RANKER_URL: \"http://localhost:5000/growthranker\"\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n\nexport function add(a, b){\n    return a + b;\n}\n\n// get random int\nexport function get_random(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//get random double\nexport function get_random_double(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        let y = get_random(min_y, max_y);\n        result.push([i, y - s_dev, y + s_dev, y])\n    }\n\n    return result;\n}\n\nexport function scale_data(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_area_data(area_data, ranges, width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<area_data.length; i++){\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\n    }\n\n    return result;\n}\n\n\n/////////////\n// MOCKED DATA\n\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=min_x; i<=max_x; i++){\n        result.push([i, get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n\n// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\n\n\nexport function get_random_colors(number) {\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\n\n    return colors.slice(0, number);\n}\n\nexport function get_box_height(number){\n    if (number === 0){\n        return 0;\n    }\n    return 25*(number + 1) + 10;\n}\n\n\n///////////////////////////////\n// MOCKED DATA with DATES\n\n\nexport function get_random_mock_array_dates(dates, min_y, max_y){\n    let result = [];\n\n    for (let i=0; i<dates.length; i++){\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n\n//     return result;\n// }\n\nexport function scale_data_dates(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\n    let result = [];\n    let x_diff = Math.abs(ranges.max_x - ranges.min_x);\n    let y_diff = Math.abs(ranges.max_y - ranges.min_y);\n    \n    // console.log(\"*** ranges\")\n    // console.log(ranges)\n    // console.log(\"$$$$\")\n    // console.log(y_diff)\n    \n    let x_frame = width/(x_diff - 1);\n    let y_frame = height/y_diff;\n    // console.log(\"^^^^^^^^ \" + y_frame*(ranges.min_y))\n\n    for (let i=0; i<data.length; i++){\n        // console.log(data[i])\n        // if(i<255){\n        //     result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }else{\n        //     result.push([(data[i][0] + 256) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n        // if(i>77 && i< 95){\n        //     console.log([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][3] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][4] * y_frame - y_frame*(Math.abs(ranges.min_y))])\n        \n        \n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y), height - data[i][3] * y_frame + y_frame*(ranges.min_y), height - data[i][4] * y_frame + y_frame*(ranges.min_y)])\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y-20), height - data[i][3] * y_frame + y_frame*(ranges.min_y-20), height - data[i][4] * y_frame + y_frame*(ranges.min_y-20)])\n\n\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*ranges.min, height - data[i][3] * y_frame - y_frame*ranges.min, height - data[i][4] * y_frame - y_frame*ranges.min])\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][3] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][4] * y_frame - y_frame*(Math.abs(ranges.min_y))])\n    }\n\n    // console.log(result)\n\n    return result;\n}\n\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\n    let result = [];\n    \n\n\n\n    for (let i=0; i<dates.length; i++){\n        let s_d1 = get_random(2,8);\n        let s_d2 = get_random(2,8);\n        let random = get_random(min_y, max_y);\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\n    }\n\n    return result;\n}\n\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\n    let result = []\n\n    for(let i=0;i<number;i++){\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\n    }\n\n    // console.log(Object.keys(result[k_w][MA_Day_5+k_w]).length)\n// console.log(Object.keys(result))\n    // console.log(result)\n\n    return result\n\n}\n\nexport function scale_data_mocks(data_mocks_area_DATES1, data_mocks_area_DATES2, ranges, width, height, number_of_plots){\n    let scaled_data_mocks_area_DATES = []\n    let scaled_data_mocks_area_future_DATES = []\n\n    for (let i=0; i<number_of_plots; i++){\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data_mocks_area_DATES1[i], ranges, width, height));\n        // scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, 256));\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, data_mocks_area_DATES1[i].length - 1));\n    }\n\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\n}\n\nexport function get_data_map_area_DATES(data_mocks_area_DATES, array_length_dates, number_of_plots){\n\n    let data_map_area_DATES = []\n    // console.log(\"@@@@@\")\n    // console.log(\"@@@@@\" + array_length_dates)\n    // console.log(data_mocks_area_DATES)\n    \n    let counter = 0;\n\n\n    for(let i = 0; i<array_length_dates-2; i++) {\n        let y_data_normal = [];\n        let y_data_min = [];\n        let y_data_max = [];\n        let date;\n      \n        // if(console.log(data_mocks_area_DATES[0][i])=== undefined){\n        //     counter++;\n        //     console.log(\"@@@@@\" + counter)\n        // }\n      \n        date = data_mocks_area_DATES[0][i][1]\n      \n      \n        for(let j=0; j<number_of_plots; j++) {\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\n        }\n      \n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\n    }\n\n    return data_map_area_DATES;\n}\n\nexport function capitalizeString(string) {\n    return titleCase(string);\n}\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n    }\n    return splitStr.join(' '); \n }\n\nexport function get_historical_dates(){\n    let dates = []\n    dates.push(Date.UTC(2010, 0, 18))\n    dates.push(Date.UTC(2010, 1, 18))\n    dates.push( Date.UTC(2010, 2, 18))\n    dates.push(Date.UTC(2010, 3, 18))\n    dates.push( Date.UTC(2010, 4, 18))\n    dates.push( Date.UTC(2010, 5, 18))\n    dates.push( Date.UTC(2010, 6, 18))\n    dates.push( Date.UTC(2010, 7, 18))\n    // dates.push(Date.UTC(2010, 8, 18))\n    // dates.push( Date.UTC(2010, 9, 18))\n    // dates.push( Date.UTC(2010, 10, 18))\n    \n    return dates;\n}\n\nexport function get_forecasted_dates(){\n    let dates = []\n    // dates.push( Date.UTC(2010, 7, 18))\n    dates.push(Date.UTC(2010, 8, 18))\n    dates.push( Date.UTC(2010, 9, 18))\n\n    return dates;\n\n}\n\nexport function get_min_value(data){\n    // let min_result = data[0][0][3];\n    let min_result = 100;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][3]!==null && data[i][j][3] < min_result){\n                min_result = data[i][j][3]\n            }\n        }\n    }\n    // console.log(\"min@: \" + min_result)\n    return min_result\n}\n\nexport function get_max_value(data){\n    // let max_result = data[0][0][4];\n    let max_result = 0;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][4]!==null && data[i][j][4] > max_result){\n                max_result = data[i][j][4]\n            }\n        }\n    }\n    \n    return max_result\n}","\nlet w = 1100;\nlet h = 400;\n\nexport const appConfig = {\n\n\n  dimensions: {\n    box_width: 400,\n    box_height: 120\n  },\n\n  number_of_plots: 5,\n\n  // ranges_dates: {\n  //   max_x: (261 + 52 + 0),\n  //   // max_x: (100 + 52 + 0),\n  //   // max_x: (8 + 2 + 0),\n  //   min_x: 0,\n  //   max_y: 100,\n  //   min_y: 0,\n  //   // max_x_forecast: 53\n  // },\n\n  ranges_dates: {\n    max_x: (261 + 52 + 0),\n    // max_x: (100 + 52 + 0),\n    // max_x: (8 + 2 + 0),\n    min_x: 0,\n    max_y: 110,\n    min_y: -10,\n    // max_x_forecast: 53\n  },\n  // array_length_dates: 256,\n  // array_length_dates_forecast: 48,\n\n  array_length_dates: 261,\n  // array_length_dates: 100,\n  array_length_dates_forecast: 52,\n\n  // array_length_dates: 8,\n  // array_length_dates_forecast: 2,\n\n  KEYWORDS_URL: \"http://0.0.0.0:5000\",\n\n\n};\n//53","import React from 'react';\n\nexport const AxisX = props => {\n\n  let ticks = props.ticks + 1;\n    \n  if(props.dimensions.width<=700){\n    ticks = 6 + 1;\n  }\n\n\n  return (\n    <g>\n        {get_ticks(props.dimensions.width, props.dimensions.height, ticks)}\n        {prepare_x_axis(props.dimensions.width, props.dimensions.height, ticks, props.dates, props.x_label, props.dimensions.y_trans2)}\n    </g>\n  )\n};\n\nexport default AxisX\n\n\n\nfunction make_x_tick(x, y) {\n\n    let line = `M ${x} ${y} L ${x} ${y + 10}`;\n    return <path class=\"plot_xmark\" d={line} data-z-index=\"0\" />\n}\n\nfunction get_ticks(width, height, ticks_number){\n    let result = [];\n\n    let frame = width / (ticks_number - 1);\n\n    for (let i=0; i<ticks_number; i++){\n        let point = frame * i;\n        result.push(make_x_tick(point, height))\n    }\n\n    return result;\n}\n\n\nfunction prepare_x_axis(width, height, ticks_number, data_mock, title, y_trans){\n  let result = []\n\n  let length = Object.keys(data_mock).length;\n  let data_frame = Math.floor(length/(ticks_number-1));\n\n  let frame = width / (ticks_number - 1)\n\n  if(width<=700){\n      for(let i=0; i<ticks_number; i++){\n          result.push(<text x={frame*i} class=\"plot_xtick\" text-anchor=\"middle\" y={height + 25}>{formatDate_monthly(data_mock[data_frame*i][1])}</text>)\n      }\n  }else{\n      for(let i=0; i<ticks_number; i++){\n          result.push(<text x={frame*i} class=\"plot_xtick\" text-anchor=\"middle\" y={height + 25}>{formatDate(data_mock[data_frame*i][1])}</text>)\n      }\n  }\n\n  let line = `M 0 ${height} H ${width}`;\n\n  let height_trans = y_trans\n\n  if(width>700){\n      result.push(<text x={width/2} text-anchor=\"middle\" class=\"plot_xaxis_title\" y={height + height_trans - 30}><tspan>{title}</tspan></text>)\n  }else{\n      result.push(<text x={width/2} text-anchor=\"middle\" class=\"plot_xaxis_title\" y={height +40}><tspan>{title}</tspan></text>)\n  }\n  result.push(<path d={line} fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />)\n\n  return result \n\n}\n\n\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}\n\nfunction formatDate_monthly(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = mm+'-'+yyyy\n}","import React from 'react';\n\nexport const AxisY = props => {\n\n  let result = [];\n  let upper_index = props.upper_bound/10;\n  let lower_index = props.lower_bound/10;\n\n  let lines_number = upper_index - lower_index;\n\n  let frame = props.dimensions.height / lines_number;\n\n  let x = 0;\n  let y = 0;\n\n  let difference = Math.abs(lower_index)\n\n  for(let i=lower_index; i<=upper_index; i++){\n    result.push(make_y_tick(-20, props.dimensions.height - frame*(i -lower_index),i * 10));\n  }\n\n  let line = `M ${x} ${y} L ${x} ${y + props.dimensions.height}`;\n\n  return (\n    <g>\n      <g transform={`translate(${-(props.dimensions.x_trans/2 + 10)},${props.dimensions.height/2})`}><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>{props.y_label}</tspan></text></g>\n      {get_y_ticks(props.dimensions.height, props.y_number)}\n      {result}\n      <path d={line} fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />\n      \n    </g>\n  )\n\n};\n\nexport default AxisY\n\nfunction make_y_tick(x, y, value) {\n  return <text x={x} text-anchor=\"end\" class=\"plot_ytick\" y={y}>{value}</text>\n}\n\nfunction make_yy_tick(x, y) {\n\n  let line = `M ${x-10} ${y} L ${x} ${y}`;\n  return <path d={line} fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />\n}\n\nfunction get_y_ticks (height, lines_number) {\n  let result = []\n\n  let frame = height / lines_number;\n\n  for (let i=0; i<=lines_number; i++){\n      let point = frame * i;\n      result.push(make_yy_tick(0,point))\n  }\n\n  return result\n}","\n\nexport function add(a, b){\n    return a + b;\n}\n\n// get random int\nexport function get_random(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//get random double\nexport function get_random_double(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        let y = get_random(min_y, max_y);\n        result.push([i, y - s_dev, y + s_dev, y])\n    }\n\n    return result;\n}\n\nexport function scale_data(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_area_data(area_data, ranges, width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<area_data.length; i++){\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\n    }\n\n    return result;\n}\n\n\n/////////////\n// MOCKED DATA\n\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=min_x; i<=max_x; i++){\n        result.push([i, get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n\n// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\n\n\nexport function get_random_colors(number) {\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\n\n    return colors.slice(0, number);\n}\n\nexport function get_box_height(number){\n    if (number === 0){\n        return 0;\n    }\n    return 25*(number + 1) + 10;\n}\n\n\n///////////////////////////////\n// MOCKED DATA with DATES\n\n\nexport function get_random_mock_array_dates(dates, min_y, max_y){\n    let result = [];\n\n    for (let i=0; i<dates.length; i++){\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n\n//     return result;\n// }\n\nexport function scale_data_dates(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\n    let result = [];\n    let x_diff = Math.abs(ranges.max_x - ranges.min_x);\n    let y_diff = Math.abs(ranges.max_y - ranges.min_y);\n    \n    // console.log(\"*** ranges\")\n    // console.log(ranges)\n    // console.log(\"$$$$\")\n    // console.log(y_diff)\n    \n    let x_frame = width/(x_diff - 1);\n    let y_frame = height/y_diff;\n    // console.log(\"^^^^^^^^ \" + y_frame*(ranges.min_y))\n\n    for (let i=0; i<data.length; i++){\n        // console.log(data[i])\n        // if(i<255){\n        //     result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }else{\n        //     result.push([(data[i][0] + 256) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n        // if(i>77 && i< 95){\n        //     console.log([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][3] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][4] * y_frame - y_frame*(Math.abs(ranges.min_y))])\n        \n        \n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y), height - data[i][3] * y_frame + y_frame*(ranges.min_y), height - data[i][4] * y_frame + y_frame*(ranges.min_y)])\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y-20), height - data[i][3] * y_frame + y_frame*(ranges.min_y-20), height - data[i][4] * y_frame + y_frame*(ranges.min_y-20)])\n\n\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*ranges.min, height - data[i][3] * y_frame - y_frame*ranges.min, height - data[i][4] * y_frame - y_frame*ranges.min])\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][3] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][4] * y_frame - y_frame*(Math.abs(ranges.min_y))])\n    }\n\n    // console.log(result)\n\n    return result;\n}\n\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\n    let result = [];\n    \n\n\n\n    for (let i=0; i<dates.length; i++){\n        let s_d1 = get_random(2,8);\n        let s_d2 = get_random(2,8);\n        let random = get_random(min_y, max_y);\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\n    }\n\n    return result;\n}\n\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\n    let result = []\n\n    for(let i=0;i<number;i++){\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\n    }\n\n    // console.log(Object.keys(result[k_w][MA_Day_5+k_w]).length)\n// console.log(Object.keys(result))\n    // console.log(result)\n\n    return result\n\n}\n\nexport function scale_data_mocks(data_mocks_area_DATES1, data_mocks_area_DATES2, ranges, width, height, number_of_plots){\n    let scaled_data_mocks_area_DATES = []\n    let scaled_data_mocks_area_future_DATES = []\n\n    for (let i=0; i<number_of_plots; i++){\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data_mocks_area_DATES1[i], ranges, width, height));\n        // scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, 256));\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, data_mocks_area_DATES1[i].length - 1));\n    }\n\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\n}\n\nexport function get_data_map_area_DATES(data_mocks_area_DATES, array_length_dates, number_of_plots){\n\n    let data_map_area_DATES = []\n    // console.log(\"@@@@@\")\n    // console.log(\"@@@@@\" + array_length_dates)\n    // console.log(data_mocks_area_DATES)\n    \n    let counter = 0;\n\n\n    for(let i = 0; i<array_length_dates-2; i++) {\n        let y_data_normal = [];\n        let y_data_min = [];\n        let y_data_max = [];\n        let date;\n      \n        // if(console.log(data_mocks_area_DATES[0][i])=== undefined){\n        //     counter++;\n        //     console.log(\"@@@@@\" + counter)\n        // }\n      \n        date = data_mocks_area_DATES[0][i][1]\n      \n      \n        for(let j=0; j<number_of_plots; j++) {\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\n        }\n      \n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\n    }\n\n    return data_map_area_DATES;\n}\n\nexport function capitalizeString(string) {\n    return titleCase(string);\n}\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n    }\n    return splitStr.join(' '); \n }\n\nexport function get_historical_dates(){\n    let dates = []\n    dates.push(Date.UTC(2010, 0, 18))\n    dates.push(Date.UTC(2010, 1, 18))\n    dates.push( Date.UTC(2010, 2, 18))\n    dates.push(Date.UTC(2010, 3, 18))\n    dates.push( Date.UTC(2010, 4, 18))\n    dates.push( Date.UTC(2010, 5, 18))\n    dates.push( Date.UTC(2010, 6, 18))\n    dates.push( Date.UTC(2010, 7, 18))\n    // dates.push(Date.UTC(2010, 8, 18))\n    // dates.push( Date.UTC(2010, 9, 18))\n    // dates.push( Date.UTC(2010, 10, 18))\n    \n    return dates;\n}\n\nexport function get_forecasted_dates(){\n    let dates = []\n    // dates.push( Date.UTC(2010, 7, 18))\n    dates.push(Date.UTC(2010, 8, 18))\n    dates.push( Date.UTC(2010, 9, 18))\n\n    return dates;\n\n}\n\nexport function get_min_value(data){\n    // let min_result = data[0][0][3];\n    let min_result = 100;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][3]!==null && data[i][j][3] < min_result){\n                min_result = data[i][j][3]\n            }\n        }\n    }\n    // console.log(\"min@: \" + min_result)\n    return min_result\n}\n\nexport function get_max_value(data){\n    // let max_result = data[0][0][4];\n    let max_result = 0;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][4]!==null && data[i][j][4] > max_result){\n                max_result = data[i][j][4]\n            }\n        }\n    }\n    \n    return max_result\n}","import React from 'react';\nimport { capitalizeString } from \"./functions\";\n\nexport const Legend = props => {\n  return (\n    <g>{prepare_legend(props.dimensions, props.colors, props.keywords)}</g>\n  )\n};\n\nexport default Legend\n\n\n\n   function prepare_legend(dimensions, colors, keywords){\n\n    let legend = [];\n    let keyword_sizes = []\n\n    if (dimensions.width2>700){\n        for(let i=0; i<colors.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            \n    \n            let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n    \n            legend.push(\n              <g data-z-index=\"1\" transform={`translate(${translation},3)`}>\n                  <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke={colors[i]} stroke-width=\"0\"></path>\n                  <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"12px\" stroke=\"#6c757d\" stroke-width=\"0\">{capitalizeString(keywords[i])}</text>\n              </g>\n        );\n\n            keyword_sizes.push(l);\n        }\n\n        let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n        let width_trans = (dimensions.width2)/2 - translation/2 - dimensions.x_trans;\n        let height_trans = dimensions.height + dimensions.y_trans/2;\n        height_trans = dimensions.height + dimensions.y_trans - dimensions.y_trans2;\n        height_trans = dimensions.height + dimensions.y_trans - 25;\n    \n        return (\n            <g transform={`translate(${width_trans}, ${height_trans})`} class=\"plot_legend\" >\n                {legend}\n            </g>)\n        \n    } else {\n        for(let i=0; i<keywords.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            keyword_sizes.push(l);\n        }\n\n        for(let i=0; i<colors.length; i++){\n\n            let trans = Math.max(...keyword_sizes);\n    \n            legend.push(\n            <g data-z-index=\"1\" transform={`translate(${(dimensions.width)/2 - trans/2}, ${i*18+10})`}>\n                <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke={colors[i]} stroke-width=\"0\"></path>\n                <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"12px\" stroke=\"#6c757d\" stroke-width=\"0\">{capitalizeString(keywords[i])}</text>\n            </g>\n        );\n        }\n\n        let height_trans = dimensions.height + 43;\n    \n        return (\n            <g transform={`translate(${0}, ${height_trans})`} class=\"plot_legend\" >\n                {legend}\n            </g>)\n    }\n}\n\nfunction calculate_translate_for_legend(keyword_length){\n    return (6,5)*keyword_length + 55;\n}","import React from 'react';\n\nexport const Static_Line = props => {\n\n  let x_frame = props.dimensions.width/(props.ranges.max_x-1)\n  let x = x_frame * (props.dimensions.historical_data_length - 1);\n\n  return (\n    <g>\n        <path fill=\"none\" class=\"plot_pointer_line\" d={`M ${x} 0 L ${x} ${props.dimensions.height}`} stroke-dasharray=\"6\" data-z-index=\"0\"></path>\n    </g>\n  )\n};\n\nexport default Static_Line","import React from 'react';\n\nexport const Pointer_Line = props => {\n  return (\n    <g transform={`translate(${props.mark_line.pos}, 0)`}>\n      <path fill=\"none\" data-z-index=\"0\" class=\"plot_mark_line\" d={`M 0 0 L 0 ${props.height}`} visibility={`mark_line.visibility`} />         \n    </g>\n  )\n};\n\nexport default Pointer_Line","import React from 'react';\nimport { capitalizeString } from \"./functions\";\n\n  export const Info_Box = props => {\n    return (\n      <g>\n        {get_info_box(props.info_box, props.width, props.height, props.keywords)}\n      </g>\n    )\n  };\n  \n  export default Info_Box\n\n\n\nfunction get_info_box(info_box, box_width, box_height, keywords){ \n\n  let y_data = [];\n  \n  if(info_box !== undefined && info_box.value_y !== undefined) {\n      for(let i=0; i<info_box.colors.length; i++){\n          \n          if(info_box.value_y[3][i] !== null && info_box.value_y[2][i] !== null){\n              y_data.push(<g><path fill=\"none\" d={`M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}`} stroke={info_box.colors[i]} strokeWidth=\"2\" opacity=\"1\"></path>\n              <text x=\"25\" y={(i + 1)*25 + 25}>{capitalizeString(keywords[i])} {info_box.value_y[2][i].toFixed(1)} (min: {info_box.value_y[3][i].toFixed(1)} | max: {info_box.value_y[4][i].toFixed(1)})</text></g>)\n          } else {\n              y_data.push(<g><path fill=\"none\" d={`M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}`} stroke={info_box.colors[i]} strokeWidth=\"2\" opacity=\"1\"></path>\n              \n                <text x=\"25\" y={(i + 1)*25 + 25}>{capitalizeString(keywords[i])} {info_box.value_y[2][i].toFixed(1)}</text></g>)\n          }\n\n          \n      }\n  }\n\n  let date = formatDate(info_box.value_x)\n  \n\n  return (\n  <g transform={`translate(${info_box.pos_x}, ${info_box.pos_y})`} data-z-index=\"1\" class=\"plot_info_box\" visibility={info_box.visibility}>\n    <rect x=\"0\" y=\"0\" width={box_width} height={box_height}  />   \n    <g class=\"plot_info_box_header\">\n      <text x=\"5\" y=\"25\">Date: {date}</text>\n    </g>\n    {y_data}\n  </g>)\n}\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}","import React from 'react';\n\nexport const Area_Path = props => {\n  if(props.style === \"dash\"){\n    return (\n      <g>{area_path(props.data, props.color, 4)}</g>\n    );\n  } else {\n    return (\n      <g>{area_path(props.data, props.color, 0, props.slice)}</g>\n    );\n  }\n};\n\nexport default Area_Path\n\n\n\n////////////////\n\nconst svgPath = (points, command, color, dash) => {\n\n  const d = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[2]}`\n  : `${acc} ${bezierCommand(point, i, a)}`\n  , '')\n\n  return <path d={d} fill=\"none\" stroke={color} stroke-width=\"2\"  data-z-index=\"0\" stroke-dasharray={dash} pointer-events=\"none\" />\n}\n\nconst areaPath = (points, command, color) => {\n\n  let d1 = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[4]}`\n  : `${acc} ${bezierCommand_upper(point, i, a)}`\n  , '');\n\n\n\n  d1 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][3]}  `;\n\n  let d3 = points.reverse().reduce((acc, point, i, a) => i === 0\n  ? `L ${point[0]},${point[3]}`\n  : `${acc} ${bezierCommand_lower(point, i, a)}`\n  , '');\n\n\n  d3 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][4]}  `;\n\n  let d = d1 + d3;\n//////////////////////////////////////////\n\n  return <path d={d} fill={color} stroke={color} stroke-width=\"2\" data-z-index=\"0\" pointer-events=\"none\" opacity=\"0.35\" />\n}\n\n\n\nconst lineCommand = point => `L ${point[0]} ${point[2]}`\n\n    \nexport function area_path(data, color, dash=0, slice=0){\n\n\n    let result = [];\n    result.push(svgPath(data, lineCommand, color, dash));\n    result.push(areaPath(data.slice(slice), bezierCommand, color));\n\n    return result;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// The smoothing ratio\nconst smoothing = 0.2\n\n\n// Properties of a line \n// I:  - pointA (array) [x,y]: coordinates\n//     - pointB (array) [x,y]: coordinates\n// O:  - (object) { length: l, angle: a }: properties of the line\nconst line = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[2] - pointA[2]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n// Position of a control point \n// I:  - current (array) [x, y]: current point coordinates\n//     - previous (array) [x, y]: previous point coordinates\n//     - next (array) [x, y]: next point coordinates\n//     - reverse (boolean, optional): sets the direction\n// O:  - (array) [x,y]: a tuple of coordinates\nconst controlPoint = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[2] + Math.sin(angle) * length\n  return [x, y]\n}\n\n// Create the bezier curve command \n// I:  - point (array) [x,y]: current point coordinates\n//     - i (integer): index of 'point' in the array 'a'\n//     - a (array): complete array of points coordinates\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\nconst bezierCommand = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[2]}`\n}\n\n\nconst bezierCommand_upper = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_upper(a[i - 1], a[i - 2], point)\n\n  // if(point[4]<0){\n  //   console.log(point[0]+ \": \" +point[1] + \" : \" + point[4])\n  // }\n  // end control point\n  const cpe = controlPoint_upper(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[4]}`\n}\n\nconst bezierCommand_lower = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_lower(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint_lower(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[3]}`\n}\n\n\nconst line_lower = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[3] - pointA[3]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nconst line_upper = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[4] - pointA[4]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst controlPoint_lower = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_lower(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[3] + Math.sin(angle) * length\n  return [x, y]\n}\n\nconst controlPoint_upper = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_upper(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[4] + Math.sin(angle) * length\n  return [x, y]\n}","// import React from 'react';\n// import KeywordPlot2 from './parts/KeywordPlot2'\n\n// export class KeywordPlot extends React.Component {\t\n\n//   constructor(props) {\n//     super(props);\n//   }\n\n//   render() {\n//     return (<div>hello2\n//         {/* <KeywordPlot2 /> */}\n//         <KeywordPlot2 width={this.props.width} height={this.props.height} radius={this.props.radius} color={this.props.color} />\n//     </div>\n//     );\n//   }\n// }\n\n// // export default KeywordPlot;\n\nimport React from 'react';\nimport './App.css';\nimport { get_random_colors, get_box_height, get_data_mocks_area_DATES, scale_data_mocks, get_data_map_area_DATES, get_historical_dates, get_forecasted_dates, get_random_mock_area_array_dates, get_min_value, get_max_value} from './utils_dates/functions'\nimport { appConfig } from './utils_dates/config.js';\n\nimport AxisX from './parts/AxisX';\nimport AxisY from './parts/AxisY';\nimport Legend from './parts/Legend';\nimport Static_Line from './parts/Static_Line';\nimport Pointer_Line from './parts/Pointer_Line';\nimport Info_Box from './parts/Info_Box';\nimport Area_Path from './parts/Area_Path';\nimport Plot from './parts/Plot';\n\n\nlet dimensions = appConfig.dimensions;\n// let ranges = appConfig.ranges_dates;\n// let number_of_plots = appConfig.number_of_plots;\nlet array_length_dates = appConfig.array_length_dates + appConfig.array_length_dates_forecast;\n\n// dimensions.box_height = get_box_height(number_of_plots);\n\nlet historical_mock1 = get_random_mock_area_array_dates(get_historical_dates(),10,30)\nlet historical_mock2 = get_random_mock_area_array_dates(get_historical_dates(),40,80)\n\nlet forecasted_mock1 = get_random_mock_area_array_dates(get_forecasted_dates(),10,30)\nlet forecasted_mock2 = get_random_mock_area_array_dates(get_forecasted_dates(),40,80)\n\nlet historical_data_mock = [historical_mock1, historical_mock2]\nlet forecasted_data_mock = [forecasted_mock1, forecasted_mock2]\n\nfor(let i=0;i<historical_data_mock.length; i++){\n  forecasted_data_mock[i].unshift(historical_data_mock[i][historical_data_mock[i].length - 1])\n}\n\nexport class KeywordPlot extends React.Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleHoverOff = this.handleHoverOff.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    let x_trans = 85;\n    let y_trans = 85;\n    let y_trans2 = 85;\n\n    let width = window.innerWidth*(0.6) - 2*x_trans;\n    // let height = this.props.height - 2*y_trans;\n    let height = this.props.height - y_trans - y_trans2;\n\n    this.divRef = React.createRef();\n\n    let min_y = get_min_value(this.props.historical_data);\n    let max_y = get_max_value(this.props.historical_data);\n\n    // console.log(\"ranges\")\n    // console.log(this.props.ranges)\n\n    this.state = {\n        title: this.props.options.title,\n        ticks_number: array_length_dates,\n        x_label: this.props.options.x_label,\n        y_label: this.props.options.y_label,\n        mark_line: {\n          pos: 0,\n          visibility: \"hidden\"\n        },\n        info_box: {\n          pos_x: 0,\n          pos_y: 0,\n          visibility: \"hidden\",\n          colors: get_random_colors(this.props.number_of_series),\n        },\n       scaled_historical_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, this.props.ranges, width, height, this.props.number_of_series)[0],\n       scaled_forecasted_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, this.props.ranges, width, height, this.props.number_of_series)[1],\n\n      //  scaled_historical_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, width, height, 2)[0],\n      //  scaled_forecasted_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, width, height, 2)[1],\n\n       data_map_area_DATES: this.get_data_map_area_DATES(this.props.historical_data, this.props.forecasted_data, array_length_dates, this.props.number_of_series),\n      //  data_map_area_DATES: this.get_data_map_area_DATES(historical_data_mock, forecasted_data_mock, array_length_dates, 2),\n\n       colors: this.get_random_colors(this.props.number_of_series),\n       info_box_height: this.get_box_height(this.props.number_of_series),\n       number: this.props.number_of_series,\n       dimensions: {\n        width2: width,\n        width: width/1.1,\n        height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        y_trans2: y_trans2,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       },\n       min_y: get_min_value(this.props.historical_data),\n       max_y: get_max_value(this.props.historical_data), \n       y_number: 12,\n    };\n  }\n\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.divRef.current.focus();\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  scaling(){\n\n  }\n  \n  updateWindowDimensions() {\n    \n    let div_width2 = this.divRef.current.clientWidth;\n\n    let x_trans = this.props.x_trans;\n    let y_trans = this.props.y_trans;\n    let x_trans2 = this.props.x_trans2;\n    let y_trans2 = this.props.y_trans2;\n\n    let div_width = div_width2 - x_trans - x_trans2;\n    let height = this.props.height - y_trans - y_trans2;\n    // let height = this.props.height - 2*y_trans;\n\n    // console.log(\"$$\")\n    // console.log(height)\n    // console.log(y_trans2)\n\n    this.setState({\n      dimensions: {\n        width2: div_width2,\n        width: div_width,\n        height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        x_trans2: x_trans2,\n        y_trans2: y_trans2,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       },\n       scaled_historical_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, this.props.ranges, div_width, height, this.props.number_of_series)[0],\n       scaled_forecasted_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, this.props.ranges, div_width, height, this.props.number_of_series)[1],\n       min_y: get_min_value(this.props.historical_data),\n       max_y: get_max_value(this.props.historical_data), \n\n      //  scaled_historical_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, div_width, height, 2)[0],\n      //  scaled_forecasted_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, div_width, height, 2)[1],\n       \n    });\n  }\n\n  scale_data_mocks(data, forecasted_data, ranges, width, height , number_of_series){\n    return scale_data_mocks(data, forecasted_data, ranges, width, height , number_of_series)\n  }\n\n  get_data_map_area_DATES(data, forecasted_data, array_length_dates, number_of_series){\n    return get_data_map_area_DATES(get_data_mocks_area_DATES(data, forecasted_data, number_of_series), array_length_dates, number_of_series)\n  }\n\n  get_random_colors(number_of_series){\n    return get_random_colors(number_of_series)\n  }\n\n  get_box_height(number_of_series){\n    return get_box_height(number_of_series)\n  }\n\n\n  handleMouseMove(event) {\n    var e = event.target;\n    var dim = e.getBoundingClientRect();\n    var x = event.clientX - dim.left - this.state.dimensions.x_trans;\n    var y = event.clientY - dim.top - this.state.dimensions.y_trans;\n\n    // console.log(x)\n    // console.log(this.state.dimensions)\n\n\n    if(x >= 0 && y >= 0 && x <= this.state.dimensions.width && y <= this.state.dimensions.height){\n\n      let x_diff = this.props.ranges.max_x - this.props.ranges.min_x;  \n      let x_frame = this.state.dimensions.width/x_diff;\n      let key = Math.round((x)/x_frame);\n\n      if (this.state.data_map_area_DATES[key] !== undefined){\n\n        let left_index = Math.round((this.props.ranges.max_x - this.props.ranges.min_x)/2) - 1;\n        let right_index = Math.round((this.props.ranges.max_x - this.props.ranges.min_x)/2) + 1;\n\n        //keys left\n        for(let i=this.props.ranges.min_x; i<=key; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i\n          }\n        }\n\n        //keys right\n        for(let i=key; i<=this.props.ranges.max_x; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            right_index = i\n          }\n        }\n    \n        //index difference\n        this.setState({\n          mark_line: {\n            pos: x,  \n          },\n          info_box: {\n            pos_x: x,\n            pos_y: y,\n            value_x: this.state.data_map_area_DATES[key][1],\n            value_y: this.state.data_map_area_DATES[key],\n            colors: get_random_colors(this.props.number_of_series)\n          }\n        })\n        if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n          this.setState({\n            mark_line: {\n              pos: x\n            }\n          })\n        }\n      } else if (key !== undefined){\n////////////////////////////\n\n        let left_index = key - 1;\n        let right_index = key + 1;\n        \n        //keys left\n        for (let i=key; i>=0; i--) {\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i;\n            break;\n          }\n        }\n\n        //keys right\n        for (let i=key; i<=this.props.ranges.max_x; i++) {\n          if(this.state.data_map_area_DATES[i] !== undefined) {\n            right_index = i;\n            break;\n          }\n        }\n\n        //index difference\n        let left_diff = key - left_index;\n        let right_diff = right_index - key;\n\n\n        if((this.state.data_map_area_DATES[left_index] !== undefined) && (this.state.data_map_area_DATES[right_index] !== undefined)){\n          if (left_diff<=right_diff ) {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          } else {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          }\n\n        }\n/////////////////\n\n      }\n    } else if (x > this.state.dimensions.width || y > this.state.dimensions.height || x < this.state.dimensions.x_trans || y < this.state.dimensions.y_trans){\n      this.setState({\n        mark_line: {\n          visibility: \"hidden\",\n          pos: 9999\n        },\n        info_box: {\n          visibility: \"hidden\",\n          pos_x: 9999,\n          pos_y: 9999,\n          colors: get_random_colors(this.props.number_of_series)\n        }\n      })\n    }\n  }\n  \n\n  handleHoverOff(event) {\n    this.setState({\n      mark_line:{\n          pos: 0,\n          visibility: \"hidden\"\n      },\n      info_box: {\n        pos_x: 0,\n        pos_y: 0,\n        visibility: \"hidden\",\n        colors: get_random_colors(this.props.number_of_series)\n      }\n    })\n  }\n\n  render() {\n\n    // console.log(this.state.min_y)\n    // console.log(this.state.max_y)\n    // console.log(\"$$$$$\")\n    // console.log(Object.keys(this.state.data_map_area_DATES).length)\n    // console.log(this.state.data_map_area_DATES)\n    // console.log(this.state.dimensions)\n    // console.log(this.state.scaled_forecasted_data)\n\n    // console.log(this.state.scaled_historical_data)\n\n    let area_paths = this.state.scaled_historical_data.map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"none\"} slice={4}/>\n      );\n    });\n\n    let area_paths_future = this.state.scaled_forecasted_data.map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"dash\"} />\n      );\n    });\n\n    let v_b = \"0 0 \" + this.state.dimensions.width2 + \" \" + this.props.height;\n    let v_trans = \"translate(\" + this.state.dimensions.x_trans + \",\" + this.state.dimensions.y_trans + \")\";\n\n    const aa = this.state.max_y;\n    const bb = this.state.min_y;\n\n    // console.log(\"max: \" + aa)\n    // console.log(\"min: \" + bb)\n\n    let lower_bound = (Math.ceil(((bb)+1) / 10)-1) * 10\n    let upper_bound = Math.ceil((Math.abs(aa)+1) / 10) * 10\n\n\n    let calc_y_number = (upper_bound - lower_bound)/10;\n\n    // console.log(\"!! \" + lower_bound)\n    // console.log(\"@@ \" + upper_bound)\n    // console.log(\"## \" + calc_y_number)\n\n\n    return (\n      <div ref={this.divRef}>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" onMouseMove={this.handleMouseMove} onMouseLeave={this.handleHoverOff} className=\"test_plot\" width={this.state.dimensions.width2} height={this.props.height} viewBox={v_b}>\n          {/* <rect fill=\"#ffffff\" className=\"\" x=\"0\" y=\"0\" width={dimensions.width} height={dimensions.height} rx=\"0\" ry=\"0\"></rect>  */}\n            <g>\n              <g transform={v_trans}>\n\n                { area_paths }\n\n                { area_paths_future }\n                \n                <Plot dimensions={this.state.dimensions} y_number={this.state.y_number} title={this.state.title} />\n\n                <AxisY dimensions={this.state.dimensions} y_number={calc_y_number} y_label={this.state.y_label} lower_bound={lower_bound} upper_bound={upper_bound} />\n\n                <AxisX dimensions={this.state.dimensions} x_label={this.state.x_label} ticks={12} dates={this.state.data_map_area_DATES} />\n                \n                <Legend dimensions={this.state.dimensions} colors={this.state.colors} keywords={this.props.keywords} />\n\n                <Static_Line dimensions={this.state.dimensions} ranges={this.props.ranges} />\n\n                <Pointer_Line mark_line={this.state.mark_line} height={this.state.dimensions.height} />\n\n                <Info_Box info_box={this.state.info_box} width={dimensions.box_width} height={this.state.info_box_height} keywords={this.props.keywords}  />\n                \n              </g>\n            </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\n// function round(num,pre) {\n//   if( !pre) pre = 0;\n//   var pow = Math.pow(10,pre);\n//   return Math.round(num*pow)/pow;\n// }\n\nexport default KeywordPlot;\n","import React from 'react';\n\nexport const Plot = props => {\n    return (\n        <g>\n            <text x={props.dimensions.width/2} class=\"plot_title\" text-anchor=\"middle\" y={-props.dimensions.y_trans/3}>{props.title}</text>\n        </g>\n    )\n};\n\nexport default Plot;\n","import { KeywordPlot } from \"./KeywordPlot\";\n\nexport const Plot = {\n    KeywordPlot,\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Spinner } from \"./loader\";\nimport { Plot } from \"./plot\";\n\nconst componentNames = [\n  // \"Oval\",\n  // \"Puff\",\n  \"KeywordPlot\",\n];\n\nfunction componentName() {\n  // if (componentNames.includes(type)) {\n  //   return Spinner[type];\n  // }\n  // return Spinner.Audio;\n  return Plot.KeywordPlot;\n}\n\n/**\n * @return {null}\n */\nexport default function KeywordPlot(props) {\n  const [display, setDisplay] = useState(true);\n\n  // useEffect(() => {\n  //   let timer;\n  //   if (props.timeout && props.timeout > 0) {\n  //     timer = setTimeout(() => {\n  //       setDisplay(false);\n  //     }, props.timeout);\n  //   }\n\n  //   return () => {\n  //     if (timer) clearTimeout(timer);\n  //   };\n  // });\n\n  // if (!props.visible || props.visible === \"false\") {\n  //   return null;\n  // }\n  // return display ? (\n  //   <div aria-busy=\"true\" className={props.className} style={props.style}>\n  //     {React.createElement(componentName(props.type), { ...props })}\n  //   </div>\n  // ) : null;\n  return display ? (\n    <div aria-busy=\"true\" >\n      {React.createElement(componentName(), { ...props })}\n    </div>\n  ) : null;\n}\n\nKeywordPlot.propTypes = {\n  type: PropTypes.oneOf([...componentNames]),\n  style: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  visible: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  timeout: PropTypes.number\n};\n\nKeywordPlot.defaultProps = {\n  type: \"Puff2\",\n  style: {},\n  className: \"\",\n  visible: true,\n  timeout: 0\n};\n"],"sourceRoot":""}