{"version":3,"sources":["components/Header.js","states.js","components/Input.js","components/Plot2.js","components/Login.js","components/Table.js","components/Chart.js","config.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","authenticated","className","Form","this","username","Button","variant","type","Component","USA_STATES","sort","a","b","localeCompare","time_frames","InputComponent","handleClick","bind","handleChange","selectedState","selectedTimeFrame","keywords","selected_state_name","selected_time_frame","event","preventDefault","callbackFromParent","setState","target","value","split","namesList","map","key","time_framesList","time_frame","onSubmit","Group","Col","sm","Label","htmlFor","Control","placeholder","onChange","id","as","HC_more","Highcharts","LoginComponent","handleChangeLogin","handleChangePassword","password","callbackFromLogin","controlId","highchartsMap","western_states","central_states","eastern_states","southern_states","appConfig","React","KEYWORDS_URL","KEYWORDS_URL3","KEYWORDS_URL2","RATE_RANKER_URL","GROWTH_RANKER_URL","dimensions","App","handleSearch2","fetch","then","response","json","data","console","log","title","repos","displayResults","region_state","futureData","dataRanges","futureDataRanges","rankRates","growthRates","options","x_label","y_label","Input","Login","toLoginCallback","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4dd2dfac.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\nclass Header extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authenticated: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"myheader\">\n        <Form>\n          <b>Hello, {this.props.username}&nbsp;</b>\n          <Button variant=\"light\" className=\"btn-white\" type=\"submit\">\n              Logout\n          </Button>\n        </Form>\n      </div>\n\t\t);\n  }\n}\n\nexport default Header","\nexport const USA_STATES =[\n    ['us', 0, ' All states'],\n    ['us-ma', 1, 'Massachusetts'],\n    ['us-wa', 2, 'Washington'],\n    ['us-ca', 3, 'California'],\n    ['us-or', 4, 'Oregon'],\n    ['us-wi', 5, 'Wisconsin'],\n    ['us-me', 6, 'Maine'],\n    ['us-mi', 7, 'Michigan'],\n    ['us-nv', 8, 'Nevada'],\n    ['us-nm', 9, 'New Mexico'],\n    ['us-co', 10, \"Colorado\"],\n    ['us-wy', 11, 'Wyoming'],\n    ['us-ks', 12, 'Kansas'],\n    ['us-ne', 13, 'Nebraska'],\n    ['us-ok', 14, 'Oklahoma'],\n    ['us-mo', 15, 'Missouri'],\n    ['us-il', 16, 'Illinois'],\n    ['us-in', 17, 'Indiana'],\n    ['us-vt', 18, 'Vermont'],\n    ['us-ar', 19, 'Arkansas'],\n    ['us-tx', 20, 'Texas'],\n    ['us-ri', 21, 'Rhode Island'],\n    ['us-al', 22, 'Alabama'],\n    ['us-ms', 23, 'Mississippi'],\n    ['us-nc', 24, 'North Carolina'],\n    ['us-va', 25, 'Virginia'],\n    ['us-ia', 26, 'Iowa'],\n    ['us-md', 27, 'Maryland'],\n    ['us-de', 28, 'Delaware'],\n    ['us-pa', 29, 'Pennsylvania'],\n    ['us-nj', 30, 'New Jersey'],\n    ['us-ny', 31, 'New York'],\n    ['us-id', 32, 'Idaho'],\n    ['us-sd', 33, 'South Dakota'],\n    ['us-ct', 34, 'Connecticut'],\n    ['us-nh', 35, 'New Hampshire'],\n    ['us-ky', 36, 'Kentucky'],\n    ['us-oh', 37, 'Ohio'],\n    ['us-tn', 38, 'Tennessee'],\n    ['us-wv', 39, 'West Virginia'],\n    ['us-dc', 40, 'District of Columbia'],\n    ['us-la', 41, 'Louisiana'],\n    ['us-fl', 42, 'Florida'],\n    ['us-ga', 43, 'Georgia'],\n    ['us-sc', 44, 'South Carolina'],\n    ['us-mn', 45, 'Minnesota'],\n    ['us-mt', 46, 'Montana'],\n    ['us-nd', 47, 'North Dakota'],\n    ['us-az', 48, 'Arizona'],\n    ['us-ut', 49, 'Utah'],\n    ['us-hi', 50, 'Hawaii'],\n    ['us-ak', 51, 'Alaska']\n].sort(function (a, b) {\n    return ('' + a[2]).localeCompare(b[2]);\n})","import React, { Component } from 'react';\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport { USA_STATES } from '../states.js';\n\nconst time_frames = [\n    [0, \"Past 5 years\", \"today 5-y\"],\n    [1, \"Past 12 months\", \"today 12-m\"],\n    [2, \"Past 1 month\", \"today 1-m\"],\n    [3, \"Last 7 days\", \"now 7-d\"],\n]\n\nclass InputComponent extends Component {\t\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.selectedState = this.selectedState.bind(this);\n        this.selectedTimeFrame = this.selectedTimeFrame.bind(this);\n        this.state = {\n            keywords: [],\n            selected_state_name: USA_STATES[0][0],\n            selected_time_frame: time_frames[0][2]\n        };\n    }\n\n    handleClick(event){\n        event.preventDefault();\n        this.props.callbackFromParent(this.state);\n    }\n\n    selectedState(event){\n        this.setState({\n            selected_state_name: event.target.value.split(',')[0]\n        });\n    }\n\n    selectedTimeFrame(event){\n        this.setState({\n            selected_time_frame: event.target.value.split(',')[2]\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            keywords: event.target.value.split(','),\n            username: \"name\",\n        });\n    }\n    \n    render() {\n        let namesList = USA_STATES.map(function(state){\n            return <option key={state[1]} value={state}>{state[2]}</option>;\n        })\n\n        let time_framesList = time_frames.map(function(time_frame){\n            return <option key={time_frame[0]} value={time_frame}>{time_frame[1]}</option>;\n        })\n\n        return (\n            <div className=\"input_bar input-bar-item width100\">\n                <Form onSubmit={this.handleClick}>\n                    <Form.Group className=\"form-inline\">\n                        <Col sm=\"6\">   \n                            <div className=\"input-group\">\n                                <Form.Label className=\"form-inline mr-1\" htmlFor=\"keywords_input\"><h5>Type your keywords:</h5></Form.Label>\n                                <Form.Control className=\"width100 mr-1\" type=\"text\" placeholder=\"Enter keywords\" value={this.state.keywords} onChange={this.handleChange} id=\"keywords_input\" />\n                            </div>\n                        </Col>\n\n                        <Col sm=\"3\">   \n                            <div className=\"input-group\">\n                                <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_timeframe_input\"><h5>Select time frame:</h5></Form.Label>\n\n                                <Form.Control as=\"select\" onChange={this.selectedTimeFrame}  id=\"select_timeframe_input\" className=\"form-control width100 mr-1\">\n                                    {time_framesList}\n                                </Form.Control>                                \n                            </div>\n                        </Col>\n\n                        <Col sm=\"3\">   \n                            <div className=\"input-group\">\n                                <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_state_input\"><h5>Select state:</h5></Form.Label>\n\n                                <Form.Control as=\"select\" onChange={this.selectedState}  id=\"select_state_input\" className=\"form-control width100 mr-1\">\n                                    {namesList}\n                                </Form.Control>                                \n\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                            </div>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n\t\t);\n  }\n}\n\nexport default InputComponent","import React, { Component } from 'react';\nimport HighchartsReact from 'highcharts-react-official';\nimport Highcharts from \"highcharts\";\n\n// import Highcharts from 'highcharts' //core\nimport HC_more from 'highcharts/highcharts-more' //module\nHC_more(Highcharts) //init module\n\n// require(\"highcharts/highcharts-more\")(Highcharts);\n\nclass PlotComponent extends Component {\t\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tkeywords: [],\n\t\t\thoverData: null\n\t\t};\n\t}\n\n\tprepareData(keywords, data, futureData, dataRange, futureDataRange){\n\t\tlet result = []\n\n\t\tfor(let keyword in keywords){\n\t\t\tresult.push({\n\t\t\t\tname: keywords[keyword],\n\t\t\t\tdata: data[keyword],\n\t\t\t\tcolor: Highcharts.getOptions().colors[keyword]\n\t\t\t})\n\n\t\t\tresult.push({\n\t\t\t\tname: keywords[keyword] + \" forecast\",\n\t\t\t\tdata: futureData[keyword],\n\t\t\t\tdashStyle: 'shortdot',\n\t\t\t\tcolor: Highcharts.getOptions().colors[keyword],\n\t\t\t\tshowInLegend: false,          \n\t\t\t})\n\n\t\t\tresult.push({\n\t\t\t\tname: keywords[keyword] + \" range\",\n\t\t\t\tdata: dataRange[keyword],\n\t\t\t\ttype: 'arearange',\n\t\t\t\tcolor: Highcharts.getOptions().colors[keyword],\n\t\t\t\tfillOpacity: 0.3,\n\t\t\t\tshowInLegend: false,  \n\t\t\t\tzIndex: 1,\n\t\t\t\tlineWidth: 0,  \n\t\t\t\tmarker: {\n\t\t\t\t\tenabled: false\n\t\t \t\t}\n\t\t\t})\t\n\t\t\t\t\n\t\t\tresult.push({\n\t\t\t\tname: keywords[keyword] + \" range forecast\",\n\t\t\t\tdata: futureDataRange[keyword],\n\t\t\t\ttype: 'arearange',\n\t\t\t\tcolor: Highcharts.getOptions().colors[keyword],\n\t\t\t\tfillOpacity: 0.3,\n\t\t\t\tshowInLegend: false,  \n\t\t\t\tzIndex: 1,  \n\t\t\t\tlineWidth: 0,\n\t\t\t\tmarker: {\n\t\t\t\t\tenabled: false\n\t\t \t\t}\n\t\t\t})\t\n\n\t\t}\n\n\t\t// console.log(JSON.stringify(result[0].data))\n\n\t\treturn result;\n\t}\n\n\tsetHoverData = (e) => { \n\t\t// The chart is not updated because `chartOptions` has not changed.\n\t\tthis.setState({ hoverData: e.target.category })\n\t}\n\t\n\tupdateSeries = () => {\n\t\t// The chart is updated only with new options.\n\t\tthis.setState({ \n\t\t  chartOptions: {\n\t\t\tseries: [\n\n\t\t\t]\n\t\t  }\n\t\t});\n\t}\n\n\tgetLine(data){\n\t\tvar last_element = data[0][data[0].length - 1];\n\t\treturn last_element[0]\n\t}\n\n    render() {\n\n\t\tlet chartOptions = {\n\n\t\t\ttitle: {\n\t\t\t\ttext: \"Keywords trends\"\n\t\t\t},\n\t\t\t\n\t\t\txAxis: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Date'\n\t\t\t\t},\n\t\t\t\ttype: 'datetime',\n\t\t\t\tdateTimeLabelFormats: {\n\t\t\t\t\tday: '%e-%b-%y',\n\t\t\t\t\tformat: '%e-%b-%y',\n\t\t\t\t\tmonth: '%b-%y',\n\t\t\t\t\tyear: '%b-%y',\n\t\t\t\t\tstep: 2000\n\t\t\t\t},\n\t\t\t\tplotLines: [{\n\t\t\t\t\tcolor: 'red', // Color value\n\t\t\t\t\tvalue: this.getLine(this.props.data), // Value of where the line will appear\n\t\t\t\t\twidth: 2 // Width of the line    \n\t\t\t\t}]\n\t\t\t},\n\t\t\t\n\t\t\tyAxis: {\n\t\t\t\tmin: 0,\n\t\t\t\tmax: 100,\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Search interest %'\n\t\t\t\t},\n\n\t\t\t},\n\n\t\t\tmapNavigation: {\n\t\t\t\tenableMouseWheelZoom: true\n\t\t\t},\n\t\t\t\n\t\t\ttooltip: {\n\t\t\t\tcrosshairs: true,\n\t\t\t\tshared: true,\n\t\t\t\tvalueSuffix: \"%\",\n\t\t\t\theaderFormat: '<b>Week: {point.key}</b><br>',\n\t\t\t},\n\t\t\t\n\t\t\tlegend: {\n\t\t\t\tshow: true,\n\t\t\t\tsymbolHeight: 2,\n\t\t\t\tsymbolWidth: 30,\n\t\t\t\tsymbolRadius: 1\n\t\t\t},\n\t\t\tchart: {\n\t\t\t\tzoomType: 'xy',\n\t\t\t\theight: '45%',\n\t\t\t},\n\t\t\tseries: this.prepareData(this.props.keywords, this.props.data, this.props.futureData, this.props.dataRanges, this.props.futureDataRanges),\n\t\t\tplotOptions: {\n\t\t\t  series: {\n\t\t\t\tpoint: {\n\t\t\t\t  events: {\n\t\t\t\t\t// mouseOver: this.setHoverData.bind(this)\n\t\t\t\t  }\n\t\t\t\t},\n\t\t\t\tstates:{\n\t\t\t\t\thover: {\n\t\t\t\t\t\tenabled: false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmarker: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t}\n\n\t\t\t  }\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t  <HighchartsReact\n\t\t\t\thighcharts={Highcharts}\n\t\t\t\toptions= {chartOptions}\n\t\t\t  />\n\t\t\t</div>\n\t\t  )\n\t}\n}\n\nexport default PlotComponent","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\n\nclass LoginComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChangeLogin = this.handleChangeLogin.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.state = {\n        authenticated: true,\n        username: \"user\",\n        password: \"user\"\n    };\n  }\n\n  handleClick(){\n    if(this.state.username === \"user\" && this.state.password === \"user\"){\n      this.props.callbackFromLogin(this.state);\n    }\n  }\n\n  handleChangeLogin(event) {\n    this.setState({\n        username: event.target.value\n    });\n  }\n\n  handleChangePassword(event) {\n    this.setState({\n        password: event.target.value\n    });\n  }\n\n\n  render() {\n\n    return (\n\t\t<div className=\"loginform\">\n        <h2>Login page</h2>\n        <br/>\n\n        <h5>Username: user</h5>\n        <h5>Password: user</h5>\n        <br/>\n            <Form onSubmit={this.handleClick}>\n              <Form.Group controlId=\"formBasicUsername\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter username\" value={this.state.keywords} onChange={this.handleChangeLogin}/>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.keywords} onChange={this.handleChangePassword}/>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                  Login\n              </Button>\n            </Form>\n\n\t\t</div>\n\t\t);\n\n  }\n\n\n}\n\nexport default LoginComponent","import React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\n\nclass TableComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      keywords: []\n\t\t};\n  }\n\n  render() {\n\n    var tableHeaders = this.props.tableData.headers.map(( entity, index ) => {\n      return (\n        <th key={index}>{entity}</th>\n      );\n    })\n\n    var tableRows = this.props.tableData.data.map(( entity, index ) => {\n      let cells = entity.map((e,i) => {\n        return <td key = {i}>{e}</td>\n      })\n      \n      return (\n        <tr key={index}>\n          <td>{index + 1}</td>\n\n          {cells}\n        </tr>\n      );\n    })\n\n    return (\n\t\t<div className=\"table_div\">\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Keyword</th>\n            {tableHeaders}\n          </tr>\n        </thead>\n        <tbody>\n          {tableRows}\n        </tbody>\n      </Table>\n\t\t</div>\n\t\t);\n  }\n}\n\nexport default TableComponent","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highchartsMap from \"highcharts/modules/map\";\nimport mapDataIE from \"@highcharts/map-collection/countries/us/us-all.geo.json\";\nhighchartsMap(Highcharts); // Initialize the map module\n\n// const data = [\n//     ['us-ma', 0],\n//     ['us-wa', 1],\n//     ['us-ca', 2],\n//     ['us-or', 3],\n//     ['us-wi', 4],\n//     ['us-me', 5],\n//     ['us-mi', 6],\n//     ['us-nv', 7],\n//     ['us-nm', 8],\n//     ['us-co', 9],\n//     ['us-wy', 10],\n//     ['us-ks', 11],\n//     ['us-ne', 12],\n//     ['us-ok', 13],\n//     ['us-mo', 14],\n//     ['us-il', 15],\n//     ['us-in', 16],\n//     ['us-vt', 17],\n//     ['us-ar', 18],\n//     ['us-tx', 19],\n//     ['us-ri', 20],\n//     ['us-al', 21],\n//     ['us-ms', 22],\n//     ['us-nc', 23],\n//     ['us-va', 24],\n//     ['us-ia', 25],\n//     ['us-md', 26],\n//     ['us-de', 27],\n//     ['us-pa', 28],\n//     ['us-nj', 29],\n//     ['us-ny', 30],\n//     ['us-id', 31],\n//     ['us-sd', 32],\n//     ['us-ct', 33],\n//     ['us-nh', 34],\n//     ['us-ky', 35],\n//     ['us-oh', 36],\n//     ['us-tn', 37],\n//     ['us-wv', 38],\n//     ['us-dc', 39],\n//     ['us-la', 40],\n//     ['us-fl', 41],\n//     ['us-ga', 42],\n//     ['us-sc', 43],\n//     ['us-mn', 44],\n//     ['us-mt', 45],\n//     ['us-nd', 46],\n//     ['us-az', 47],\n//     ['us-ut', 48],\n//     ['us-hi', 49],\n//     ['us-ak', 50],\n//     ['undefined', 51]\n// ];\n\nconst western_states = [\n  ['us-ca', \"#20e012\"],\n  ['us-or', \"#20e012\"],\n  ['us-id', \"#20e012\"],\n  ['us-mt', \"#20e012\"],\n  ['us-az', \"#20e012\"],\n  ['us-nv', \"#20e012\"],\n  ['us-wa', \"#20e012\"],\n  ['us-ut', \"#20e012\"]\n];\n\nconst central_states = [\n  ['us-wy', \"#BADA55\"],\n  ['us-nd', \"#BADA55\"],\n  ['us-sd', \"#BADA55\"],\n  ['us-co', \"#BADA55\"],\n  ['us-ks', \"#BADA55\"],\n  ['us-ky', \"#BADA55\"],\n  ['us-in', \"#BADA55\"],\n  ['us-wi', \"#BADA55\"],\n  ['us-ne', \"#BADA55\"],\n  ['us-ia', \"#BADA55\"],\n  ['us-mi', \"#BADA55\"],\n  ['us-mo', \"#BADA55\"],\n  ['us-il', \"#BADA55\"],\n  ['us-mn', \"#BADA55\"],\n  ['undefined', \"#BADA55\"]\n];\n\nconst eastern_states = [\n  ['us-oh', \"#003fed\"],\n  ['us-ny', \"#003fed\"],\n  ['us-nc', \"#003fed\"],\n  ['us-vt', \"#003fed\"],\n  ['us-wv', \"#003fed\"],\n  ['us-md', \"#003fed\"],\n  ['us-de', \"#003fed\"],\n  ['us-ri', \"#003fed\"],\n  ['us-ma', \"#003fed\"],\n  ['us-me', \"#003fed\"],\n  ['us-nh', \"#003fed\"],\n  ['us-sc', \"#003fed\"],\n  ['us-va', \"#003fed\"],\n  ['us-nj', \"#003fed\"],\n  ['us-dc', \"#003fed\"],\n  ['us-ct', \"#003fed\"],\n  ['us-pa', \"#003fed\"]\n];\n\nconst southern_states = [\n  ['us-tx', \"#e08a12\"],\n  ['us-nm', \"#e08a12\"],\n  ['us-tn', \"#e08a12\"],\n  ['us-ga', \"#e08a12\"],\n  ['us-fl', \"#e08a12\"],\n  ['us-ar', \"#e08a12\"],\n  ['us-ok', \"#e08a12\"],\n  ['us-la', \"#e08a12\"],\n  ['us-al', \"#e08a12\"],\n  ['us-hi', \"#e08a12\"],\n  ['us-ak', \"#e08a12\"],\n  ['us-ms', \"#e08a12\"]\n];\n\nclass Chart extends React.Component {\n\n  constructor(props) {\n      super(props);\n  \n      this.state = {\n          mapOptions:  {\n              chart: {\n                height: '64%',\n                \n                map: \"countries/ie/ie-all\",\n                events: {\n                    drilldown: function(e) {\n                      console.log('from drillDown');\n                    },\n                    drillup: function() {\n                      console.log('from drillUp');\n                    }\n                  }\n              },\n              tooltip: { enabled: true },\n              legend: {\n                layout: \"vertical\",\n                align: \"right\",\n                verticalAlign: \"middle\",\n                enabled: false\n              },\n            \n              title: {\n                text: 'Keyword stats per State'\n              },\n            \n              mapNavigation: {\n                enabled: true,\n                buttonOptions: {\n                  verticalAlign: \"bottom\"\n                }\n              },\n            \n              plotOptions: {\n                map: {\n                  states: {\n\n                    color: \"#126c31\",\n\n                    hover: {\n                      color: \"#000000\",\n                      enabled: true,\n                      brightness: 0.5\n                    },\n                    \n                  }\n                },\n                series:{\n                    point:{\n                        events:{\n                            click: this.setHoverData.bind(this)\n\n                        }\n                    }\n                }\n              },\n            \n              series: [\n                // {\n                //   data: data,\n                //   mapData: mapDataIE,\n                //   name: \"USA\",\n                //   dataLabels: {\n                //       enabled: true,\n                //       format: \"{point.properties.postal-code}\"\n                //   }\n                // },\n\n                {\n                  data: western_states.concat(central_states).concat(eastern_states).concat(southern_states),\n                  keys: ['hc-key', 'color'],\n                  mapData: mapDataIE,\n                  name: \"Western US\",\n                  dataLabels: {\n                      enabled: true,\n                      format: \"{point.properties.postal-code}\"\n                  }\n                },\n\n              ],\n            \n              drilldown: {\n                activeDataLabelStyle: {\n                  color: \"#FFFFFF\",\n                  textDecoration: \"none\",\n                  textOutline: \"1px #000000\"\n                },\n                drillUpButton: {\n                  relativeTo: \"spacingBox\",\n                  position: {\n                    x: 0,\n                    y: 60\n                  }\n                }\n              }\n            }\n      };\n    }\n\n    setHoverData = (e) => {\n      this.props.callbackFromApp(e.point[\"hc-key\"])\n    }\n  \n    render() {\n        return (\n            <div>\n                <HighchartsReact\n                    constructorType={\"mapChart\"}\n                    highcharts={Highcharts}\n                    options={this.state.mapOptions} \n                />\n            </div>\n        );\n      }\n  }\n\n  export default Chart\n\n","\nexport const appConfig = {\n    KEYWORDS_URL: \"http://localhost:5000/keywords\",\n    KEYWORDS_URL3: \"http://localhost:5000/all\",\n    KEYWORDS_URL2: \"http://0.0.0.0:5000/\",\n    RATE_RANKER_URL: \"http://localhost:5000/rateranker\",\n    GROWTH_RANKER_URL: \"http://localhost:5000/growthranker\"\n};","import React, { Component } from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport Plot  from './components/Plot2'\nimport { Row,Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\n// import Test_Plot from './Test_Plot';\n// import Test_Plot_Dates from './Test_Plot_Dates';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { appConfig } from './config.js';\nimport './styles/plot.css'\n\n\n// function calculateMean(array) {\n//   return (array.reduce((acc, c) => acc + c[1], 0)/array.length).toFixed(2)\n// }\nlet dimensions = appConfig.dimensions;\nlet ranges = appConfig.ranges_dates;\n\nconst MA_Day_5 = \"5 Day MA\";\nconst LOWER_BAND = \"Lower Band\";\nconst UPPER_BAND = \"Upper Band\";\n\n\n\nclass App extends React.Component {\n  \n    constructor(props){\n      super(props);\n      this.state = {\n        repos: [],\n        title: \"before\",\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        data: [],\n        futureData: [],\n        selected_time_frame: \"today 5-y\",\n        dataRanges: [],\n        futureDataRanges: [],\n        rankRates: [],\n        growthRates: [],\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n      };\n    }\n\n    componentDidMount(){\n        this.handleSearch2();\n      }\n\n      handleSearch2 = () =>{\n        let url = '/users/ping';\n     fetch(url).\n      then(response => response.json()).then((data) => {\n        console.log(\"this data\")  \n        console.log(data);\n          this.setState({\n            title: \"after\"\n          });\n        });\n      };\n    \n//     handleSearch = (user) =>{\n//       let url = 'https://api.github.com/users/'+user+'/repos';\n//    fetch(url).\n//     then(response => response.json()).then((repos) => {\n//         console.log(repos);\n//         console.log(repos.length);\n//         this.setState({\n//           repos: repos\n//         });\n//       });\n//     };\n    \n    render() {\n\n        if (this.state.authenticated) {\n        return (\n            <div className=\"main_results\">\n                <div>\n                    <Header username={this.state.username} />\n                    <Input callbackFromParent={this.handleSearch2}/>\n\n                    <div className=\"intro\">\n\n                    </div>\n                </div>\n            </div>\n            );\n        } else{\n        return (\n        <div>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n        </div>);      \n        }\n\t}\n  }\n  \n  \n  export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}