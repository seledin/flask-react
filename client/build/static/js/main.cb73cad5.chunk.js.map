{"version":3,"sources":["components/plot/src/plot/parts/functions.js","components/plot/index.js","components/plot/src/plot/utils/functions.js","components/plot/src/plot/utils/config.js","components/plot/src/plot/parts/AxisX.js","components/plot/src/plot/parts/AxisY.js","components/plot/src/plot/parts/Legend.js","components/plot/src/plot/parts/Static_Line.js","components/plot/src/plot/parts/Pointer_Line.js","components/plot/src/plot/parts/Info_Box.js","components/plot/src/plot/parts/Area_Path.js","components/plot/src/plot/parts/Plot.js","components/plot/src/plot/KeywordPlot.js","components/plot/src/plot/index.js","components/plot/src/index.js","components/Header.js","states.js","components/Input.js","components/Login.js","components/Table.js","components/Chart.js","App.js","config.js","serviceWorker.js","index.js"],"names":["capitalizeString","string","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","titleCase","get_min_value","data","min_result","j","get_max_value","max_result","module","exports","require","get_random_colors","number","slice","scale_data_area_dates","ranges","width","height","prefix","result","x_frame","Math","abs","max_x","min_x","y_frame","max_y","min_y","push","appConfig","dimensions","box_width","box_height","number_of_plots","ranges_dates","array_length_dates","array_length_dates_forecast","KEYWORDS_URL","AxisX","props","ticks","ticks_number","frame","point","make_x_tick","get_ticks","data_mock","title","y_trans","Object","keys","data_frame","floor","key","x","class","text-anchor","y","formatDate_monthly","formatDate","line","height_trans","d","fill","data-z-index","prepare_x_axis","dates","x_label","y_trans2","date","Date","dd","getDate","mm","getMonth","getFullYear","AxisY","upper_index","upper_bound","lower_index","lower_bound","lines_number","make_y_tick","transform","x_trans","textAnchor","y_label","make_yy_tick","get_y_ticks","y_number","value","Legend","colors","keywords","legend","keyword_sizes","width2","l","calculate_translate_for_legend","translation","reduce","a","b","stroke","stroke-width","fontSize","width_trans","trans","max","font-size","prepare_legend","keyword_length","Static_Line","historical_data_length","stroke-dasharray","Pointer_Line","mark_line","pos","visibility","Info_Box","info_box","y_data","undefined","value_y","strokeWidth","opacity","toFixed","yyyy","value_x","pos_x","pos_y","get_info_box","Area_Path","console","log","style","area_path","color","svgPath","points","command","dash","acc","bezierCommand","pointer-events","areaPath","d1","bezierCommand_upper","d3","reverse","bezierCommand_lower","lineCommand","controlPoint","current","previous","next","o","pointA","pointB","lengthX","lengthY","sqrt","pow","angle","atan2","PI","cos","sin","cps","cpe","controlPoint_upper","controlPoint_lower","line_lower","line_upper","Plot","KeywordPlot","handleMouseMove","bind","handleHoverOff","updateWindowDimensions","window","innerWidth","divRef","React","createRef","historical_data","state","options","number_of_series","scaled_data","scale_data_mocks","data_map_area_DATES","get_data_map_area_DATES","forecasted_data","info_box_height","get_box_height","forecasted_data_length","this","addEventListener","focus","removeEventListener","svg_width","clientWidth","x_trans_left","y_trans_up","x_trans_right","x_trans2","y_trans_bottom","plot_width","plot_height","setState","scaled_data_mocks_area_DATES","scaled_data_mocks_area_future_DATES","data_mocks_area_DATES","y_data_normal","y_data_min","y_data_max","data_mocks_area_DATES1","data_mocks_area_DATES2","concat","get_data_mocks_area_DATES","event","dim","target","getBoundingClientRect","clientX","left","clientY","top","x_diff","round","left_index","right_index","area_paths","map","entity","index","area_paths_future","v_b","v_trans","aa","bb","ceil","calc_y_number","ref","version","xmlns","preserveAspectRatio","onMouseMove","onMouseLeave","className","viewBox","PureComponent","useState","display","aria-busy","createElement","defaultProps","type","visible","timeout","Header","authenticated","Form","username","Button","variant","Component","USA_STATES","sort","localeCompare","time_frames","InputComponent","handleClick","handleChange","selectedState","selectedTimeFrame","selected_state_name","selected_time_frame","preventDefault","arrayTrim","callbackFromParent","array","el","trim","namesList","time_framesList","time_frame","onSubmit","Group","Label","htmlFor","Control","placeholder","onChange","id","as","LoginComponent","handleChangeLogin","handleChangePassword","password","callbackFromLogin","controlId","TableComponent","tableHeaders","tableData","headers","tableRows","cells","e","Table","striped","bordered","hover","highchartsMap","Highcharts","western_states","central_states","eastern_states","southern_states","Chart","setHoverData","callbackFromApp","mapOptions","chart","events","drilldown","drillup","panning","panKey","tooltip","enabled","formatter","name","layout","align","verticalAlign","text","mapNavigation","buttonOptions","plotOptions","states","brightness","series","click","mapData","mapDataIE","dataLabels","format","showInLegend","activeDataLabelStyle","textDecoration","textOutline","drillUpButton","relativeTo","position","constructorType","highcharts","KEYWORDS_URL3","KEYWORDS_URL2","KEYWORDS_NEW","RATE_RANKER_URL","GROWTH_RANKER_URL","HEADERS_GROWTH_RATES","HEADERS_PROJECTED_GROWTH","App","fetchCallback","displayResults","fetchData","mapCallback","region_state","rate_table_data","growth_table_data","fetching_results","myRef","fetch","method","body","JSON","stringify","then","res","json","offsetWidth","sizes","get_dimensions","get_data","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","catch","error","div_height","Input","Row","Login","toLoginCallback","keyword","k_w","arr","valueOf","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb73cad5.chunk.js","sourcesContent":["\n\nexport function add(a, b){\n    return a + b;\n}\n\n// get random int\nexport function get_random(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//get random double\nexport function get_random_double(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        let y = get_random(min_y, max_y);\n        result.push([i, y - s_dev, y + s_dev, y])\n    }\n\n    return result;\n}\n\nexport function scale_data(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_area_data(area_data, ranges, width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<area_data.length; i++){\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\n    }\n\n    return result;\n}\n\n\n/////////////\n// MOCKED DATA\n\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=min_x; i<=max_x; i++){\n        result.push([i, get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n\n// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\n\n\nexport function get_random_colors(number) {\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\n\n    return colors.slice(0, number);\n}\n\nexport function get_box_height(number){\n    if (number === 0){\n        return 0;\n    }\n    return 25*(number + 1) + 10;\n}\n\n\n///////////////////////////////\n// MOCKED DATA with DATES\n\n\nexport function get_random_mock_array_dates(dates, min_y, max_y){\n    let result = [];\n\n    for (let i=0; i<dates.length; i++){\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function scale_data_dates(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\n    let result = [];\n    let x_diff = Math.abs(ranges.max_x - ranges.min_x);\n    let y_diff = Math.abs(ranges.max_y - ranges.min_y);\n    \n    let x_frame = width/(x_diff - 1);\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y), height - data[i][3] * y_frame + y_frame*(ranges.min_y), height - data[i][4] * y_frame + y_frame*(ranges.min_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\n    let result = [];\n    \n    for (let i=0; i<dates.length; i++){\n        let s_d1 = get_random(2,8);\n        let s_d2 = get_random(2,8);\n        let random = get_random(min_y, max_y);\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\n    }\n\n    return result;\n}\n\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\n    let result = []\n\n    for(let i=0;i<number;i++){\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\n    }\n\n    return result\n}\n\nexport function scale_data_mocks(data_mocks_area_DATES1, data_mocks_area_DATES2, ranges, width, height, number_of_plots){\n    let scaled_data_mocks_area_DATES = []\n    let scaled_data_mocks_area_future_DATES = []\n\n    for (let i=0; i<number_of_plots; i++){\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data_mocks_area_DATES1[i], ranges, width, height));\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, data_mocks_area_DATES1[i].length - 1));\n    }\n\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\n}\n\nexport function get_data_map_area_DATES(data_mocks_area_DATES, array_length_dates, number_of_plots){\n\n    let data_map_area_DATES = []\n    // console.log(\"@@@@@\")\n    // console.log(\"@@@@@\" + array_length_dates)\n    // console.log(data_mocks_area_DATES)\n    \n    // let counter = 0;\n\n\n    for(let i = 0; i<array_length_dates-2; i++) {\n        let y_data_normal = [];\n        let y_data_min = [];\n        let y_data_max = [];\n        let date;\n      \n        date = data_mocks_area_DATES[0][i][1]\n      \n        for(let j=0; j<number_of_plots; j++) {\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\n        }\n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\n    }\n    return data_map_area_DATES;\n}\n\nexport function capitalizeString(string) {\n    return titleCase(string);\n}\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n    }\n    return splitStr.join(' '); \n }\n\n// export function get_historical_dates(){\n//     let dates = []\n//     dates.push(Date.UTC(2010, 0, 18))\n//     dates.push(Date.UTC(2010, 1, 18))\n//     dates.push( Date.UTC(2010, 2, 18))\n//     dates.push(Date.UTC(2010, 3, 18))\n//     dates.push( Date.UTC(2010, 4, 18))\n//     dates.push( Date.UTC(2010, 5, 18))\n//     dates.push( Date.UTC(2010, 6, 18))\n//     dates.push( Date.UTC(2010, 7, 18))\n//     // dates.push(Date.UTC(2010, 8, 18))\n//     // dates.push( Date.UTC(2010, 9, 18))\n//     // dates.push( Date.UTC(2010, 10, 18))\n    \n//     return dates;\n// }\n\n// export function get_forecasted_dates(){\n//     let dates = []\n//     // dates.push( Date.UTC(2010, 7, 18))\n//     dates.push(Date.UTC(2010, 8, 18))\n//     dates.push( Date.UTC(2010, 9, 18))\n\n//     return dates;\n\n// }\n\nexport function get_min_value(data){\n    // let min_result = data[0][0][3];\n    let min_result = 100;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][3]!==null && data[i][j][3] < min_result){\n                min_result = data[i][j][3]\n            }\n        }\n    }\n    // console.log(\"min@: \" + min_result)\n    return min_result\n}\n\nexport function get_max_value(data){\n    // let max_result = data[0][0][4];\n    let max_result = 0;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][4]!==null && data[i][j][4] > max_result){\n                max_result = data[i][j][4]\n            }\n        }\n    }\n    \n    return max_result\n}","module.exports = require('./src/index');","\n\nexport function add(a, b){\n    return a + b;\n}\n\n// get random int\nexport function get_random(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//get random double\nexport function get_random_double(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        let y = get_random(min_y, max_y);\n        result.push([i, y - s_dev, y + s_dev, y])\n    }\n\n    return result;\n}\n\nexport function scale_data(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_area_data(area_data, ranges, width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<area_data.length; i++){\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\n    }\n\n    return result;\n}\n\n\n/////////////\n// MOCKED DATA\n\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=min_x; i<=max_x; i++){\n        result.push([i, get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n\n// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\n\n\nexport function get_random_colors(number) {\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\n\n    return colors.slice(0, number);\n}\n\nexport function get_box_height(number){\n    if (number === 0){\n        return 0;\n    }\n    return 25*(number + 1) + 10;\n}\n\n\n///////////////////////////////\n// MOCKED DATA with DATES\n\n\nexport function get_random_mock_array_dates(dates, min_y, max_y){\n    let result = [];\n\n    for (let i=0; i<dates.length; i++){\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n\n//     return result;\n// }\n\nexport function scale_data_dates(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\n    let result = [];\n    let x_diff = Math.abs(ranges.max_x - ranges.min_x);\n    let y_diff = Math.abs(ranges.max_y - ranges.min_y);\n    \n    // console.log(\"*** ranges\")\n    // console.log(ranges)\n    // console.log(\"$$$$\")\n    // console.log(y_diff)\n    \n    let x_frame = width/(x_diff - 1);\n    let y_frame = height/y_diff;\n    // console.log(\"^^^^^^^^ \" + y_frame*(ranges.min_y))\n\n    for (let i=0; i<data.length; i++){\n        // console.log(data[i])\n        // if(i<255){\n        //     result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }else{\n        //     result.push([(data[i][0] + 256) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n        // if(i>77 && i< 95){\n        //     console.log([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][3] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][4] * y_frame - y_frame*(Math.abs(ranges.min_y))])\n        \n        \n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y), height - data[i][3] * y_frame + y_frame*(ranges.min_y), height - data[i][4] * y_frame + y_frame*(ranges.min_y)])\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame + y_frame*(ranges.min_y-20), height - data[i][3] * y_frame + y_frame*(ranges.min_y-20), height - data[i][4] * y_frame + y_frame*(ranges.min_y-20)])\n\n\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*ranges.min, height - data[i][3] * y_frame - y_frame*ranges.min, height - data[i][4] * y_frame - y_frame*ranges.min])\n        // result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][3] * y_frame - y_frame*(Math.abs(ranges.min_y)), height - data[i][4] * y_frame - y_frame*(Math.abs(ranges.min_y))])\n    }\n\n    // console.log(result)\n\n    return result;\n}\n\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\n    let result = [];\n    \n\n\n\n    for (let i=0; i<dates.length; i++){\n        let s_d1 = get_random(2,8);\n        let s_d2 = get_random(2,8);\n        let random = get_random(min_y, max_y);\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\n    }\n\n    return result;\n}\n\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\n    let result = []\n\n    for(let i=0;i<number;i++){\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\n    }\n\n    // console.log(Object.keys(result[k_w][MA_Day_5+k_w]).length)\n// console.log(Object.keys(result))\n    // console.log(result)\n\n    return result\n\n}\n\nexport function scale_data_mocks(data, ranges, width, height, number_of_plots){\n    let scaled_data_mocks_area_DATES = []\n    let scaled_data_mocks_area_future_DATES = []\n\n    for (let i=0; i<number_of_plots; i++){\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data.historical_data[i], ranges, width, height));\n        // scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, 256));\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data.forecasted_data[i], ranges, width,  height, data.historical_data[i].length - 1));\n    }\n\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\n}\n\nexport function get_data_map_area_DATES(data_mocks_area_DATES, array_length_dates, number_of_plots){\n\n    let data_map_area_DATES = []\n    // console.log(\"@@@@@\")\n    // console.log(\"@@@@@\" + array_length_dates)\n    // console.log(data_mocks_area_DATES)\n    \n    let counter = 0;\n\n\n    for(let i = 0; i<array_length_dates-2; i++) {\n        let y_data_normal = [];\n        let y_data_min = [];\n        let y_data_max = [];\n        let date;\n      \n        // if(console.log(data_mocks_area_DATES[0][i])=== undefined){\n        //     counter++;\n        //     console.log(\"@@@@@\" + counter)\n        // }\n      \n        date = data_mocks_area_DATES[0][i][1]\n      \n      \n        for(let j=0; j<number_of_plots; j++) {\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\n        }\n      \n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\n    }\n\n    return data_map_area_DATES;\n}\n\nexport function capitalizeString(string) {\n    return titleCase(string);\n}\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n    }\n    return splitStr.join(' '); \n }\n\n// export function get_historical_dates(){\n//     let dates = []\n//     dates.push(Date.UTC(2010, 0, 18))\n//     dates.push(Date.UTC(2010, 1, 18))\n//     dates.push( Date.UTC(2010, 2, 18))\n//     dates.push(Date.UTC(2010, 3, 18))\n//     dates.push( Date.UTC(2010, 4, 18))\n//     dates.push( Date.UTC(2010, 5, 18))\n//     dates.push( Date.UTC(2010, 6, 18))\n//     dates.push( Date.UTC(2010, 7, 18))\n//     // dates.push(Date.UTC(2010, 8, 18))\n//     // dates.push( Date.UTC(2010, 9, 18))\n//     // dates.push( Date.UTC(2010, 10, 18))\n    \n//     return dates;\n// }\n\n// export function get_forecasted_dates(){\n//     let dates = []\n//     // dates.push( Date.UTC(2010, 7, 18))\n//     dates.push(Date.UTC(2010, 8, 18))\n//     dates.push( Date.UTC(2010, 9, 18))\n\n//     return dates;\n\n// }\n\nexport function get_min_value(data){\n    // let min_result = data[0][0][3];\n    let min_result = 100;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][3]!==null && data[i][j][3] < min_result){\n                min_result = data[i][j][3]\n            }\n        }\n    }\n    // console.log(\"min@: \" + min_result)\n    return min_result\n}\n\nexport function get_max_value(data){\n    // let max_result = data[0][0][4];\n    let max_result = 0;\n\n    for(let i=0; i<data.length; i++){\n        for(let j=0;j<data[i].length-2; j++){\n            if(data[i][j][4]!==null && data[i][j][4] > max_result){\n                max_result = data[i][j][4]\n            }\n        }\n    }\n    \n    return max_result\n}","\nlet w = 1100;\nlet h = 400;\n\nexport const appConfig = {\n\n\n  dimensions: {\n    box_width: 400,\n    box_height: 120\n  },\n\n  number_of_plots: 5,\n\n  ranges_dates: {\n    max_x: (261 + 52 + 0),\n    // max_x: (100 + 52 + 0),\n    // max_x: (8 + 2 + 0),\n    min_x: 0,\n    max_y: 110,\n    min_y: -10,\n    // max_x_forecast: 53\n  },\n\n  array_length_dates: 261,\n  array_length_dates_forecast: 52,\n\n  KEYWORDS_URL: \"http://0.0.0.0:5000\",\n\n\n};","import React from 'react';\n\nexport const AxisX = props => {\n\n  let ticks = props.ticks + 1;\n    \n  if(props.dimensions.width<=700){\n    ticks = 6 + 1;\n  }\n\n\n  return (\n    <g>\n        {get_ticks(props.dimensions.width, props.dimensions.height, ticks)}\n        {prepare_x_axis(props.dimensions.width, props.dimensions.height, ticks, props.dates, props.x_label, props.dimensions.y_trans2)}\n    </g>\n  )\n};\n\nexport default AxisX\n\n\n\nfunction make_x_tick(x, y) {\n\n    let line = `M ${x} ${y} L ${x} ${y + 10}`;\n    return <path key={x} class=\"plot_xmark\" d={line} data-z-index=\"0\" />\n}\n\nfunction get_ticks(width, height, ticks_number){\n    let result = [];\n\n    let frame = width / (ticks_number - 1);\n\n    for (let i=0; i<ticks_number; i++){\n        let point = frame * i;\n        result.push(make_x_tick(point, height))\n    }\n\n    return result;\n}\n\n\nfunction prepare_x_axis(width, height, ticks_number, data_mock, title, y_trans){\n  let result = []\n\n  let length = Object.keys(data_mock).length;\n  let data_frame = Math.floor(length/(ticks_number-1));\n\n  let frame = width / (ticks_number - 1)\n\n  if(width<=700){\n      for(let i=0; i<ticks_number; i++){\n          result.push(<text key={i} x={frame*i} class=\"plot_xtick\" text-anchor=\"middle\" y={height + 25}>{formatDate_monthly(data_mock[data_frame*i][1])}</text>)\n      }\n  }else{\n      for(let i=0; i<ticks_number; i++){\n          result.push(<text key={i} x={frame*i} class=\"plot_xtick\" text-anchor=\"middle\" y={height + 25}>{formatDate(data_mock[data_frame*i][1])}</text>)\n      }\n  }\n\n  let line = `M 0 ${height} H ${width}`;\n\n  let height_trans = y_trans\n\n  if(width>700){\n      result.push(<text key={height} x={width/2} text-anchor=\"middle\" class=\"plot_xaxis_title\" y={height + height_trans - 30}><tspan>{title}</tspan></text>)\n  }else{\n      result.push(<text key={height} x={width/2} text-anchor=\"middle\" class=\"plot_xaxis_title\" y={height +40}><tspan>{title}</tspan></text>)\n  }\n  result.push(<path key={height} d={line} fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />)\n\n  return result \n\n}\n\n\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}\n\nfunction formatDate_monthly(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = mm+'-'+yyyy\n}","import React from 'react';\n\nexport const AxisY = props => {\n\n  let result = [];\n  let upper_index = props.upper_bound/10;\n  let lower_index = props.lower_bound/10;\n\n  let lines_number = upper_index - lower_index;\n\n  let frame = props.dimensions.height / lines_number;\n\n  let x = 0;\n  let y = 0;\n\n  for(let i=lower_index; i<=upper_index; i++){\n    result.push(make_y_tick(-20, props.dimensions.height - frame*(i -lower_index),i * 10));\n  }\n\n  let line = `M ${x} ${y} L ${x} ${y + props.dimensions.height}`;\n\n  return (\n    <g>\n      <g transform={`translate(${-(props.dimensions.x_trans/2 + 10)},${props.dimensions.height/2})`}><text x=\"0\" textAnchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>{props.y_label}</tspan></text></g>\n      {get_y_ticks(props.dimensions.height, props.y_number)}\n      {result}\n      <path d={line} fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />\n      \n    </g>\n  )\n\n};\n\nexport default AxisY\n\nfunction make_y_tick(x, y, value) {\n  return <text x={x} textAnchor=\"end\" class=\"plot_ytick\" y={y}>{value}</text>\n}\n\nfunction make_yy_tick(x, y) {\n\n  let line = `M ${x-10} ${y} L ${x} ${y}`;\n  return <path d={line} fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />\n}\n\nfunction get_y_ticks (height, lines_number) {\n  let result = []\n\n  let frame = height / lines_number;\n\n  for (let i=0; i<=lines_number; i++){\n      let point = frame * i;\n      result.push(make_yy_tick(0,point))\n  }\n\n  return result\n}","import React from 'react';\nimport { capitalizeString } from \"./functions\";\n\nexport const Legend = props => {\n  return (\n    <g>{prepare_legend(props.dimensions, props.colors, props.keywords)}</g>\n  )\n};\n\nexport default Legend\n\n\n\n   function prepare_legend(dimensions, colors, keywords){\n\n    let legend = [];\n    let keyword_sizes = []\n\n    if (dimensions.width2>700){\n        for(let i=0; i<colors.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            \n    \n            let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n    \n            legend.push(\n              <g key={i} data-z-index=\"1\" transform={`translate(${translation},3)`}>\n                  <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke={colors[i]} stroke-width=\"0\"></path>\n                  <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" fontSize=\"12px\" stroke=\"#6c757d\" stroke-width=\"0\">{capitalizeString(keywords[i])}</text>\n              </g>\n        );\n\n            keyword_sizes.push(l);\n        }\n\n        let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n        let width_trans = (dimensions.width2)/2 - translation/2 - dimensions.x_trans;\n        let height_trans = dimensions.height + dimensions.y_trans/2;\n        height_trans = dimensions.height + dimensions.y_trans - dimensions.y_trans2;\n        height_trans = dimensions.height + dimensions.y_trans - 25;\n    \n        return (\n            <g transform={`translate(${width_trans}, ${height_trans})`} class=\"plot_legend\" >\n                {legend}\n            </g>)\n        \n    } else {\n        for(let i=0; i<keywords.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            keyword_sizes.push(l);\n        }\n\n        for(let i=0; i<colors.length; i++){\n\n            let trans = Math.max(...keyword_sizes);\n    \n            legend.push(\n            <g data-z-index=\"1\" transform={`translate(${(dimensions.width)/2 - trans/2}, ${i*18+10})`}>\n                <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke={colors[i]} stroke-width=\"0\"></path>\n                <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"12px\" stroke=\"#6c757d\" stroke-width=\"0\">{capitalizeString(keywords[i])}</text>\n            </g>\n        );\n        }\n\n        let height_trans = dimensions.height + 43;\n    \n        return (\n            <g transform={`translate(${0}, ${height_trans})`} class=\"plot_legend\" >\n                {legend}\n            </g>)\n    }\n}\n\nfunction calculate_translate_for_legend(keyword_length){\n    return (6,5)*keyword_length + 55;\n}","import React from 'react';\n\nexport const Static_Line = props => {\n\n  let x_frame = props.dimensions.width/(props.ranges.max_x-1)\n  let x = x_frame * (props.dimensions.historical_data_length - 1);\n\n  return (\n    <g>\n        <path fill=\"none\" class=\"plot_pointer_line\" d={`M ${x} 0 L ${x} ${props.dimensions.height}`} stroke-dasharray=\"6\" data-z-index=\"0\"></path>\n    </g>\n  )\n};\n\nexport default Static_Line","import React from 'react';\n\nexport const Pointer_Line = props => {\n  return (\n    <g transform={`translate(${props.mark_line.pos}, 0)`}>\n      <path fill=\"none\" data-z-index=\"0\" class=\"plot_mark_line\" d={`M 0 0 L 0 ${props.height}`} visibility={`mark_line.visibility`} />         \n    </g>\n  )\n};\n\nexport default Pointer_Line","import React from 'react';\nimport { capitalizeString } from \"./functions\";\n\nexport const Info_Box = props => {\n  return (\n    <g>\n      {get_info_box(props.info_box, props.width, props.height, props.keywords)}\n    </g>\n  )\n};\n\nexport default Info_Box\n\n\n\nfunction get_info_box(info_box, box_width, box_height, keywords){ \n\n  let y_data = [];\n  \n  if(info_box !== undefined && info_box.value_y !== undefined) {\n      for(let i=0; i<info_box.colors.length; i++){\n          if(info_box.value_y[3][i] !== null && info_box.value_y[2][i] !== null){\n              y_data.push(<g><path fill=\"none\" d={`M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}`} stroke={info_box.colors[i]} strokeWidth=\"2\" opacity=\"1\"></path>\n              <text x=\"25\" y={(i + 1)*25 + 25}>{capitalizeString(keywords[i])} {info_box.value_y[2][i].toFixed(1)} (min: {info_box.value_y[3][i].toFixed(1)} | max: {info_box.value_y[4][i].toFixed(1)})</text></g>)\n          } else {\n              y_data.push(<g><path fill=\"none\" d={`M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}`} stroke={info_box.colors[i]} strokeWidth=\"2\" opacity=\"1\"></path>\n                <text x=\"25\" y={(i + 1)*25 + 25}>{capitalizeString(keywords[i])} {info_box.value_y[2][i].toFixed(1)}</text></g>)\n          }\n      }\n  }\n\n  let date = formatDate(info_box.value_x)\n\n  return (\n  <g transform={`translate(${info_box.pos_x}, ${info_box.pos_y})`} data-z-index=\"1\" class=\"plot_info_box\" visibility={info_box.visibility}>\n    <rect x=\"0\" y=\"0\" width={box_width} height={box_height}  />   \n    <g class=\"plot_info_box_header\">\n      <text x=\"5\" y=\"25\">Date: {date}</text>\n    </g>\n    {y_data}\n  </g>)\n}\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}","import React from 'react';\n\nexport const Area_Path = props => {\n  console.log(\"path\")\n  if(props.style === \"dash\"){\n    return (\n      <g>{area_path(props.data, props.color, 4)}</g>\n    );\n  } else {\n    return (\n      <g>{area_path(props.data, props.color, 0, props.slice)}</g>\n    );\n  }\n};\n\nexport default Area_Path\n\n\n\n////////////////\n\nconst svgPath = (points, command, color, dash) => {\n\n  const d = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[2]}`\n  : `${acc} ${bezierCommand(point, i, a)}`\n  , '')\n\n  return <path d={d} fill=\"none\" stroke={color} strokeWidth=\"2\"  data-z-index=\"0\" stroke-dasharray={dash} pointer-events=\"none\" />\n}\n\nconst areaPath = (points, command, color) => {\n\n  let d1 = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[4]}`\n  : `${acc} ${bezierCommand_upper(point, i, a)}`\n  , '');\n\n\n\n  d1 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][3]}  `;\n\n  let d3 = points.reverse().reduce((acc, point, i, a) => i === 0\n  ? `L ${point[0]},${point[3]}`\n  : `${acc} ${bezierCommand_lower(point, i, a)}`\n  , '');\n\n\n  d3 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][4]}  `;\n\n  let d = d1 + d3;\n//////////////////////////////////////////\n\n  return <path d={d} fill={color} stroke={color} stroke-width=\"2\" data-z-index=\"0\" pointer-events=\"none\" opacity=\"0.35\" />\n}\n\n\n\nconst lineCommand = point => `L ${point[0]} ${point[2]}`\n\n    \nexport function area_path(data, color, dash=0, slice=0){\n\n\n    let result = [];\n    result.push(svgPath(data, lineCommand, color, dash));\n    result.push(areaPath(data.slice(slice), bezierCommand, color));\n\n    return result;\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// The smoothing ratio\nconst smoothing = 0.2\n\n\n// Properties of a line \n// I:  - pointA (array) [x,y]: coordinates\n//     - pointB (array) [x,y]: coordinates\n// O:  - (object) { length: l, angle: a }: properties of the line\nconst line = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[2] - pointA[2]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n// Position of a control point \n// I:  - current (array) [x, y]: current point coordinates\n//     - previous (array) [x, y]: previous point coordinates\n//     - next (array) [x, y]: next point coordinates\n//     - reverse (boolean, optional): sets the direction\n// O:  - (array) [x,y]: a tuple of coordinates\nconst controlPoint = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[2] + Math.sin(angle) * length\n  return [x, y]\n}\n\n// Create the bezier curve command \n// I:  - point (array) [x,y]: current point coordinates\n//     - i (integer): index of 'point' in the array 'a'\n//     - a (array): complete array of points coordinates\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\nconst bezierCommand = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[2]}`\n}\n\n\nconst bezierCommand_upper = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_upper(a[i - 1], a[i - 2], point)\n\n  // if(point[4]<0){\n  //   console.log(point[0]+ \": \" +point[1] + \" : \" + point[4])\n  // }\n  // end control point\n  const cpe = controlPoint_upper(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[4]}`\n}\n\nconst bezierCommand_lower = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_lower(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint_lower(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[3]}`\n}\n\n\nconst line_lower = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[3] - pointA[3]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nconst line_upper = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[4] - pointA[4]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst controlPoint_lower = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_lower(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[3] + Math.sin(angle) * length\n  return [x, y]\n}\n\nconst controlPoint_upper = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_upper(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[4] + Math.sin(angle) * length\n  return [x, y]\n}","import React from 'react';\n\nexport const Plot = props => {\n    return (\n        <g>\n            <text x={props.dimensions.width/2} class=\"plot_title\" textAnchor=\"middle\" y={-props.dimensions.y_trans/3}>{props.title}</text>\n        </g>\n    )\n};\n\nexport default Plot;\n","import React from 'react';\nimport './App.css';\nimport { get_random_colors, get_box_height, get_data_mocks_area_DATES, scale_data_mocks, get_data_map_area_DATES, get_min_value, get_max_value } from './utils/functions'\nimport { appConfig } from './utils/config.js';\n\nimport AxisX from './parts/AxisX';\nimport AxisY from './parts/AxisY';\nimport Legend from './parts/Legend';\nimport Static_Line from './parts/Static_Line';\nimport Pointer_Line from './parts/Pointer_Line';\nimport Info_Box from './parts/Info_Box';\nimport Area_Path from './parts/Area_Path';\nimport Plot from './parts/Plot';\n\n\nlet dimensions = appConfig.dimensions;\nlet array_length_dates = appConfig.array_length_dates + appConfig.array_length_dates_forecast;\n\nexport class KeywordPlot extends React.PureComponent {\t\n\n  constructor(props) {\n    super(props);\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleHoverOff = this.handleHoverOff.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    let x_trans_left = 85;\n    let y_trans_up = 85;\n    let y_trans_bottom = 85;\n\n    let width = window.innerWidth*(0.6) - 2*x_trans_left;\n    let height = this.props.height - y_trans_up - y_trans_bottom;\n\n    this.divRef = React.createRef();\n\n    let min_y = get_min_value(this.props.data.historical_data);\n    let max_y = get_max_value(this.props.data.historical_data);\n\n    this.state = {\n        title: this.props.options.title,\n        ticks_number: array_length_dates,\n        x_label: this.props.options.x_label,\n        y_label: this.props.options.y_label,\n        mark_line: {\n          pos: 0,\n          visibility: \"hidden\"\n        },\n        info_box: {\n          pos_x: 0,\n          pos_y: 0,\n          visibility: \"hidden\",\n          colors: get_random_colors(this.props.number_of_series),\n        },\n       scaled_data: this.scale_data_mocks(this.props.data, this.props.ranges, width, height, this.props.number_of_series),\n       data_map_area_DATES: this.get_data_map_area_DATES(this.props.data.historical_data, this.props.data.forecasted_data, array_length_dates, this.props.number_of_series),\n\n       colors: this.get_random_colors(this.props.number_of_series),\n       info_box_height: this.get_box_height(this.props.number_of_series),\n       number: this.props.number_of_series,\n       dimensions: {\n        width2: width,\n        width: width/1.1,\n        height: height,\n        x_trans: x_trans_left,\n        y_trans: y_trans_up,\n        y_trans2: y_trans_bottom,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       },\n       min_y: get_min_value(this.props.data.historical_data),\n       max_y: get_max_value(this.props.data.historical_data), \n       y_number: 12,\n    };\n  }\n\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.divRef.current.focus();\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  scaling(){\n\n  }\n  \n  updateWindowDimensions() {\n    let svg_width = this.divRef.current.clientWidth;\n\n    let x_trans_left = this.props.x_trans;\n    let y_trans_up = this.props.y_trans;\n    let x_trans_right = this.props.x_trans2;\n    let y_trans_bottom = this.props.y_trans2;\n\n    let plot_width = svg_width - x_trans_left - x_trans_right;\n    let plot_height = this.props.height - y_trans_up - y_trans_bottom;\n\n    this.setState({\n      dimensions: {\n        width2: svg_width,\n        width: plot_width,\n        height: plot_height,\n        x_trans: x_trans_left,\n        y_trans: y_trans_up,\n        x_trans2: x_trans_right,\n        y_trans2: y_trans_bottom,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       },\n       scaled_data: this.scale_data_mocks(this.props.data, this.props.ranges, plot_width, plot_height, this.props.number_of_series),\n    });\n  }\n\n  scale_data_mocks(data, ranges, width, height, number_of_series){\n    return scale_data_mocks(data, ranges, width, height, number_of_series)\n  }\n\n  get_data_map_area_DATES(data, forecasted_data, array_length_dates, number_of_series){\n    return get_data_map_area_DATES(get_data_mocks_area_DATES(data, forecasted_data, number_of_series), array_length_dates, number_of_series)\n  }\n\n  get_random_colors(number_of_series){\n    return get_random_colors(number_of_series)\n  }\n\n  get_box_height(number_of_series){\n    return get_box_height(number_of_series)\n  }\n\n\n  handleMouseMove(event) {\n    var e = event.target;\n    var dim = e.getBoundingClientRect();\n    var x = event.clientX - dim.left - this.state.dimensions.x_trans;\n    var y = event.clientY - dim.top - this.state.dimensions.y_trans;\n\n    if(x >= 0 && y >= 0 && x <= this.state.dimensions.width && y <= this.state.dimensions.height){\n\n      let x_diff = this.props.ranges.max_x - this.props.ranges.min_x;  \n      let x_frame = this.state.dimensions.width/x_diff;\n      let key = Math.round((x)/x_frame);\n\n      if (this.state.data_map_area_DATES[key] !== undefined){\n\n        let left_index = Math.round((this.props.ranges.max_x - this.props.ranges.min_x)/2) - 1;\n        let right_index = Math.round((this.props.ranges.max_x - this.props.ranges.min_x)/2) + 1;\n\n        //keys left\n        for(let i=this.props.ranges.min_x; i<=key; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i\n          }\n        }\n\n        //keys right\n        for(let i=key; i<=this.props.ranges.max_x; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            right_index = i\n          }\n        }\n    \n        //index difference\n        this.setState({\n          mark_line: {\n            pos: x,  \n          },\n          info_box: {\n            pos_x: x,\n            pos_y: y,\n            value_x: this.state.data_map_area_DATES[key][1],\n            value_y: this.state.data_map_area_DATES[key],\n            colors: get_random_colors(this.props.number_of_series)\n          }\n        })\n        if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n          this.setState({\n            mark_line: {\n              pos: x\n            }\n          })\n        }\n      } else if (key !== undefined){\n////////////////////////////\n\n        let left_index = key - 1;\n        let right_index = key + 1;\n        \n        //keys left\n        for (let i=key; i>=0; i--) {\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i;\n            break;\n          }\n        }\n\n        //keys right\n        for (let i=key; i<=this.props.ranges.max_x; i++) {\n          if(this.state.data_map_area_DATES[i] !== undefined) {\n            right_index = i;\n            break;\n          }\n        }\n\n        //index difference\n        let left_diff = key - left_index;\n        let right_diff = right_index - key;\n\n\n        if((this.state.data_map_area_DATES[left_index] !== undefined) && (this.state.data_map_area_DATES[right_index] !== undefined)){\n          if (left_diff<=right_diff ) {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          } else {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          }\n\n        }\n/////////////////\n\n      }\n    } else if (x > this.state.dimensions.width || y > this.state.dimensions.height || x < this.state.dimensions.x_trans || y < this.state.dimensions.y_trans){\n      this.setState({\n        mark_line: {\n          visibility: \"hidden\",\n          pos: 9999\n        },\n        info_box: {\n          visibility: \"hidden\",\n          pos_x: 9999,\n          pos_y: 9999,\n          colors: get_random_colors(this.props.number_of_series)\n        }\n      })\n    }\n  }\n  \n\n  handleHoverOff(event) {\n    this.setState({\n      mark_line:{\n          pos: 0,\n          visibility: \"hidden\"\n      },\n      info_box: {\n        pos_x: 0,\n        pos_y: 0,\n        visibility: \"hidden\",\n        colors: get_random_colors(this.props.number_of_series)\n      }\n    })\n  }\n\n  render() {\n\n    let area_paths = this.state.scaled_data[0].map(( entity, index ) => {\n        return (\n          <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"none\"} slice={4}/>\n        );\n      });\n  \n      let area_paths_future = this.state.scaled_data[1].map(( entity, index ) => {\n        return (\n          <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"dash\"} />\n        );\n      });\n\n    let v_b = \"0 0 \" + this.state.dimensions.width2 + \" \" + this.props.height;\n    let v_trans = \"translate(\" + this.state.dimensions.x_trans + \",\" + this.state.dimensions.y_trans + \")\";\n\n    const aa = this.state.max_y;\n    const bb = this.state.min_y;\n\n    let lower_bound = (Math.ceil(((bb)+1) / 10)-1) * 10\n    let upper_bound = Math.ceil((Math.abs(aa)+1) / 10) * 10\n\n\n    let calc_y_number = (upper_bound - lower_bound)/10;\n\n    return (\n      <div ref={this.divRef}>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" onMouseMove={this.handleMouseMove} onMouseLeave={this.handleHoverOff} className=\"test_plot\" width={this.state.dimensions.width2} height={this.props.height} viewBox={v_b}>\n            <g>\n              <g transform={v_trans}>\n\n                { area_paths }\n\n                { area_paths_future }\n                \n                <Plot dimensions={this.state.dimensions} y_number={this.state.y_number} title={this.state.title} />\n\n                <AxisY dimensions={this.state.dimensions} y_number={calc_y_number} y_label={this.state.y_label} lower_bound={lower_bound} upper_bound={upper_bound} />\n\n                <AxisX dimensions={this.state.dimensions} x_label={this.state.x_label} ticks={12} dates={this.state.data_map_area_DATES} />\n                \n                <Legend dimensions={this.state.dimensions} colors={this.state.colors} keywords={this.props.keywords} />\n\n                <Static_Line dimensions={this.state.dimensions} ranges={this.props.ranges} />\n\n                <Pointer_Line mark_line={this.state.mark_line} height={this.state.dimensions.height} />\n\n                <Info_Box info_box={this.state.info_box} width={dimensions.box_width} height={this.state.info_box_height} keywords={this.props.keywords}  />\n                \n              </g>\n            </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default KeywordPlot;\n","import { KeywordPlot } from \"./KeywordPlot\";\n\nexport const Plot = {\n    KeywordPlot,\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n// import { Spinner } from \"./loader\";\nimport { Plot } from \"./plot\";\n\nconst componentNames = [\n  // \"Oval\",\n  // \"Puff\",\n  \"KeywordPlot\",\n];\n\nfunction componentName() {\n  // if (componentNames.includes(type)) {\n  //   return Spinner[type];\n  // }\n  // return Spinner.Audio;\n  return Plot.KeywordPlot;\n}\n\n/**\n * @return {null}\n */\nexport default function KeywordPlot(props) {\n  const [display, setDisplay] = useState(true);\n\n  // useEffect(() => {\n  //   let timer;\n  //   if (props.timeout && props.timeout > 0) {\n  //     timer = setTimeout(() => {\n  //       setDisplay(false);\n  //     }, props.timeout);\n  //   }\n\n  //   return () => {\n  //     if (timer) clearTimeout(timer);\n  //   };\n  // });\n\n  // if (!props.visible || props.visible === \"false\") {\n  //   return null;\n  // }\n  // return display ? (\n  //   <div aria-busy=\"true\" className={props.className} style={props.style}>\n  //     {React.createElement(componentName(props.type), { ...props })}\n  //   </div>\n  // ) : null;\n  return display ? (\n    <div aria-busy=\"true\" >\n      {React.createElement(componentName(), { ...props })}\n    </div>\n  ) : null;\n}\n\nKeywordPlot.propTypes = {\n  type: PropTypes.oneOf([...componentNames]),\n  style: PropTypes.objectOf(PropTypes.string),\n  className: PropTypes.string,\n  visible: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  timeout: PropTypes.number\n};\n\nKeywordPlot.defaultProps = {\n  type: \"Puff2\",\n  style: {},\n  className: \"\",\n  visible: true,\n  timeout: 0\n};\n","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\nclass Header extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authenticated: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"myheader\">\n        <Form>\n          <b>Hello, {this.props.username}&nbsp;</b>\n          <Button variant=\"light\" className=\"btn-white\" type=\"submit\">\n              Logout\n          </Button>\n        </Form>\n      </div>\n\t\t);\n  }\n}\n\nexport default Header","\nexport const USA_STATES =[\n    ['us', 0, ' All states'],\n    ['us-ma', 1, 'Massachusetts'],\n    ['us-wa', 2, 'Washington'],\n    ['us-ca', 3, 'California'],\n    ['us-or', 4, 'Oregon'],\n    ['us-wi', 5, 'Wisconsin'],\n    ['us-me', 6, 'Maine'],\n    ['us-mi', 7, 'Michigan'],\n    ['us-nv', 8, 'Nevada'],\n    ['us-nm', 9, 'New Mexico'],\n    ['us-co', 10, \"Colorado\"],\n    ['us-wy', 11, 'Wyoming'],\n    ['us-ks', 12, 'Kansas'],\n    ['us-ne', 13, 'Nebraska'],\n    ['us-ok', 14, 'Oklahoma'],\n    ['us-mo', 15, 'Missouri'],\n    ['us-il', 16, 'Illinois'],\n    ['us-in', 17, 'Indiana'],\n    ['us-vt', 18, 'Vermont'],\n    ['us-ar', 19, 'Arkansas'],\n    ['us-tx', 20, 'Texas'],\n    ['us-ri', 21, 'Rhode Island'],\n    ['us-al', 22, 'Alabama'],\n    ['us-ms', 23, 'Mississippi'],\n    ['us-nc', 24, 'North Carolina'],\n    ['us-va', 25, 'Virginia'],\n    ['us-ia', 26, 'Iowa'],\n    ['us-md', 27, 'Maryland'],\n    ['us-de', 28, 'Delaware'],\n    ['us-pa', 29, 'Pennsylvania'],\n    ['us-nj', 30, 'New Jersey'],\n    ['us-ny', 31, 'New York'],\n    ['us-id', 32, 'Idaho'],\n    ['us-sd', 33, 'South Dakota'],\n    ['us-ct', 34, 'Connecticut'],\n    ['us-nh', 35, 'New Hampshire'],\n    ['us-ky', 36, 'Kentucky'],\n    ['us-oh', 37, 'Ohio'],\n    ['us-tn', 38, 'Tennessee'],\n    ['us-wv', 39, 'West Virginia'],\n    ['us-dc', 40, 'District of Columbia'],\n    ['us-la', 41, 'Louisiana'],\n    ['us-fl', 42, 'Florida'],\n    ['us-ga', 43, 'Georgia'],\n    ['us-sc', 44, 'South Carolina'],\n    ['us-mn', 45, 'Minnesota'],\n    ['us-mt', 46, 'Montana'],\n    ['us-nd', 47, 'North Dakota'],\n    ['us-az', 48, 'Arizona'],\n    ['us-ut', 49, 'Utah'],\n    ['us-hi', 50, 'Hawaii'],\n    ['us-ak', 51, 'Alaska']\n].sort(function (a, b) {\n    return ('' + a[2]).localeCompare(b[2]);\n})","import React, { Component } from 'react';\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport { USA_STATES } from '../states.js';\n\nconst time_frames = [\n    [0, \"Past 5 years\", \"today 5-y\"],\n    [1, \"Past 12 months\", \"today 12-m\"],\n    [2, \"Past 1 month\", \"today 1-m\"],\n    [3, \"Last 7 days\", \"now 7-d\"],\n]\n\nclass InputComponent extends Component {\t\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.selectedState = this.selectedState.bind(this);\n        this.selectedTimeFrame = this.selectedTimeFrame.bind(this);\n        this.state = {\n            keywords: [],\n            selected_state_name: USA_STATES[0][0],\n            selected_time_frame: time_frames[0][2]\n        };\n    }\n\n    handleClick(event){\n        event.preventDefault();\n\n        let keywords = this.arrayTrim(this.state.keywords);\n        let selectedState = this.state.selected_state_name;\n        let selectedTimeFrame = this.state.selectedTimeFrame;\n\n        // console.log(\"input state: \" + selectedState)\n\n        this.props.callbackFromParent(keywords, selectedState, selectedTimeFrame);\n    }\n\n    selectedState(event){\n        this.setState({\n            selected_state_name: event.target.value.split(',')[0]\n        });\n    }\n\n    selectedTimeFrame(event){\n        this.setState({\n            selected_time_frame: event.target.value.split(',')[2]\n        });\n    }\n\n    handleChange(event) {\n\n        let array = event.target.value.split(',')\n\n        this.setState({\n            keywords: array,\n            username: \"name\",\n        });\n    }\n\n    arrayTrim(array){\n        let result = array.map(function (el) {\n            return el.trim();\n        });\n\n        return result;\n    }\n    \n    render() {\n        let namesList = USA_STATES.map(function(state){\n            return <option key={state[1]} value={state}>{state[2]}</option>;\n        })\n\n        let time_framesList = time_frames.map(function(time_frame){\n            return <option key={time_frame[0]} value={time_frame}>{time_frame[1]}</option>;\n        })\n\n        return (\n            <div className=\"input_bar input-bar-item width100\">\n                <Form onSubmit={this.handleClick}>\n                    <Form.Group className=\"form-inline\">\n                        <div className=\"keyword_div\"> \n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"keywords_input\"><h5>Type your keywords:</h5></Form.Label>\n                                </div>\n                                <Form.Control className=\"width100 mr-1 input_keywords\" type=\"text\" placeholder=\"Enter keywords\" value={this.state.keywords} onChange={this.handleChange} id=\"keywords_input\" />\n                            </div>\n                        </div>\n                        <div className=\"timeframe_div\">\n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_timeframe_input\"><h5>Select time frame:</h5></Form.Label>\n                                </div>\n                                <Form.Control as=\"select\" onChange={this.selectedTimeFrame}  id=\"select_timeframe_input\" className=\"form-control width100 mr-1 input_timeframe\">\n                                    {time_framesList}\n                                </Form.Control>                                \n                            </div>\n                        </div>\n                        <div className=\"state_select_div\">\n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_state_input\"><h5>Select state:</h5></Form.Label>\n                                </div>\n                                <Form.Control as=\"select\" onChange={this.selectedState}  id=\"select_state_input\" className=\"form-control width100 mr-1 input_state\">\n                                    {namesList}\n                                </Form.Control>                                \n                                <div className=\"input_button\">\n                                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </Form.Group>\n                </Form>\n            </div>\n\t\t);\n    }\n}\n\nexport default InputComponent\n","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\n\nclass LoginComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChangeLogin = this.handleChangeLogin.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.state = {\n        authenticated: true,\n        username: \"user\",\n        password: \"user\"\n    };\n  }\n\n  handleClick(){\n    if(this.state.username === \"user\" && this.state.password === \"user\"){\n      this.props.callbackFromLogin(this.state);\n    }\n  }\n\n  handleChangeLogin(event) {\n    this.setState({\n        username: event.target.value\n    });\n  }\n\n  handleChangePassword(event) {\n    this.setState({\n        password: event.target.value\n    });\n  }\n\n\n  render() {\n\n    return (\n\t\t<div className=\"loginform\">\n        <h2>Login page</h2>\n        <br/>\n\n        <h5>Username: user</h5>\n        <h5>Password: user</h5>\n        <br/>\n            <Form onSubmit={this.handleClick}>\n              <Form.Group controlId=\"formBasicUsername\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter username\" value={this.state.keywords} onChange={this.handleChangeLogin}/>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.keywords} onChange={this.handleChangePassword}/>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                  Login\n              </Button>\n            </Form>\n\n\t\t</div>\n\t\t);\n\n  }\n\n\n}\n\nexport default LoginComponent","import React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport { capitalizeString } from './plot/src/plot/parts/functions';\n\nclass TableComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      keywords: []\n\t\t};\n  }\n\n  render() {\n\n    var tableHeaders = this.props.tableData.headers.map(( entity, index ) => {\n      return (\n        <th key={index} className=\"align-top\">{entity}</th>\n      );\n    })\n\n    var tableRows = this.props.tableData.data.map(( entity, index ) => {\n      let cells = entity.map((e,i) => {\n\n        if(e !== null){\n          if(i>0){\n            return <td key = {i}>{e.toFixed(2)}</td>\n          }else{\n            return <td key = {i}>{capitalizeString(e)}</td>\n          }\n        }else{\n          if(i>0){\n            return <td key = {i}>{\"0.00\"}</td>\n          }else{\n            return <td key = {i}>{\"0.00\"}</td>\n          }\n        }\n      })\n      \n      return (\n        <tr key={index}>\n          <td>{index + 1}</td>\n          {cells}\n        </tr>\n      );\n    })\n\n    return (\n\t\t<div className=\"table_div\">\n      <span className=\"center\"><h3>{this.props.title}</h3></span>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th className=\"align-top\">#</th>\n            <th className=\"align-top\">Keyword</th>\n            {tableHeaders}\n          </tr>\n        </thead>\n        <tbody>\n          {tableRows}\n        </tbody>\n      </Table>\n\t\t</div>\n\t\t);\n  }\n}\n\nexport default TableComponent","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highchartsMap from \"highcharts/modules/map\";\nimport mapDataIE from \"@highcharts/map-collection/countries/us/us-all.geo.json\";\nhighchartsMap(Highcharts); // Initialize the map module\n\n// const data = [\n//     ['us-ma', 0],\n//     ['us-wa', 1],\n//     ['us-ca', 2],\n//     ['us-or', 3],\n//     ['us-wi', 4],\n//     ['us-me', 5],\n//     ['us-mi', 6],\n//     ['us-nv', 7],\n//     ['us-nm', 8],\n//     ['us-co', 9],\n//     ['us-wy', 10],\n//     ['us-ks', 11],\n//     ['us-ne', 12],\n//     ['us-ok', 13],\n//     ['us-mo', 14],\n//     ['us-il', 15],\n//     ['us-in', 16],\n//     ['us-vt', 17],\n//     ['us-ar', 18],\n//     ['us-tx', 19],\n//     ['us-ri', 20],\n//     ['us-al', 21],\n//     ['us-ms', 22],\n//     ['us-nc', 23],\n//     ['us-va', 24],\n//     ['us-ia', 25],\n//     ['us-md', 26],\n//     ['us-de', 27],\n//     ['us-pa', 28],\n//     ['us-nj', 29],\n//     ['us-ny', 30],\n//     ['us-id', 31],\n//     ['us-sd', 32],\n//     ['us-ct', 33],\n//     ['us-nh', 34],\n//     ['us-ky', 35],\n//     ['us-oh', 36],\n//     ['us-tn', 37],\n//     ['us-wv', 38],\n//     ['us-dc', 39],\n//     ['us-la', 40],\n//     ['us-fl', 41],\n//     ['us-ga', 42],\n//     ['us-sc', 43],\n//     ['us-mn', 44],\n//     ['us-mt', 45],\n//     ['us-nd', 46],\n//     ['us-az', 47],\n//     ['us-ut', 48],\n//     ['us-hi', 49],\n//     ['us-ak', 50],\n//     ['undefined', 51]\n// ];\n\nconst western_states = [\n  ['us-ca', \"#20e012\"],\n  ['us-or', \"#20e012\"],\n  ['us-id', \"#20e012\"],\n  ['us-mt', \"#20e012\"],\n  ['us-az', \"#20e012\"],\n  ['us-nv', \"#20e012\"],\n  ['us-wa', \"#20e012\"],\n  ['us-ut', \"#20e012\"]\n];\n\nconst central_states = [\n  ['us-wy', \"#BADA55\"],\n  ['us-nd', \"#BADA55\"],\n  ['us-sd', \"#BADA55\"],\n  ['us-co', \"#BADA55\"],\n  ['us-ks', \"#BADA55\"],\n  ['us-ky', \"#BADA55\"],\n  ['us-in', \"#BADA55\"],\n  ['us-wi', \"#BADA55\"],\n  ['us-ne', \"#BADA55\"],\n  ['us-ia', \"#BADA55\"],\n  ['us-mi', \"#BADA55\"],\n  ['us-mo', \"#BADA55\"],\n  ['us-il', \"#BADA55\"],\n  ['us-mn', \"#BADA55\"],\n  ['undefined', \"#BADA55\"]\n];\n\nconst eastern_states = [\n  ['us-oh', \"#003fed\"],\n  ['us-ny', \"#003fed\"],\n  ['us-nc', \"#003fed\"],\n  ['us-vt', \"#003fed\"],\n  ['us-wv', \"#003fed\"],\n  ['us-md', \"#003fed\"],\n  ['us-de', \"#003fed\"],\n  ['us-ri', \"#003fed\"],\n  ['us-ma', \"#003fed\"],\n  ['us-me', \"#003fed\"],\n  ['us-nh', \"#003fed\"],\n  ['us-sc', \"#003fed\"],\n  ['us-va', \"#003fed\"],\n  ['us-nj', \"#003fed\"],\n  ['us-dc', \"#003fed\"],\n  ['us-ct', \"#003fed\"],\n  ['us-pa', \"#003fed\"]\n];\n\nconst southern_states = [\n  ['us-tx', \"#e08a12\"],\n  ['us-nm', \"#e08a12\"],\n  ['us-tn', \"#e08a12\"],\n  ['us-ga', \"#e08a12\"],\n  ['us-fl', \"#e08a12\"],\n  ['us-ar', \"#e08a12\"],\n  ['us-ok', \"#e08a12\"],\n  ['us-la', \"#e08a12\"],\n  ['us-al', \"#e08a12\"],\n  ['us-hi', \"#e08a12\"],\n  ['us-ak', \"#e08a12\"],\n  ['us-ms', \"#e08a12\"]\n];\n\nclass Chart extends React.PureComponent {\n\n  constructor(props) {\n      super(props);\n\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  \n      this.state = {\n          mapOptions:  {\n              chart: {\n                height: this.props.height,\n\n                map: \"countries/ie/ie-all\",\n                events: {\n                    drilldown: function(e) {\n                      console.log('from drillDown');\n                    },\n                    drillup: function() {\n                      console.log('from drillUp');\n                    }\n                  },\n                panning: true,\n                panKey: 'shift'\n              },\n              tooltip: { \n                enabled: true,\n                formatter: function () {\n                  return '<b>' + this.point.name + '</b>';\n                },\n              },\n              legend: {\n                layout: \"vertical\",\n                align: \"right\",\n                verticalAlign: \"middle\",\n                enabled: false\n              },\n            \n              title: {\n                text: null\n              },\n            \n              mapNavigation: {\n                enabled: false,\n                buttonOptions: {\n                  verticalAlign: \"bottom\"\n                }\n              },\n            \n              plotOptions: {\n                map: {\n                  states: {\n\n                    color: \"#126c31\",\n\n                    hover: {\n                      color: \"#000000\",\n                      enabled: true,\n                      brightness: 0.5\n                    },\n                    \n                  }\n                },\n                series:{\n                    point:{\n                        events:{\n                            click: this.setHoverData.bind(this)\n                        }\n                    }\n                }\n              },\n            \n              series: [\n                // {\n                //   data: data,\n                //   mapData: mapDataIE,\n                //   name: \"USA\",\n                //   dataLabels: {\n                //       enabled: true,\n                //       format: \"{point.properties.postal-code}\"\n                //   }\n                // },\n\n                {\n                  data: western_states.concat(central_states).concat(eastern_states).concat(southern_states),\n                  keys: ['hc-key', 'color'],\n                  mapData: mapDataIE,\n                  name: \" \",\n                  dataLabels: {\n                      enabled: true,\n                      color: '#FFFFFF',\n                      format: \"{point.properties.postal-code}\"\n                  },\n                  showInLegend: false\n                },\n\n              ],\n\n              legend: {\n                enabled: true\n              },\n            \n              drilldown: {\n                activeDataLabelStyle: {\n                  color: \"#FFFFFF\",\n                  textDecoration: \"none\",\n                  textOutline: \"1px #000000\"\n                },\n                drillUpButton: {\n                  relativeTo: \"spacingBox\",\n                  position: {\n                    x: 0,\n                    y: 60\n                  }\n                }\n              }\n            }\n      };\n    }\n\n    setHoverData = (e) => {\n      // console.log(e.point[\"hc-key\"])\n      this.props.callbackFromApp(e.point[\"hc-key\"])\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  \n    \n    updateWindowDimensions() {\n      \n      // let div_width2 = this.divRef.current.clientWidth;\n      // let div_width = div_width2 - 2*85;\n      // let height = this.props.height - 2*85;\n  \n      this.setState({\n        mapOptions:  {\n          chart: {\n            height: this.props.height,\n\n            map: \"countries/ie/ie-all\",\n            events: {\n                drilldown: function(e) {\n                  console.log('from drillDown');\n                },\n                drillup: function() {\n                  console.log('from drillUp');\n                }\n              },\n            panning: true,\n            panKey: 'shift'\n          },\n          tooltip: { \n            enabled: true,\n            formatter: function () {\n              return '<b>' + this.point.name + '</b>';\n            },\n          },\n          legend: {\n            layout: \"vertical\",\n            align: \"right\",\n            verticalAlign: \"middle\",\n            enabled: false\n          },\n        \n          title: {\n            text: null\n          },\n        \n          mapNavigation: {\n            enabled: false,\n            buttonOptions: {\n              verticalAlign: \"bottom\"\n            }\n          },\n        \n          plotOptions: {\n            map: {\n              states: {\n\n                color: \"#126c31\",\n\n                hover: {\n                  color: \"#000000\",\n                  enabled: true,\n                  brightness: 0.5\n                },\n                \n              }\n            },\n            series:{\n                point:{\n                    events:{\n                        click: this.setHoverData.bind(this)\n                    }\n                }\n            }\n          },\n        \n          series: [\n            {\n              data: western_states.concat(central_states).concat(eastern_states).concat(southern_states),\n              keys: ['hc-key', 'color'],\n              mapData: mapDataIE,\n              name: \" \",\n              dataLabels: {\n                  enabled: true,\n                  color: '#FFFFFF',\n                  format: \"{point.properties.postal-code}\"\n              },\n              showInLegend: false\n            },\n          ],\n\n          legend: {\n            enabled: false\n          },\n        \n          drilldown: {\n            activeDataLabelStyle: {\n              color: \"#FFFFFF\",\n              textDecoration: \"none\",\n              textOutline: \"1px #000000\"\n            },\n            drillUpButton: {\n              relativeTo: \"spacingBox\",\n              position: {\n                x: 0,\n                y: 60\n              }\n            }\n          }\n        }         \n      });\n    }\n  \n    render() {\n        return (\n            <div className=\"map_content\">\n                <HighchartsReact\n                    constructorType={\"mapChart\"}\n                    highcharts={Highcharts}\n                    options={this.state.mapOptions} \n                />\n            </div>\n        );\n      }\n  }\n\n  export default Chart\n\n","import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport KeywordPlot from './components/plot';\nimport { get_min_value, get_max_value} from './components/plot/src/plot/parts/functions';\nimport { appConfig } from './config.js';\nimport { capitalizeString } from './components/plot/src/plot/parts/functions';\n\nimport Loader from \"react-loader-spinner\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css';\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\nconst HEADERS_GROWTH_RATES = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"];\nconst HEADERS_PROJECTED_GROWTH = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"];\nconst ratio = 4.5;\n\nclass App extends React.PureComponent {\n  \n    constructor(props){\n      super(props);\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n      this.state = {\n        username: \"user\",\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        selected_time_frame: \"today 5-y\",\n        keywords: [],\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n        data: [],\n        rate_table_data: [],\n        growth_table_data: [],\n        x_trans: 85,\n        y_trans: 85,\n        fetching_results: false,\n      };\n\n      this.myRef = React.createRef();\n    }\n\n    fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(keywords, selected_state_name, selected_time_frame)\n    }\n\n    mapCallback = (state) => {\n      console.log(\"state \" + state)\n\n      this.setState({\n        displayResults: false,\n      });\n\n      this.fetchData(this.state.keywords, state, this.state.selected_time_frame)\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n      // let url = appConfig.KEYWORDS_NEW;\n      let url = \"/api\"\n\n      this.setState({\n        fetching_results: true,\n        keywords: keywords\n      })\n\n      // console.log(\"state \" + state)\n      \n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type':'application/json',\n        },\n        body: JSON.stringify({\n          keywords: keywords, region_state: state, time_frame: selected_time_frame\n        }),\n      }).then(res => res.json())\n          .then(\n          (result) => {\n            let width = this.myRef.current.offsetWidth;\n            let sizes = this.get_dimensions(width);\n      \n            this.setState({\n                keywords: keywords,\n                displayResults: true,\n                region_state: state,\n                selected_time_frame: selected_time_frame,\n                displayResults: true,\n                data: this.get_data(keywords, result),\n                rate_table_data: this.getRateTableData(result.growth_rate_result),\n                growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n                div_height: sizes.height,\n                x_trans: sizes.x_trans,\n                y_trans: sizes.y_trans,\n                x_trans2: sizes.x_trans2,\n                y_trans2: sizes.y_trans2,\n                fetching_results: false\n            });\n          }).catch(function(error) {\n          \n          })\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n      this.myRef.current.focus();\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n      let width = this.myRef.current.offsetWidth;\n      let sizes = this.get_dimensions(width);\n\n      this.setState({\n        div_height: sizes.height,\n        x_trans: sizes.x_trans,\n        y_trans: sizes.y_trans,\n        x_trans2: sizes.x_trans2,\n        y_trans2: sizes.y_trans2,\n      });\n    }\n\n    render() {\n\n      let ranges =  {\n        max_x: (261 + 52 + 0),\n        min_x: 0,\n        max_y: 120,\n        min_y: -10,\n      }\n\n      if(this.state.displayResults) {\n        let min_y = get_min_value(this.state.data.historical_data);\n        let max_y = get_max_value(this.state.data.historical_data);\n\n        let lower_bound = (Math.ceil(((min_y)+1) / 10)-1) * 10\n        let upper_bound = Math.ceil((Math.abs(max_y)+1) / 10) * 10\n\n        ranges = {\n          max_x: (this.state.data.historical_data[0].length + this.state.data.forecasted_data[0].length),\n          min_x: 0,\n          max_y: upper_bound,\n          min_y: lower_bound,\n        }\n\n        // console.log(\"ranges\")\n        // console.log(ranges)\n      }\n\n        // console.log(this.state.keywords.length)\n\n\n      if (this.state.authenticated) {\n        return (\n          <div ref={this.myRef}>\n            <div className=\"main_results\">\n\n            {/* {this.state.keywords.length<=5 ? (<div>\n\n              \n\n            </div>) : (<div>Too many keywords</div>)\n              \n            } */}\n\n            {(this.state.displayResults) ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"results_div\">\n                    <div className=\"map_div\">\n                      <Chart callbackFromApp={this.mapCallback} height={this.state.div_height} />\n                    </div>\n                    <div id=\"plot_div\"> \n                        <KeywordPlot options={this.state.options} ranges={ranges} data={this.state.data} number_of_series={this.state.data.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} x_trans2={this.state.x_trans2} y_trans2={this.state.y_trans2} />\n                    </div>\n              </div>\n              <div className=\"tables\">\n                <Row>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.rate_table_data} title={\"Growth Rate\"}/>\n                    </div>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.growth_table_data} title={\"Projected growth\"} />\n                    </div>\n                </Row>\n                <Row>\n                  {/* <KeywordPlot height={500} width={500} radius={50} color={\"red\"} /> */}\n                  {/* <KeywordPlot options={this.state.options} ranges={ranges} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} x_trans2={this.state.x_trans2} y_trans2={this.state.y_trans2} /> */}\n                </Row>\n              </div>\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"intro\">\n              </div>\n              {this.state.fetching_results ? (    \n                <div className=\"spinner\">\n                  <Loader type=\"Oval\" color=\"#007bff\" height={200} width={200} timeout={30000}/>\n                </div>   \n                ) : (<div></div>) }\n            </div>\n            )\n          }\n          </div>\n        </div>\n      );\n        } else {\n          return (\n          <div ref={this.myRef}>\n              <Login callbackFromLogin={this.toLoginCallback}/>\n          </div>);      \n        }\n    }\n    \n    getGrowthTableData(data){\n      let headers = HEADERS_PROJECTED_GROWTH;\n      \n      let arr = Object.keys(data[\"Keyword\"]).map(\n        function(key){\n          return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]]\n        }\n      );\n  \n      let result = {\n        data: arr,\n        headers: headers\n      }\n  \n      return result;\n    }\n    \n    getRateTableData(data){\n      let headers = HEADERS_GROWTH_RATES;\n      let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"]\n  \n      let arr = Object.keys(data[\"Keyword\"]).map(\n        function(key){\n          return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n        }\n      );\n  \n      let result = {\n        data: arr,\n        headers: table_headers\n      }\n  \n      return result;\n    }\n\n\n  get_data(keywords, result){\n    let historical_data = []\n    let forecasted_data = []\n\n    for (let keyword in keywords) {  \n        let index = 0;\n        let k_w = keywords[keyword]\n        let arr = Object.keys(result[k_w][MA_Day_5+k_w]).map(\n\n          function(key){\n            if(index<4) {\n              return [index++, new Date(key).valueOf(), result[k_w][k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            } else {\n              return [index++, new Date(key).valueOf(), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n          }\n        );\n        historical_data.push(arr)\n\n        arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n        \n          function(key){\n            if(index<4) {\n              return [index++, new Date(key).valueOf(), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]            \n            } else {\n              return [index++, new Date(key).valueOf(), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n            }\n          }\n        );\n        forecasted_data.push(arr)\n    }\n\n    return {\n      historical_data: historical_data,\n      forecasted_data: forecasted_data\n    }\n  }\n\n  get_dimensions(width){\n    let height = width/(ratio);\n    let x_trans = this.state.x_trans;\n    let y_trans = this.state.y_trans;\n    let x_trans2 = this.state.x_trans;\n    let y_trans2 = this.state.y_trans;\n\n    if(width>1800){\n      height = height;\n      x_trans = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if(width<=1800){\n      height = (1.2)*width/(ratio);\n      x_trans = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if(width<=1600){\n      height = (1.4)*width/(ratio);\n      x_trans = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n    \n    if(width<=1400){\n      height = (1.6)*width/(ratio);\n      x_trans = 70;\n      y_trans = 70;\n      x_trans2 = 50;\n      y_trans2 = 70;\n    }\n\n    if(width<=1200){\n      height = (1.8)*width/(ratio);\n      x_trans = 60;\n      y_trans = 60;\n      x_trans2 = 50;\n      y_trans2 = 70;\n    }\n\n    // if(width<=800){\n    //   height = (2.2)*width/(ratio);\n    //   x_trans = 60;\n    //   y_trans = 20;\n    //   x_trans2 = 20;\n    //   y_trans2 = 60;\n    // }\n\n    if(width<=700) {\n      height = (4)*width/(ratio);\n      x_trans = 60;\n      y_trans = 20;\n      x_trans2 = 50;\n      y_trans2 = this.state.keywords.length*14 + 80;\n    }\n\n    let sizes = {\n      height: height,\n      x_trans: x_trans,\n      y_trans: y_trans,\n      x_trans2: x_trans2,\n      y_trans2: y_trans2\n    }\n\n    return sizes;\n  }\n}\n  \n  \nexport default App;\n","\nexport const appConfig = {\n    KEYWORDS_URL: \"http://localhost:5000/keywords\",\n    KEYWORDS_URL3: \"http://localhost:5000/all\",\n    KEYWORDS_URL2: \"http://0.0.0.0:5000/\",\n    KEYWORDS_NEW: \"http://0.0.0.0:5000/api\",\n    RATE_RANKER_URL: \"http://localhost:5000/rateranker\",\n    GROWTH_RANKER_URL: \"http://localhost:5000/growthranker\"\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}