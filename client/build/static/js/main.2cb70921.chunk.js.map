{"version":3,"sources":["components/Header.js","states.js","components/Input.js","components/Login.js","utils_dates/functions.js","components/Table.js","components/Chart.js","utils_dates/config.js","utils_dates/graphics.js","components/AxisX.js","components/Legend.js","components/AxisY.js","components/Static_Line.js","components/Pointer_Line.js","components/Info_Box.js","utils_dates/area_path.js","Test_Plot_Dates.js","components/Area_Path.js","components/Plot.js","App.js","config.js","serviceWorker.js","index.js"],"names":["Header","props","state","authenticated","className","Form","this","username","Button","variant","type","Component","USA_STATES","sort","a","b","localeCompare","time_frames","InputComponent","handleClick","bind","handleChange","selectedState","selectedTimeFrame","keywords","selected_state_name","selected_time_frame","event","preventDefault","arrayTrim","callbackFromParent","setState","target","value","split","array","map","el","trim","namesList","key","time_framesList","time_frame","onSubmit","Group","Label","htmlFor","Control","placeholder","onChange","id","as","LoginComponent","handleChangeLogin","handleChangePassword","password","callbackFromLogin","controlId","get_random","min","max","Math","ceil","floor","random","get_random_colors","number","slice","scale_data_area_dates","data","ranges","width","height","prefix","result","x_frame","max_x","min_x","y_frame","max_y","min_y","i","length","push","get_random_mock_area_array_dates","dates","s_d1","s_d2","capitalizeString","string","str","splitStr","toLowerCase","charAt","toUpperCase","substring","join","titleCase","get_historical_dates","Date","UTC","get_forecasted_dates","TableComponent","console","log","tableData","tableHeaders","headers","entity","index","tableRows","cells","e","toFixed","title","Table","striped","bordered","hover","highchartsMap","Highcharts","western_states","central_states","eastern_states","southern_states","Chart","setHoverData","callbackFromApp","point","updateWindowDimensions","mapOptions","chart","events","drilldown","drillup","panning","panKey","tooltip","enabled","formatter","name","legend","layout","align","verticalAlign","text","mapNavigation","buttonOptions","plotOptions","states","color","brightness","series","click","concat","keys","mapData","mapDataIE","dataLabels","format","showInLegend","activeDataLabelStyle","textDecoration","textOutline","drillUpButton","relativeTo","position","x","y","window","addEventListener","removeEventListener","constructorType","highcharts","options","React","PureComponent","appConfig","dimensions","box_width","box_height","number_of_plots","ranges_dates","array_length_dates","array_length_dates_forecast","KEYWORDS_URL","make_yy_tick","line","get_y_ticks","lines_number","frame","make_x_tick","get_ticks","ticks_number","make_y_tick","get_y_axis","prepare_x_axis","data_mock","Object","data_frame","formatDate_monthly","get_x_axis","x_trans","y_trans","get_red_line","historical_data_length","get_info_box","info_box","y_data","undefined","value_y","colors","date","d","dd","getDate","mm","getMonth","yyyy","getFullYear","formatDate","value_x","pos_x","pos_y","visibility","prepare_legend","keyword_sizes","l","calculate_translate_for_legend","translation","reduce","width_trans","width2","height_trans","keyword_length","AxisX","dangerouslySetInnerHTML","__html","x_label","ticks","Legend","Static_Line","Pointer_Line","mark_line","pos","Info_Box","svgPath","points","command","dash","acc","bezierCommand","areaPath","d1","bezierCommand_upper","d3","reverse","bezierCommand_lower","lineCommand","area_path","controlPoint","current","previous","next","o","pointA","pointB","lengthX","lengthY","sqrt","pow","angle","atan2","PI","cos","sin","cps","cpe","controlPoint_upper","controlPoint_lower","line_lower","line_upper","Area_Path","style","Plot","y_number","historical_data_mock","forecasted_data_mock","unshift","Test_Plot_Dates","handleMouseMove","handleHoverOff","innerWidth","divRef","createRef","y_label","number_of_series","scaled_historical_data","scale_data_mocks","historical_data","forecasted_data","scaled_forecasted_data","data_map_area_DATES","get_data_map_area_DATES","info_box_height","get_box_height","forecasted_data_length","focus","div_width2","clientWidth","div_width","data_mocks_area_DATES1","data_mocks_area_DATES2","scaled_data_mocks_area_DATES","scaled_data_mocks_area_future_DATES","data_mocks_area_DATES","y_data_normal","y_data_min","y_data_max","j","get_data_mocks_area_DATES","dim","getBoundingClientRect","clientX","left","clientY","top","x_diff","round","left_index","right_index","area_paths","area_paths_future","v_b","v_trans","ref","version","xmlns","preserveAspectRatio","onMouseMove","onMouseLeave","viewBox","transform","KEYWORDS_URL3","KEYWORDS_URL2","KEYWORDS_NEW","RATE_RANKER_URL","GROWTH_RANKER_URL","App","fetchCallback","displayResults","fetchData","region_state","rate_table_data","growth_table_data","myRef","fetch","method","body","JSON","stringify","then","res","json","offsetWidth","y_trans2","get_historical_data","get_forecasted_data","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","div_height","Input","Row","Login","toLoginCallback","keyword","k_w","arr","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cb70921.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\nclass Header extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authenticated: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"myheader\">\n        <Form>\n          <b>Hello, {this.props.username}&nbsp;</b>\n          <Button variant=\"light\" className=\"btn-white\" type=\"submit\">\n              Logout\n          </Button>\n        </Form>\n      </div>\n\t\t);\n  }\n}\n\nexport default Header","\nexport const USA_STATES =[\n    ['us', 0, ' All states'],\n    ['us-ma', 1, 'Massachusetts'],\n    ['us-wa', 2, 'Washington'],\n    ['us-ca', 3, 'California'],\n    ['us-or', 4, 'Oregon'],\n    ['us-wi', 5, 'Wisconsin'],\n    ['us-me', 6, 'Maine'],\n    ['us-mi', 7, 'Michigan'],\n    ['us-nv', 8, 'Nevada'],\n    ['us-nm', 9, 'New Mexico'],\n    ['us-co', 10, \"Colorado\"],\n    ['us-wy', 11, 'Wyoming'],\n    ['us-ks', 12, 'Kansas'],\n    ['us-ne', 13, 'Nebraska'],\n    ['us-ok', 14, 'Oklahoma'],\n    ['us-mo', 15, 'Missouri'],\n    ['us-il', 16, 'Illinois'],\n    ['us-in', 17, 'Indiana'],\n    ['us-vt', 18, 'Vermont'],\n    ['us-ar', 19, 'Arkansas'],\n    ['us-tx', 20, 'Texas'],\n    ['us-ri', 21, 'Rhode Island'],\n    ['us-al', 22, 'Alabama'],\n    ['us-ms', 23, 'Mississippi'],\n    ['us-nc', 24, 'North Carolina'],\n    ['us-va', 25, 'Virginia'],\n    ['us-ia', 26, 'Iowa'],\n    ['us-md', 27, 'Maryland'],\n    ['us-de', 28, 'Delaware'],\n    ['us-pa', 29, 'Pennsylvania'],\n    ['us-nj', 30, 'New Jersey'],\n    ['us-ny', 31, 'New York'],\n    ['us-id', 32, 'Idaho'],\n    ['us-sd', 33, 'South Dakota'],\n    ['us-ct', 34, 'Connecticut'],\n    ['us-nh', 35, 'New Hampshire'],\n    ['us-ky', 36, 'Kentucky'],\n    ['us-oh', 37, 'Ohio'],\n    ['us-tn', 38, 'Tennessee'],\n    ['us-wv', 39, 'West Virginia'],\n    ['us-dc', 40, 'District of Columbia'],\n    ['us-la', 41, 'Louisiana'],\n    ['us-fl', 42, 'Florida'],\n    ['us-ga', 43, 'Georgia'],\n    ['us-sc', 44, 'South Carolina'],\n    ['us-mn', 45, 'Minnesota'],\n    ['us-mt', 46, 'Montana'],\n    ['us-nd', 47, 'North Dakota'],\n    ['us-az', 48, 'Arizona'],\n    ['us-ut', 49, 'Utah'],\n    ['us-hi', 50, 'Hawaii'],\n    ['us-ak', 51, 'Alaska']\n].sort(function (a, b) {\n    return ('' + a[2]).localeCompare(b[2]);\n})","import React, { Component } from 'react';\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport { USA_STATES } from '../states.js';\n\nconst time_frames = [\n    [0, \"Past 5 years\", \"today 5-y\"],\n    [1, \"Past 12 months\", \"today 12-m\"],\n    [2, \"Past 1 month\", \"today 1-m\"],\n    [3, \"Last 7 days\", \"now 7-d\"],\n]\n\nclass InputComponent extends Component {\t\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.selectedState = this.selectedState.bind(this);\n        this.selectedTimeFrame = this.selectedTimeFrame.bind(this);\n        this.state = {\n            keywords: [],\n            selected_state_name: USA_STATES[0][0],\n            selected_time_frame: time_frames[0][2]\n        };\n    }\n\n    handleClick(event){\n        event.preventDefault();\n\n        let keywords = this.arrayTrim(this.state.keywords);\n        let selectedState = this.state.selectedState;\n        let selectedTimeFrame = this.state.selectedTimeFrame;\n\n        this.props.callbackFromParent(keywords, selectedState, selectedTimeFrame);\n    }\n\n    selectedState(event){\n        this.setState({\n            selected_state_name: event.target.value.split(',')[0]\n        });\n    }\n\n    selectedTimeFrame(event){\n        this.setState({\n            selected_time_frame: event.target.value.split(',')[2]\n        });\n    }\n\n    handleChange(event) {\n\n        let array = event.target.value.split(',')\n\n        this.setState({\n            keywords: array,\n            username: \"name\",\n        });\n    }\n\n    arrayTrim(array){\n        let result = array.map(function (el) {\n            return el.trim();\n        });\n\n        return result;\n    }\n    \n    render() {\n        let namesList = USA_STATES.map(function(state){\n            return <option key={state[1]} value={state}>{state[2]}</option>;\n        })\n\n        let time_framesList = time_frames.map(function(time_frame){\n            return <option key={time_frame[0]} value={time_frame}>{time_frame[1]}</option>;\n        })\n\n        return (\n            <div className=\"input_bar input-bar-item width100\">\n                <Form onSubmit={this.handleClick}>\n                    <Form.Group className=\"form-inline\">\n                        <div className=\"keyword_div\"> \n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"keywords_input\"><h5>Type your keywords:</h5></Form.Label>\n                                </div>\n                                <Form.Control className=\"width100 mr-1 input_keywords\" type=\"text\" placeholder=\"Enter keywords\" value={this.state.keywords} onChange={this.handleChange} id=\"keywords_input\" />\n                            </div>\n                        </div>\n                        <div className=\"timeframe_div\">\n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_timeframe_input\"><h5>Select time frame:</h5></Form.Label>\n                                </div>\n                                <Form.Control as=\"select\" onChange={this.selectedTimeFrame}  id=\"select_timeframe_input\" className=\"form-control width100 mr-1 input_timeframe\">\n                                    {time_framesList}\n                                </Form.Control>                                \n                            </div>\n                        </div>\n                        <div className=\"state_select_div\">\n                            <div className=\"input-group\">\n                                <div className=\"input_title\">\n                                    <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_state_input\"><h5>Select state:</h5></Form.Label>\n                                </div>\n                                <Form.Control as=\"select\" onChange={this.selectedState}  id=\"select_state_input\" className=\"form-control width100 mr-1 input_state\">\n                                    {namesList}\n                                </Form.Control>                                \n                                <div className=\"input_button\">\n                                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </Form.Group>\n                </Form>\n            </div>\n\t\t);\n    }\n}\n\nexport default InputComponent\n","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\n\nclass LoginComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChangeLogin = this.handleChangeLogin.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.state = {\n        authenticated: true,\n        username: \"user\",\n        password: \"user\"\n    };\n  }\n\n  handleClick(){\n    if(this.state.username === \"user\" && this.state.password === \"user\"){\n      this.props.callbackFromLogin(this.state);\n    }\n  }\n\n  handleChangeLogin(event) {\n    this.setState({\n        username: event.target.value\n    });\n  }\n\n  handleChangePassword(event) {\n    this.setState({\n        password: event.target.value\n    });\n  }\n\n\n  render() {\n\n    return (\n\t\t<div className=\"loginform\">\n        <h2>Login page</h2>\n        <br/>\n\n        <h5>Username: user</h5>\n        <h5>Password: user</h5>\n        <br/>\n            <Form onSubmit={this.handleClick}>\n              <Form.Group controlId=\"formBasicUsername\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter username\" value={this.state.keywords} onChange={this.handleChangeLogin}/>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.keywords} onChange={this.handleChangePassword}/>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                  Login\n              </Button>\n            </Form>\n\n\t\t</div>\n\t\t);\n\n  }\n\n\n}\n\nexport default LoginComponent","\n\nexport function add(a, b){\n    return a + b;\n}\n\n// get random int\nexport function get_random(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//get random double\nexport function get_random_double(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        let y = get_random(min_y, max_y);\n        result.push([i, y - s_dev, y + s_dev, y])\n    }\n\n    return result;\n}\n\nexport function scale_data(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_area_data(area_data, ranges, width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<area_data.length; i++){\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\n    }\n\n    return result;\n}\n\n\n/////////////\n// MOCKED DATA\n\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=min_x; i<=max_x; i++){\n        result.push([i, get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n\n// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\n\n\nexport function get_random_colors(number) {\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\n\n    return colors.slice(0, number);\n}\n\nexport function get_box_height(number){\n    if (number === 0){\n        return 0;\n    }\n    return 25*(number + 1) + 10;\n}\n\n\n///////////////////////////////\n// MOCKED DATA with DATES\n\n\nexport function get_random_mock_array_dates(dates, min_y, max_y){\n    let result = [];\n\n    for (let i=0; i<dates.length; i++){\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n\n//     return result;\n// }\n\nexport function scale_data_dates(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\n    let result = [];\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/(x_diff - 1);\n    let y_frame = height/y_diff;\n\n    // let x_frame = dimensions.width/(ranges_dates.max_x-1)\n\n    // let x = x_frame * (dimensions.historical_data_length - 1);\n\n    // console.log(\"%%\")\n    // console.log(data)\n    // console.log(x_diff)\n    // console.log(\"width: \" + width)\n    // console.log(\"x_frame: \" + x_frame)\n\n    for (let i=0; i<data.length; i++){\n        // console.log(data[i])\n        // if(i<255){\n        //     result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }else{\n        //     result.push([(data[i][0] + 256) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n\n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        \n    }\n\n    // console.log(result)\n\n    return result;\n}\n\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\n    let result = [];\n    \n\n\n\n    for (let i=0; i<dates.length; i++){\n        let s_d1 = get_random(2,8);\n        let s_d2 = get_random(2,8);\n        let random = get_random(min_y, max_y);\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\n    }\n\n    return result;\n}\n\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\n    let result = []\n\n    for(let i=0;i<number;i++){\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\n    }\n\n    return result\n\n}\n\nexport function scale_data_mocks(data_mocks_area_DATES1, data_mocks_area_DATES2, ranges, width, height, number_of_plots){\n    let scaled_data_mocks_area_DATES = []\n    let scaled_data_mocks_area_future_DATES = []\n\n    for (let i=0; i<number_of_plots; i++){\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data_mocks_area_DATES1[i], ranges, width, height));\n        // scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, 256));\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, data_mocks_area_DATES1[i].length - 1));\n    }\n\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\n}\n\nexport function get_data_map_area_DATES(data_mocks_area_DATES, array_length_dates, number_of_plots){\n\n    let data_map_area_DATES = []\n\n    for(let i = 0; i<array_length_dates; i++) {\n        let y_data_normal = [];\n        let y_data_min = [];\n        let y_data_max = [];\n        let date;\n      \n        date = data_mocks_area_DATES[0][i][1]\n      \n      \n        for(let j=0; j<number_of_plots; j++) {\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\n        }\n      \n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\n    }\n\n    return data_map_area_DATES;\n}\n\nexport function capitalizeString(string) {\n    return titleCase(string);\n}\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);     \n    }\n    return splitStr.join(' '); \n }\n\nexport function get_historical_dates(){\n    let dates = []\n    dates.push(Date.UTC(2010, 0, 18))\n    dates.push(Date.UTC(2010, 1, 18))\n    dates.push( Date.UTC(2010, 2, 18))\n    dates.push(Date.UTC(2010, 3, 18))\n    dates.push( Date.UTC(2010, 4, 18))\n    dates.push( Date.UTC(2010, 5, 18))\n    dates.push( Date.UTC(2010, 6, 18))\n    dates.push( Date.UTC(2010, 7, 18))\n    // dates.push(Date.UTC(2010, 8, 18))\n    // dates.push( Date.UTC(2010, 9, 18))\n    // dates.push( Date.UTC(2010, 10, 18))\n    \n    return dates;\n}\n\nexport function get_forecasted_dates(){\n    let dates = []\n    // dates.push( Date.UTC(2010, 7, 18))\n    dates.push(Date.UTC(2010, 8, 18))\n    dates.push( Date.UTC(2010, 9, 18))\n\n    return dates;\n\n}","import React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport { capitalizeString } from '../utils_dates/functions'\n\nclass TableComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      keywords: []\n\t\t};\n  }\n\n  render() {\n\n    console.log(this.props.tableData)\n\n    var tableHeaders = this.props.tableData.headers.map(( entity, index ) => {\n      return (\n        <th key={index} className=\"align-top\">{entity}</th>\n      );\n    })\n\n    var tableRows = this.props.tableData.data.map(( entity, index ) => {\n      let cells = entity.map((e,i) => {\n\n        if(e !== null){\n          if(i>0){\n            return <td key = {i}>{e.toFixed(2)}</td>\n          }else{\n            return <td key = {i}>{capitalizeString(e)}</td>\n          }\n        }else{\n          if(i>0){\n            return <td key = {i}>{\"null\"}</td>\n          }else{\n            return <td key = {i}>{\"null\"}</td>\n          }\n        }\n      })\n      \n      return (\n        <tr key={index}>\n          <td>{index + 1}</td>\n          {cells}\n        </tr>\n      );\n    })\n\n    return (\n\t\t<div className=\"table_div\">\n      <span className=\"center\"><h3>{this.props.title}</h3></span>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th className=\"align-top\">#</th>\n            <th className=\"align-top\">Keyword</th>\n            {tableHeaders}\n          </tr>\n        </thead>\n        <tbody>\n          {tableRows}\n        </tbody>\n      </Table>\n\t\t</div>\n\t\t);\n  }\n}\n\nexport default TableComponent","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highchartsMap from \"highcharts/modules/map\";\nimport mapDataIE from \"@highcharts/map-collection/countries/us/us-all.geo.json\";\nhighchartsMap(Highcharts); // Initialize the map module\n\n// const data = [\n//     ['us-ma', 0],\n//     ['us-wa', 1],\n//     ['us-ca', 2],\n//     ['us-or', 3],\n//     ['us-wi', 4],\n//     ['us-me', 5],\n//     ['us-mi', 6],\n//     ['us-nv', 7],\n//     ['us-nm', 8],\n//     ['us-co', 9],\n//     ['us-wy', 10],\n//     ['us-ks', 11],\n//     ['us-ne', 12],\n//     ['us-ok', 13],\n//     ['us-mo', 14],\n//     ['us-il', 15],\n//     ['us-in', 16],\n//     ['us-vt', 17],\n//     ['us-ar', 18],\n//     ['us-tx', 19],\n//     ['us-ri', 20],\n//     ['us-al', 21],\n//     ['us-ms', 22],\n//     ['us-nc', 23],\n//     ['us-va', 24],\n//     ['us-ia', 25],\n//     ['us-md', 26],\n//     ['us-de', 27],\n//     ['us-pa', 28],\n//     ['us-nj', 29],\n//     ['us-ny', 30],\n//     ['us-id', 31],\n//     ['us-sd', 32],\n//     ['us-ct', 33],\n//     ['us-nh', 34],\n//     ['us-ky', 35],\n//     ['us-oh', 36],\n//     ['us-tn', 37],\n//     ['us-wv', 38],\n//     ['us-dc', 39],\n//     ['us-la', 40],\n//     ['us-fl', 41],\n//     ['us-ga', 42],\n//     ['us-sc', 43],\n//     ['us-mn', 44],\n//     ['us-mt', 45],\n//     ['us-nd', 46],\n//     ['us-az', 47],\n//     ['us-ut', 48],\n//     ['us-hi', 49],\n//     ['us-ak', 50],\n//     ['undefined', 51]\n// ];\n\nconst western_states = [\n  ['us-ca', \"#20e012\"],\n  ['us-or', \"#20e012\"],\n  ['us-id', \"#20e012\"],\n  ['us-mt', \"#20e012\"],\n  ['us-az', \"#20e012\"],\n  ['us-nv', \"#20e012\"],\n  ['us-wa', \"#20e012\"],\n  ['us-ut', \"#20e012\"]\n];\n\nconst central_states = [\n  ['us-wy', \"#BADA55\"],\n  ['us-nd', \"#BADA55\"],\n  ['us-sd', \"#BADA55\"],\n  ['us-co', \"#BADA55\"],\n  ['us-ks', \"#BADA55\"],\n  ['us-ky', \"#BADA55\"],\n  ['us-in', \"#BADA55\"],\n  ['us-wi', \"#BADA55\"],\n  ['us-ne', \"#BADA55\"],\n  ['us-ia', \"#BADA55\"],\n  ['us-mi', \"#BADA55\"],\n  ['us-mo', \"#BADA55\"],\n  ['us-il', \"#BADA55\"],\n  ['us-mn', \"#BADA55\"],\n  ['undefined', \"#BADA55\"]\n];\n\nconst eastern_states = [\n  ['us-oh', \"#003fed\"],\n  ['us-ny', \"#003fed\"],\n  ['us-nc', \"#003fed\"],\n  ['us-vt', \"#003fed\"],\n  ['us-wv', \"#003fed\"],\n  ['us-md', \"#003fed\"],\n  ['us-de', \"#003fed\"],\n  ['us-ri', \"#003fed\"],\n  ['us-ma', \"#003fed\"],\n  ['us-me', \"#003fed\"],\n  ['us-nh', \"#003fed\"],\n  ['us-sc', \"#003fed\"],\n  ['us-va', \"#003fed\"],\n  ['us-nj', \"#003fed\"],\n  ['us-dc', \"#003fed\"],\n  ['us-ct', \"#003fed\"],\n  ['us-pa', \"#003fed\"]\n];\n\nconst southern_states = [\n  ['us-tx', \"#e08a12\"],\n  ['us-nm', \"#e08a12\"],\n  ['us-tn', \"#e08a12\"],\n  ['us-ga', \"#e08a12\"],\n  ['us-fl', \"#e08a12\"],\n  ['us-ar', \"#e08a12\"],\n  ['us-ok', \"#e08a12\"],\n  ['us-la', \"#e08a12\"],\n  ['us-al', \"#e08a12\"],\n  ['us-hi', \"#e08a12\"],\n  ['us-ak', \"#e08a12\"],\n  ['us-ms', \"#e08a12\"]\n];\n\nclass Chart extends React.PureComponent {\n\n  constructor(props) {\n      super(props);\n\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  \n      this.state = {\n          mapOptions:  {\n              chart: {\n                height: this.props.height,\n\n                map: \"countries/ie/ie-all\",\n                events: {\n                    drilldown: function(e) {\n                      console.log('from drillDown');\n                    },\n                    drillup: function() {\n                      console.log('from drillUp');\n                    }\n                  },\n                panning: true,\n                panKey: 'shift'\n              },\n              tooltip: { \n                enabled: true,\n                formatter: function () {\n                  return '<b>' + this.point.name + '</b>';\n                },\n              },\n              legend: {\n                layout: \"vertical\",\n                align: \"right\",\n                verticalAlign: \"middle\",\n                enabled: false\n              },\n            \n              title: {\n                text: null\n              },\n            \n              mapNavigation: {\n                enabled: false,\n                buttonOptions: {\n                  verticalAlign: \"bottom\"\n                }\n              },\n            \n              plotOptions: {\n                map: {\n                  states: {\n\n                    color: \"#126c31\",\n\n                    hover: {\n                      color: \"#000000\",\n                      enabled: true,\n                      brightness: 0.5\n                    },\n                    \n                  }\n                },\n                series:{\n                    point:{\n                        events:{\n                            click: this.setHoverData.bind(this)\n                        }\n                    }\n                }\n              },\n            \n              series: [\n                // {\n                //   data: data,\n                //   mapData: mapDataIE,\n                //   name: \"USA\",\n                //   dataLabels: {\n                //       enabled: true,\n                //       format: \"{point.properties.postal-code}\"\n                //   }\n                // },\n\n                {\n                  data: western_states.concat(central_states).concat(eastern_states).concat(southern_states),\n                  keys: ['hc-key', 'color'],\n                  mapData: mapDataIE,\n                  name: \" \",\n                  dataLabels: {\n                      enabled: true,\n                      color: '#FFFFFF',\n                      format: \"{point.properties.postal-code}\"\n                  },\n                  showInLegend: false\n                },\n\n              ],\n\n              legend: {\n                enabled: true\n              },\n            \n              drilldown: {\n                activeDataLabelStyle: {\n                  color: \"#FFFFFF\",\n                  textDecoration: \"none\",\n                  textOutline: \"1px #000000\"\n                },\n                drillUpButton: {\n                  relativeTo: \"spacingBox\",\n                  position: {\n                    x: 0,\n                    y: 60\n                  }\n                }\n              }\n            }\n      };\n    }\n\n    setHoverData = (e) => {\n      this.props.callbackFromApp(e.point[\"hc-key\"])\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  \n    \n    updateWindowDimensions() {\n      \n      // let div_width2 = this.divRef.current.clientWidth;\n      // let div_width = div_width2 - 2*85;\n      // let height = this.props.height - 2*85;\n  \n      this.setState({\n        mapOptions:  {\n          chart: {\n            height: this.props.height,\n\n            map: \"countries/ie/ie-all\",\n            events: {\n                drilldown: function(e) {\n                  console.log('from drillDown');\n                },\n                drillup: function() {\n                  console.log('from drillUp');\n                }\n              },\n            panning: true,\n            panKey: 'shift'\n          },\n          tooltip: { \n            enabled: true,\n            formatter: function () {\n              return '<b>' + this.point.name + '</b>';\n            },\n          },\n          legend: {\n            layout: \"vertical\",\n            align: \"right\",\n            verticalAlign: \"middle\",\n            enabled: false\n          },\n        \n          title: {\n            text: null\n          },\n        \n          mapNavigation: {\n            enabled: false,\n            buttonOptions: {\n              verticalAlign: \"bottom\"\n            }\n          },\n        \n          plotOptions: {\n            map: {\n              states: {\n\n                color: \"#126c31\",\n\n                hover: {\n                  color: \"#000000\",\n                  enabled: true,\n                  brightness: 0.5\n                },\n                \n              }\n            },\n            series:{\n                point:{\n                    events:{\n                        click: this.setHoverData.bind(this)\n                    }\n                }\n            }\n          },\n        \n          series: [\n            {\n              data: western_states.concat(central_states).concat(eastern_states).concat(southern_states),\n              keys: ['hc-key', 'color'],\n              mapData: mapDataIE,\n              name: \" \",\n              dataLabels: {\n                  enabled: true,\n                  color: '#FFFFFF',\n                  format: \"{point.properties.postal-code}\"\n              },\n              showInLegend: false\n            },\n          ],\n\n          legend: {\n            enabled: false\n          },\n        \n          drilldown: {\n            activeDataLabelStyle: {\n              color: \"#FFFFFF\",\n              textDecoration: \"none\",\n              textOutline: \"1px #000000\"\n            },\n            drillUpButton: {\n              relativeTo: \"spacingBox\",\n              position: {\n                x: 0,\n                y: 60\n              }\n            }\n          }\n        }         \n      });\n    }\n  \n    render() {\n        return (\n            <div className=\"map_content\">\n                <HighchartsReact\n                    constructorType={\"mapChart\"}\n                    highcharts={Highcharts}\n                    options={this.state.mapOptions} \n                />\n            </div>\n        );\n      }\n  }\n\n  export default Chart\n\n","\nlet w = 1100;\nlet h = 400;\n\nexport const appConfig = {\n\n\n  dimensions: {\n    box_width: 400,\n    box_height: 120\n  },\n\n  number_of_plots: 5,\n\n  ranges_dates: {\n    max_x: (255 + 48 + 0),\n    // max_x: (8 + 2 + 0),\n    min_x: 0,\n    max_y: 100,\n    min_y: 0,\n    // max_x_forecast: 53\n  },\n\n  array_length_dates: 256,\n  array_length_dates_forecast: 48,\n\n  // array_length_dates: 8,\n  // array_length_dates_forecast: 2,\n\n  KEYWORDS_URL: \"http://0.0.0.0:5000\",\n\n\n};\n//53","import { capitalizeString } from \"./functions\";\n\n\nfunction make_line (point, width) {\n\n    let line = `M 0 ${point} H ${width}`;\n    return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n}\n\nfunction make_yy_tick(x, y) {\n\n    let line = `M ${x-10} ${y} L ${x} ${y}`;\n    // return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\n    return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n}\n\nexport function get_lines (width, height, lines_number) {\n\n    let frame = height / lines_number;\n\n    let result = [];\n\n    for (let i=lines_number; i<=lines_number; i++){\n        let point = frame * i;\n        result.push(make_line(point,width))\n    }\n\n    return result;\n}\n\nexport function get_y_ticks (height, lines_number) {\n    let result = []\n\n    let frame = height / lines_number;\n\n    for (let i=0; i<=lines_number; i++){\n        let point = frame * i;\n        result.push(make_yy_tick(0,point))\n    }\n\n    return result\n}\n\n\nfunction make_x_tick(x, y) {\n\n    let line = `M ${x} ${y} L ${x} ${y + 10}`;\n    return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\n}\n\nexport function get_ticks(width, height, ticks_number){\n    let result = [];\n\n    let frame = width / (ticks_number - 1);\n\n    for (let i=0; i<ticks_number; i++){\n        let point = frame * i;\n        result.push(make_x_tick(point, height))\n    }\n\n    // let frame = width / (length - 1)\n    // for(let i=0; i<ticks_number; i++){\n    //     // result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n    //     result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[i][1])}</text>`)\n    // }\n\n    return result;\n}\n\nfunction make_y_tick(x, y, value) {\n    return `<text x=\"${x}\" textAnchor=\"end\" class=\"plot_ytick\" y=\"${y}\">${value}</text>`\n}\n\nexport function get_y_axis(x, y, height, lines_number) {\n    let result = [];\n\n    let frame = height / lines_number;\n\n    for(let i=0; i<=lines_number; i++){\n        result.push(make_y_tick(-40, height - frame*(i),i * lines_number));\n    }\n\n    let line = `M ${x} ${y} L ${x} ${y + height}`;\n    result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n\n    return result;\n}\n\nexport function prepare_title(title, width, height, x_trans, y_trans){\n    return `<text x=\"${width/2}\" class=\"plot_title\" text-anchor=\"middle\" y=\"${-y_trans/3}\">${title}</text>`\n}\n\n\n\nexport function prepare_x_axis(width, height, ticks_number, data_mock){\n    let result = []\n\n    let length = Object.keys(data_mock).length;\n    let data_frame = Math.floor(length/(ticks_number-1));\n\n    let frame = width / (ticks_number - 1)\n    for(let i=0; i<ticks_number; i++){\n        // result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n        result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n    }\n\n    return result \n\n}\n\nexport function get_x_axis(title, width, height, x_trans, y_trans){\n    let result = []\n    let line = `M 0 ${height} H ${width}`;\n\n    result.push(`<text x=\"${width/2}\" text-anchor=\"middle\" class=\"plot_xaxis_title\" y=\"${height + y_trans/2}\"><tspan>${title}</tspan></text>`)\n    result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n    return result\n}\n\nexport function get_y_axis_label(title, height, x_trans){\n    return `<text x=\"${x_trans}\" text-anchor=\"middle\" transform=\"translate(0,0) rotate(270 25.140625 309.5)\" class=\"plot_yaxis_title\" y=\"${(height + x_trans)/2 - 0.1*x_trans}\"><tspan>${title}</tspan></text>`\n}\n\nexport function get_red_line(dimensions, ranges_dates){\n\n    let x_frame = dimensions.width/(ranges_dates.max_x-1)\n\n    // console.log(\"%%%%\")\n    // console.log(dimensions)\n    // console.log(ranges_dates)\n\n    // let x = x_frame * 256;\n    let x = x_frame * (dimensions.historical_data_length - 1);\n\n\n    return `<g>\n        <path fill=\"none\" class=\"plot_pointer_line\" d=\"M ${x} 0 L ${x} ${dimensions.height}\" stroke-dasharray=\"6\" data-z-index=\"0\"></path>\n    </g>`\n}\n\nexport function get_mark_line(mark_line, height){\n    return `<g transform=\"translate(${mark_line.pos}, 0)\">\n        <path fill=\"none\" data-z-index=\"0\" class=\"plot_mark_line\" d=\"M 0 0 L 0 ${height}\" visibility=\"${mark_line.visibility}\" />         \n    </g>`\n}\n\n// export function get_info_box2(info_box, box_width, box_height){ \n\n//     let y_data = [];\n//     // console.log(info_box.value_y)\n    \n//     if(info_box !== undefined && info_box.value_y !== undefined) {\n//         for(let i=0; i<info_box.colors.length; i++){\n//             y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n//             <text stroke=\"#343640\" opacity=\"1\" x=25 y=${(i + 1)*25 + 25}>Series ${i + 1} value y: ${info_box.value_y[2][i]}</text>`)\n//         }\n//     }\n\n//     let date = formatDate(info_box.value_x)\n    \n//     return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n//         <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n//         <text x=5 y=\"25\" class=\"plot_info_box_header\">Date: ${date}</text>\n//         ${y_data}\n//     </g>`\n// }\n\n// export function get_y_axis(x, y, height){\n//     let line = `M ${x} ${y} L ${x} ${y + height}`;\n//     return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n// }\n\nexport function get_info_box(info_box, box_width, box_height, keywords){ \n\n    let y_data = [];\n    \n    if(info_box !== undefined && info_box.value_y !== undefined) {\n        for(let i=0; i<info_box.colors.length; i++){\n            y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n             <text x=25 y=${(i + 1)*25 + 25}>${capitalizeString(keywords[i])} ${info_box.value_y[2][i].toFixed(1)} (min: ${info_box.value_y[3][i].toFixed(1)} | max: ${info_box.value_y[2][i].toFixed(1)})</text>`)\n        }\n    }\n\n    let date = formatDate(info_box.value_x)\n    \n    return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n        <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n        <g class=\"plot_info_box_header\">\n        <text x=5 y=\"25\">Date: ${date}</text>\n        </g>\n        ${y_data}\n    </g>`\n}\n\nexport function prepare_legend(dimensions, colors, keywords){\n\n    // this.props.dimensions.width)/2 - this.props.dimensions.x_trans, this.props.dimensions.height + this.props.dimensions.y_trans/2\n\n    let legend = [];\n    let keyword_sizes = []\n\n    // console.log(dimensions)\n    \n    // for(let i=0; i<colors.length; i++){\n    //     let l = calculate_translate_for_legend(keywords[i].length);\n        \n\n    //     let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n\n    //     legend.push(`\n    //         <g data-z-index=\"1\" transform=\"translate(${translation},3)\">\n    //             <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n    //             <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"1.1em\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n    //         </g>\n    //     `);\n    //     keyword_sizes.push(l);\n    // }\n\n    if (dimensions.width>600){\n        for(let i=0; i<colors.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            \n    \n            let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n    \n            legend.push(`\n                <g data-z-index=\"1\" transform=\"translate(${translation},3)\">\n                    <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n                    <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"1.1em\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n                </g>\n            `);\n            keyword_sizes.push(l);\n        }\n\n        let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n        let width_trans = (dimensions.width2)/2 - translation/2 - dimensions.x_trans;\n        let height_trans = dimensions.height + dimensions.y_trans/2;\n    \n        return `\n            <g transform=\"translate(${width_trans}, ${height_trans})\" class=\"plot_legend\" >\n                ${legend}\n            </g>`\n        \n    } else {\n        for(let i=0; i<colors.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            console.log(\"len: \" + l)\n            \n    \n            // let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n    \n            legend.push(`\n                <g data-z-index=\"1\" transform=\"translate(${(dimensions.width)/2 - l/2}, ${i*18+3})\">\n                    <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n                    <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"1.1em\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n                </g>\n            `);\n            // keyword_sizes.push(l);\n        }\n\n        // let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n        // let width_trans = (dimensions.width2)/2 - translation/2 - dimensions.x_trans;\n        let height_trans = dimensions.height + dimensions.y_trans/2;\n    \n        return `\n            <g transform=\"translate(${0}, ${height_trans})\" class=\"plot_legend\" >\n                ${legend}\n            </g>`\n    }\n}\n\nfunction calculate_translate_for_legend(keyword_length){\n    return (6,5)*keyword_length + 55;\n}\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}\n\nfunction formatDate_monthly(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = mm+'-'+yyyy\n}\n\n// function capitalizeString(string) {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n// }\n","import React from 'react';\nimport { get_ticks, get_x_axis, prepare_x_axis } from \"../utils_dates/graphics\"\n\nclass AxisX extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_x_axis(this.props.x_label, this.props.dimensions.width, this.props.dimensions.height, this.props.dimensions.x_trans, this.props.dimensions.y_trans) }} /> \n            <g dangerouslySetInnerHTML={{ __html: get_ticks(this.props.dimensions.width, this.props.dimensions.height, this.props.ticks) }} />\n            <g dangerouslySetInnerHTML={{ __html: prepare_x_axis(this.props.dimensions.width, this.props.dimensions.height, this.props.ticks, this.props.dates) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default AxisX;","import React from 'react';\nimport { prepare_legend } from \"../utils_dates/graphics\"\n\nclass Legend extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: prepare_legend(this.props.dimensions, this.props.colors, this.props.keywords) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Legend ;","import React from 'react';\nimport { get_y_axis, get_y_axis_label } from \"../utils_dates/graphics\"\n\nclass AxisY extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_y_axis(0, 0, this.props.dimensions.height, this.props.y_number) }} />\n            <g dangerouslySetInnerHTML={{ __html: get_y_axis_label(this.props.y_label, this.props.dimensions.height, this.props.dimensions.x_trans) }} />\n        </g>\n      );\n    }\n  }\n\n  export default AxisY;","import React from 'react';\nimport { get_red_line } from \"../utils_dates/graphics\"\n\nclass Static_Line extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_red_line(this.props.dimensions, this.props.ranges) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Static_Line ;","import React from 'react';\nimport { get_mark_line } from \"../utils_dates/graphics\"\n\nclass Pointer_Line extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_mark_line(this.props.mark_line, this.props.height) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Pointer_Line;","import React from 'react';\nimport { get_info_box } from \"../utils_dates/graphics\"\n\nclass Info_Box extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_info_box(this.props.info_box, this.props.width, this.props.height, this.props.keywords ) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Info_Box ;","      \nconst lineBottomCommand = point => `L ${point[0]} ${point[3]}`\n\nconst lineUpperCommand = point => `L ${point[0]} ${point[4]}`\n\n// const svgCommand = point => `L ${point[0]} ${point[2]}`\n\n\nconst svgPath = (points, command, color, dash) => {\n\n  const d = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[2]}`\n  : `${acc} ${bezierCommand(point, i, a)}`\n  , '')\n\n  return `<path d=\"${d}\" fill=\"none\" stroke=${color} stroke-width=2  data-z-index=\"0\" stroke-dasharray=${dash} pointer-events=\"none\" />`\n}\n// stroke-dasharray=\"4\"\n\nconst areaPath = (points, command, color) => {\n\n  let d1 = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[4]}`\n  : `${acc} ${bezierCommand_upper(point, i, a)}`\n  , '');\n\n\n\n  d1 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][3]}  `;\n\n  let d3 = points.reverse().reduce((acc, point, i, a) => i === 0\n  ? `L ${point[0]},${point[3]}`\n  : `${acc} ${bezierCommand_lower(point, i, a)}`\n  , '');\n\n\n  d3 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][4]}  `;\n\n  let d = d1 + d3;\n//////////////////////////////////////////\n\n  return `<path d=\"${d}\" fill=${color} stroke=${color} stroke-width=2 data-z-index=\"0\" pointer-events=\"none\" opacity=\"0.35\" />`\n}\n\n\n\nconst lineCommand = point => `L ${point[0]} ${point[2]}`\nconsole.log(\"data\")\n\n\n    \nexport function area_path(data, color, dash=0){\n\n    let result = [];\n    result.push(svgPath(data, lineCommand, color, dash));\n    result.push(areaPath(data, bezierCommand, color));\n\n    return result;\n}\n\n// export function area_path_future(data, color, dash=0){\n\n//   let result = [];\n\n//   // console.log(data)\n//   result.push(svgPath(data, lineCommand, color, 4 ));\n//   result.push(areaPath(data, bezierCommand, color));\n\n//   return result;\n// }\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// The smoothing ratio\nconst smoothing = 0.2\n\n\n// Properties of a line \n// I:  - pointA (array) [x,y]: coordinates\n//     - pointB (array) [x,y]: coordinates\n// O:  - (object) { length: l, angle: a }: properties of the line\nconst line = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[2] - pointA[2]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n// Position of a control point \n// I:  - current (array) [x, y]: current point coordinates\n//     - previous (array) [x, y]: previous point coordinates\n//     - next (array) [x, y]: next point coordinates\n//     - reverse (boolean, optional): sets the direction\n// O:  - (array) [x,y]: a tuple of coordinates\nconst controlPoint = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[2] + Math.sin(angle) * length\n  return [x, y]\n}\n\n// Create the bezier curve command \n// I:  - point (array) [x,y]: current point coordinates\n//     - i (integer): index of 'point' in the array 'a'\n//     - a (array): complete array of points coordinates\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\nconst bezierCommand = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[2]}`\n}\n\n\nconst bezierCommand_upper = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_upper(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint_upper(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[4]}`\n}\n\nconst bezierCommand_lower = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_lower(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint_lower(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[3]}`\n}\n\n\nconst line_lower = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[3] - pointA[3]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nconst line_upper = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[4] - pointA[4]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst controlPoint_lower = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_lower(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[3] + Math.sin(angle) * length\n  return [x, y]\n}\n\nconst controlPoint_upper = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_upper(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[4] + Math.sin(angle) * length\n  return [x, y]\n}","import React from 'react';\nimport './App.css';\nimport { get_random_colors, get_box_height, get_data_mocks_area_DATES, scale_data_mocks, get_data_map_area_DATES, get_historical_dates, get_forecasted_dates, get_random_mock_area_array_dates} from './utils_dates/functions'\nimport { appConfig } from './utils_dates/config.js';\n\nimport AxisX from './components/AxisX';\nimport AxisY from './components/AxisY';\nimport Legend from './components/Legend';\nimport Static_Line from './components/Static_Line';\nimport Pointer_Line from './components/Pointer_Line';\nimport Info_Box from './components/Info_Box';\nimport Area_Path from './components/Area_Path';\nimport Plot from './components/Plot';\n\n\nlet dimensions = appConfig.dimensions;\nlet ranges = appConfig.ranges_dates;\nlet number_of_plots = appConfig.number_of_plots;\nlet array_length_dates = appConfig.array_length_dates + appConfig.array_length_dates_forecast;\n\n// dimensions.box_height = get_box_height(number_of_plots);\n\nlet historical_mock1 = get_random_mock_area_array_dates(get_historical_dates(),10,30)\nlet historical_mock2 = get_random_mock_area_array_dates(get_historical_dates(),40,80)\n\nlet forecasted_mock1 = get_random_mock_area_array_dates(get_forecasted_dates(),10,30)\nlet forecasted_mock2 = get_random_mock_area_array_dates(get_forecasted_dates(),40,80)\n\nlet historical_data_mock = [historical_mock1, historical_mock2]\nlet forecasted_data_mock = [forecasted_mock1, forecasted_mock2]\n\nfor(let i=0;i<historical_data_mock.length; i++){\n  forecasted_data_mock[i].unshift(historical_data_mock[i][historical_data_mock[i].length - 1])\n}\n\nclass Test_Plot_Dates extends React.Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleHoverOff = this.handleHoverOff.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    let x_trans = 85;\n    let y_trans = 85;\n    let width = window.innerWidth*(0.6) - 2*x_trans;\n    let height = this.props.height - 2*y_trans;\n\n    this.divRef = React.createRef();\n\n    this.state = {\n        title: this.props.options.title,\n        y_number: 10,\n        ticks_number: array_length_dates,\n        x_label: this.props.options.x_label,\n        y_label: this.props.options.y_label,\n        mark_line: {\n          pos: 0,\n          visibility: \"hidden\"\n        },\n        info_box: {\n          pos_x: 0,\n          pos_y: 0,\n          visibility: \"hidden\",\n          colors: get_random_colors(this.props.number_of_series),\n        },\n       scaled_historical_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, ranges, width, height, this.props.number_of_series)[0],\n       scaled_forecasted_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, ranges, width, height, this.props.number_of_series)[1],\n\n      //  scaled_historical_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, width, height, 2)[0],\n      //  scaled_forecasted_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, width, height, 2)[1],\n\n       data_map_area_DATES: this.get_data_map_area_DATES(this.props.historical_data, this.props.forecasted_data, array_length_dates, this.props.number_of_series),\n      //  data_map_area_DATES: this.get_data_map_area_DATES(historical_data_mock, forecasted_data_mock, array_length_dates, 2),\n\n       colors: this.get_random_colors(this.props.number_of_series),\n       info_box_height: this.get_box_height(this.props.number_of_series),\n       number: this.props.number_of_series,\n       dimensions: {\n        width2: width,\n        width: width/1.1,\n        height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       }\n    };\n  }\n\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.divRef.current.focus();\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  scaling(){\n\n  }\n  \n  updateWindowDimensions() {\n    \n    let div_width2 = this.divRef.current.clientWidth;\n\n    let x_trans = this.props.x_trans;\n    let y_trans = this.props.y_trans;\n\n    let div_width = div_width2 - 2*x_trans;\n    let height = this.props.height - 2*y_trans;\n\n    this.setState({\n      dimensions: {\n        width2: div_width2,\n        width: div_width,\n        height: this.props.height - 2*y_trans,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       },\n       scaled_historical_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, ranges, div_width, height, this.props.number_of_series)[0],\n       scaled_forecasted_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, ranges, div_width, height, this.props.number_of_series)[1],\n\n      //  scaled_historical_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, div_width, height, 2)[0],\n      //  scaled_forecasted_data: this.scale_data_mocks(historical_data_mock, forecasted_data_mock, ranges, div_width, height, 2)[1],\n       \n    });\n  }\n\n  scale_data_mocks(data, forecasted_data, ranges, width, height , number_of_series){\n    return scale_data_mocks(data, forecasted_data, ranges, width, height , number_of_series)\n  }\n\n  get_data_map_area_DATES(data, forecasted_data, array_length_dates, number_of_series){\n    return get_data_map_area_DATES(get_data_mocks_area_DATES(data, forecasted_data, number_of_series), array_length_dates, number_of_series)\n  }\n\n  get_random_colors(number_of_series){\n    return get_random_colors(number_of_series)\n  }\n\n  get_box_height(number_of_series){\n    return get_box_height(number_of_series)\n  }\n\n\n  handleMouseMove(event) {\n    var e = event.target;\n    var dim = e.getBoundingClientRect();\n    var x = event.clientX - dim.left - this.state.dimensions.x_trans;\n    var y = event.clientY - dim.top - this.state.dimensions.y_trans;\n\n    // console.log(x)\n    // console.log(this.state.dimensions)\n\n\n    if(x >= 0 && y >= 0 && x <= this.state.dimensions.width && y <= this.state.dimensions.height){\n\n      let x_diff = ranges.max_x - ranges.min_x;  \n      let x_frame = this.state.dimensions.width/x_diff;\n      let key = Math.round((x)/x_frame);\n\n      if (this.state.data_map_area_DATES[key] !== undefined){\n\n        let left_index = Math.round((ranges.max_x - ranges.min_x)/2) - 1;\n        let right_index = Math.round((ranges.max_x - ranges.min_x)/2) + 1;\n\n        //keys left\n        for(let i=ranges.min_x; i<=key; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i\n          }\n        }\n\n        //keys right\n        for(let i=key; i<=ranges.max_x; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            right_index = i\n          }\n        }\n    \n        //index difference\n        this.setState({\n          mark_line: {\n            pos: x,  \n          },\n          info_box: {\n            pos_x: x,\n            pos_y: y,\n            value_x: this.state.data_map_area_DATES[key][1],\n            value_y: this.state.data_map_area_DATES[key],\n            colors: get_random_colors(this.props.number_of_series)\n          }\n        })\n        if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n          this.setState({\n            mark_line: {\n              pos: x\n            }\n          })\n        }\n      } else if (key !== undefined){\n////////////////////////////\n\n        let left_index = key - 1;\n        let right_index = key + 1;\n        \n        //keys left\n        for (let i=key; i>=0; i--) {\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i;\n            break;\n          }\n        }\n\n        //keys right\n        for (let i=key; i<=ranges.max_x; i++) {\n          if(this.state.data_map_area_DATES[i] !== undefined) {\n            right_index = i;\n            break;\n          }\n        }\n\n        //index difference\n        let left_diff = key - left_index;\n        let right_diff = right_index - key;\n\n\n        if((this.state.data_map_area_DATES[left_index] !== undefined) && (this.state.data_map_area_DATES[right_index] !== undefined)){\n          if (left_diff<=right_diff ) {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          } else {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          }\n\n        }\n/////////////////\n\n      }\n    } else if (x > this.state.dimensions.width || y > this.state.dimensions.height || x < this.state.dimensions.x_trans || y < this.state.dimensions.y_trans){\n      this.setState({\n        mark_line: {\n          visibility: \"hidden\",\n          pos: 9999\n        },\n        info_box: {\n          visibility: \"hidden\",\n          pos_x: 9999,\n          pos_y: 9999,\n          colors: get_random_colors(this.props.number_of_series)\n        }\n      })\n    }\n  }\n  \n\n  handleHoverOff(event) {\n    this.setState({\n      mark_line:{\n          pos: 0,\n          visibility: \"hidden\"\n      },\n      info_box: {\n        pos_x: 0,\n        pos_y: 0,\n        visibility: \"hidden\",\n        colors: get_random_colors(this.props.number_of_series)\n      }\n    })\n  }\n\n  render() {\n\n    // console.log(this.props.keywords)\n    // console.log(\"$$$$$\")\n    // console.log(this.state.dimensions)\n    // console.log(this.state.scaled_forecasted_data)\n\n    let area_paths = this.state.scaled_historical_data.map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"none\"} />\n      );\n    });\n\n    let area_paths_future = this.state.scaled_forecasted_data.map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"dash\"} />\n      );\n    });\n\n    let v_b = \"0 0 \" + this.state.dimensions.width2 + \" \" + this.props.height;\n    let v_trans = \"translate(\" + this.state.dimensions.x_trans + \",\" + this.state.dimensions.y_trans + \")\";\n\n    return (\n      <div ref={this.divRef}>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" onMouseMove={this.handleMouseMove} onMouseLeave={this.handleHoverOff} className=\"test_plot\" width={this.state.dimensions.width2} height={this.props.height} viewBox={v_b}>\n          {/* <rect fill=\"#ffffff\" className=\"\" x=\"0\" y=\"0\" width={dimensions.width} height={dimensions.height} rx=\"0\" ry=\"0\"></rect>  */}\n            <g>\n              <g transform={v_trans}>\n\n                { area_paths }\n\n                { area_paths_future }\n                \n                <Plot dimensions={this.state.dimensions} y_number={this.state.y_number} title={this.state.title} />\n\n                {/* <AxisY dimensions={this.state.dimensions} y_number={this.state.y_number} y_label={this.state.y_label} /> */}\n\n                <AxisX dimensions={this.state.dimensions} x_label={this.state.x_label} ticks={10} dates={this.state.data_map_area_DATES} />\n                \n                <Legend dimensions={this.state.dimensions} colors={this.state.colors} keywords={this.props.keywords} />\n\n                <Static_Line dimensions={this.state.dimensions} ranges={ranges} />\n\n                <Pointer_Line mark_line={this.state.mark_line} height={this.state.dimensions.height} />\n\n                <Info_Box info_box={this.state.info_box} width={dimensions.box_width} height={this.state.info_box_height} keywords={this.props.keywords}  />\n                \n              </g>\n            </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Test_Plot_Dates;\n","import React from 'react';\nimport { area_path } from \"../utils_dates/area_path\";\n\nclass Area_Path extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      if(this.props.style === \"dash\"){\n        return (\n          <g dangerouslySetInnerHTML={{ __html: area_path(this.props.data, this.props.color, 4) }} />\n        );\n      } else {\n        return (\n          <g dangerouslySetInnerHTML={{ __html: area_path(this.props.data, this.props.color) }} />\n        );\n      }\n\n    }\n  }\n\n  export default Area_Path;","import React from 'react';\nimport { get_lines, prepare_title, get_y_ticks, get_y_axis } from \"../utils_dates/graphics\";\n\nclass Plot extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <g>\n                {/* <g dangerouslySetInnerHTML={{ __html: get_y_axis(0,0, this.props.dimensions.height) }} /> */}\n                {/* <g dangerouslySetInnerHTML={{ __html: get_lines(this.props.dimensions.width, this.props.dimensions.height, this.props.y_number) }} /> */}\n                <g dangerouslySetInnerHTML={{ __html: get_y_ticks(this.props.dimensions.height, this.props.y_number) }} />\n                <g dangerouslySetInnerHTML={{ __html: prepare_title(this.props.title, this.props.dimensions.width, this.props.dimensions.height, this.props.dimensions.x_trans, this.props.dimensions.y_trans) }} />\n            </g>\n        );\n    }\n  }\n\n  export default Plot;","import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css'\n\nimport { appConfig } from './config.js';\n\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\nconst ratio = 4.5;\n\n\n\nclass App extends React.PureComponent {\n  \n    constructor(props){\n      super(props);\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n      this.state = {\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        selected_time_frame: \"today 5-y\",\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n        historical_data: [],\n        forecasted_data: [],\n        rate_table_data: [],\n        growth_table_data: [],\n        x_trans: 85,\n        y_trans: 85\n      };\n\n      this.myRef = React.createRef();\n\n    }\n\n    fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(keywords, selected_state_name, selected_time_frame)\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n        // let url = appConfig.KEYWORDS_NEW;\n        let url = \"/new\"\n        \n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: keywords, region_state: state, time_frame: selected_time_frame\n          }),\n        }).then(res => res.json())\n            .then(\n            (result) => {\n\n              let width = this.myRef.current.offsetWidth;\n              let height = width/(ratio);\n              let x_trans = this.state.x_trans;\n              let y_trans = this.state.y_trans;\n              let y_trans2 = this.state.y_trans;\n\n              if(width<=1800){\n                height = (1.2)*width/(ratio);\n                x_trans = 80;\n                y_trans = 80;\n                y_trans2 = 80;\n              }\n        \n              if(width<=1600){\n                height = (1.4)*width/(ratio);\n                x_trans = 80;\n                y_trans = 80;\n                y_trans2 = 80;\n              }\n              \n              if(width<=1400){\n                height = (1.6)*width/(ratio);\n                x_trans = 70;\n                y_trans = 70;\n                y_trans2 = 70;\n              }\n        \n              if(width<=1200){\n                height = (1.8)*width/(ratio);\n                x_trans = 60;\n                y_trans = 60;\n                y_trans2 = 60;\n              }\n        \n              if(width<=800){\n                height = (2.8)*width/(ratio);\n                x_trans = 40;\n                y_trans = 40;\n                y_trans2 = 40;\n              }\n        \n              if(width<=500){\n                height = (3.2)*width/(ratio);\n                x_trans = 20;\n                y_trans = 40;\n                y_trans2 = 40;\n              }\n\n              this.setState({\n                  keywords: keywords,\n                  displayResults: true,\n                  region_state: state,\n                  selected_time_frame: selected_time_frame,\n                  displayResults: true,\n                  historical_data: this.get_historical_data(keywords, result),\n                  forecasted_data: this.get_forecasted_data(keywords, result),\n                  rate_table_data: this.getRateTableData(result.growth_rate_result),\n                  growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n                  div_height: height,\n                  x_trans: x_trans,\n                  y_trans: y_trans,\n                  y_trans2: y_trans2,\n              });\n            })\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n      this.myRef.current.focus();\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n      let width = this.myRef.current.offsetWidth;\n      let height = width/(ratio);\n      let x_trans = this.state.x_trans;\n      let y_trans = this.state.y_trans;\n      let y_trans2 = this.state.y_trans;\n\n      if(width<=1800){\n        height = (1.2)*width/(ratio);\n        x_trans = 80;\n        y_trans = 80;\n        y_trans2 = 80;\n      }\n\n      if(width<=1600){\n        height = (1.4)*width/(ratio);\n        x_trans = 80;\n        y_trans = 80;\n        y_trans2 = 80;\n      }\n      \n      if(width<=1400){\n        height = (1.6)*width/(ratio);\n        x_trans = 70;\n        y_trans = 70;\n        y_trans2 = 70;\n      }\n\n      if(width<=1200){\n        height = (1.8)*width/(ratio);\n        x_trans = 60;\n        y_trans = 60;\n        y_trans2 = 60;\n      }\n\n      if(width<=800){\n        height = (2.8)*width/(ratio);\n        x_trans = 40;\n        y_trans = 40;\n        y_trans2 = 40;\n      }\n\n      if(width<=500){\n        height = (3.2)*width/(ratio);\n        x_trans = 20;\n        y_trans = 40;\n        y_trans2 = 40;\n      }\n\n      this.setState({\n        div_height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        y_trans2: y_trans2,\n      });\n    }\n\n    render() {\n\n        if (this.state.authenticated) {\n        return (\n          <div ref={this.myRef}>\n            <div className=\"main_results\">\n            {this.state.displayResults ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"results_div\">\n                {/* <Row>  */}\n                    <div className=\"map_div\">\n                      <Chart height={this.state.div_height} />\n                      {/* <Chart callbackFromApp={this.mapCallback}/> */}\n                    </div>\n                    <div id=\"plot_div\"> \n                        <Test_Plot_Dates options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} y_trans2={this.state.y_trans2} />\n                        {/* <Plot options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} /> */}\n                    </div>\n                {/* </Row>  */}\n              </div>\n              <div className=\"tables\">\n                <Row>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.rate_table_data} title={\"Growth Rate\"}/>\n                    </div>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.growth_table_data} title={\"Projected growth\"} />\n                    </div>\n                </Row>\n              </div>\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"intro\">\n              </div>\n            </div>\n            )\n          }\n          </div>\n        </div>\n      );\n        } else{\n        return (\n        <div ref={this.myRef}>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n        </div>);      \n        }\n    }\n    \n      getGrowthTableData(data){\n        let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"]\n        \n        \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n    \n      getRateTableData(data){\n        let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"]\n        let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: table_headers\n        }\n    \n        return result;\n      }\n\n      get_historical_data(keywords, result){\n        let data = []\n\n        for (let keyword in keywords) {  \n            let index = 0;\n            let k_w = keywords[keyword]\n            let arr = Object.keys(result[k_w][MA_Day_5+k_w]).slice(4,260).map(\n            function(key){\n                return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n            );\n            data.push(arr)\n        }\n\n        return data;\n    }\n    \n    get_forecasted_data(keywords, result){\n    let data = []\n\n    for (let keyword in keywords) {  \n        let index = 0;\n        let k_w = keywords[keyword]\n        let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n        function(key){\n            return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n        }\n        );\n        data.push(arr)\n    }\n\n    return data;\n    }\n}\n  \n  \nexport default App;\n","\nexport const appConfig = {\n    KEYWORDS_URL: \"http://localhost:5000/keywords\",\n    KEYWORDS_URL3: \"http://localhost:5000/all\",\n    KEYWORDS_URL2: \"http://0.0.0.0:5000/\",\n    KEYWORDS_NEW: \"http://0.0.0.0:5000/new\",\n    RATE_RANKER_URL: \"http://localhost:5000/rateranker\",\n    GROWTH_RANKER_URL: \"http://localhost:5000/growthranker\"\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}