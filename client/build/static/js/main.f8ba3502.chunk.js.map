{"version":3,"sources":["components/Header.js","states.js","components/Input.js","components/Login.js","components/Table.js","components/Chart.js","utils_dates/functions.js","utils_dates/config.js","utils_dates/graphics.js","components/AxisX.js","components/AxisY.js","components/Legend.js","components/Static_Line.js","components/Pointer_Line.js","components/Info_Box.js","utils_dates/area_path.js","components/Area_Path.js","components/Plot.js","Test_Plot_Dates.js","App.js","config.js","serviceWorker.js","index.js"],"names":["Header","props","state","authenticated","className","Form","this","username","Button","variant","type","Component","USA_STATES","sort","a","b","localeCompare","time_frames","InputComponent","handleClick","bind","handleChange","selectedState","selectedTimeFrame","keywords","selected_state_name","selected_time_frame","event","preventDefault","callbackFromParent","setState","target","value","split","namesList","map","key","time_framesList","time_frame","onSubmit","Group","Col","sm","Label","htmlFor","Control","placeholder","onChange","id","as","LoginComponent","handleChangeLogin","handleChangePassword","password","callbackFromLogin","controlId","TableComponent","data","tableHeaders","tableData","headers","entity","index","tableRows","cells","e","i","title","Table","striped","bordered","hover","highchartsMap","Highcharts","western_states","central_states","eastern_states","southern_states","Chart","setHoverData","callbackFromApp","point","mapOptions","chart","height","events","drilldown","console","log","drillup","tooltip","enabled","legend","layout","align","verticalAlign","text","mapNavigation","buttonOptions","plotOptions","states","color","brightness","series","click","concat","keys","mapData","mapDataIE","name","dataLabels","format","activeDataLabelStyle","textDecoration","textOutline","drillUpButton","relativeTo","position","x","y","constructorType","highcharts","options","React","get_random_colors","number","slice","scale_data_area_dates","ranges","width","prefix","result","x_frame","max_x","min_x","y_frame","max_y","min_y","length","push","capitalizeString","string","charAt","toUpperCase","appConfig","box_width","box_height","make_yy_tick","line","get_y_ticks","lines_number","frame","make_x_tick","get_ticks","ticks_number","make_y_tick","get_y_axis","prepare_x_axis","data_mock","Object","data_frame","Math","floor","formatDate_monthly","get_x_axis","x_trans","y_trans","get_red_line","dimensions","ranges_dates","get_info_box","info_box","y_data","undefined","value_y","colors","toFixed","date","d","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","formatDate","value_x","pos_x","pos_y","visibility","prepare_legend","AxisX","dangerouslySetInnerHTML","__html","x_label","ticks","dates","PureComponent","AxisY","y_number","y_label","Legend","Static_Line","Pointer_Line","mark_line","pos","Info_Box","svgPath","points","command","dash","reduce","acc","bezierCommand","areaPath","d1","bezierCommand_upper","d3","reverse","bezierCommand_lower","lineCommand","area_path","controlPoint","current","previous","next","o","pointA","pointB","lengthX","lengthY","sqrt","pow","angle","atan2","PI","cos","sin","cps","cpe","controlPoint_upper","controlPoint_lower","line_lower","line_upper","Area_Path","style","Plot","array_length_dates","Test_Plot_Dates","handleMouseMove","handleHoverOff","updateWindowDimensions","window","innerWidth","divRef","createRef","number_of_series","scaled_historical_data","scale_data_mocks","historical_data","forecasted_data","scaled_forecasted_data","data_map_area_DATES","get_data_map_area_DATES","info_box_height","get_box_height","width2","addEventListener","focus","removeEventListener","div_width2","clientWidth","div_width","data_mocks_area_DATES1","data_mocks_area_DATES2","number_of_plots","scaled_data_mocks_area_DATES","scaled_data_mocks_area_future_DATES","data_mocks_area_DATES","y_data_normal","y_data_min","y_data_max","j","get_data_mocks_area_DATES","dim","getBoundingClientRect","clientX","left","clientY","top","x_diff","round","left_index","right_index","area_paths","area_paths_future","v_b","v_trans","ref","version","xmlns","preserveAspectRatio","onMouseMove","onMouseLeave","viewBox","transform","KEYWORDS_URL","KEYWORDS_URL3","KEYWORDS_URL2","KEYWORDS_NEW","RATE_RANKER_URL","GROWTH_RANKER_URL","App","fetchCallback","displayResults","fetchData","divElement","clientHeight","region_state","rate_table_data","growth_table_data","div_height","fetch","method","body","JSON","stringify","then","res","json","get_historical_data","get_forecasted_data","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","Input","Row","Login","toLoginCallback","keyword","k_w","arr","UTC","substring","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mTA2BeA,E,YAtBb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,eAAe,GAJA,E,sEASjB,OACE,yBAAKC,UAAU,YACb,kBAACC,EAAA,EAAD,KACE,qCAAWC,KAAKL,MAAMM,SAAtB,QACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,QAAQL,UAAU,YAAYM,KAAK,UAAnD,gB,GAfWC,a,gBCFRC,EAAY,CACrB,CAAC,KAAM,EAAG,eACV,CAAC,QAAS,EAAG,iBACb,CAAC,QAAS,EAAG,cACb,CAAC,QAAS,EAAG,cACb,CAAC,QAAS,EAAG,UACb,CAAC,QAAS,EAAG,aACb,CAAC,QAAS,EAAG,SACb,CAAC,QAAS,EAAG,YACb,CAAC,QAAS,EAAG,UACb,CAAC,QAAS,EAAG,cACb,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,WACd,CAAC,QAAS,GAAI,UACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,WACd,CAAC,QAAS,GAAI,WACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,SACd,CAAC,QAAS,GAAI,gBACd,CAAC,QAAS,GAAI,WACd,CAAC,QAAS,GAAI,eACd,CAAC,QAAS,GAAI,kBACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,QACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,gBACd,CAAC,QAAS,GAAI,cACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,SACd,CAAC,QAAS,GAAI,gBACd,CAAC,QAAS,GAAI,eACd,CAAC,QAAS,GAAI,iBACd,CAAC,QAAS,GAAI,YACd,CAAC,QAAS,GAAI,QACd,CAAC,QAAS,GAAI,aACd,CAAC,QAAS,GAAI,iBACd,CAAC,QAAS,GAAI,wBACd,CAAC,QAAS,GAAI,aACd,CAAC,QAAS,GAAI,WACd,CAAC,QAAS,GAAI,WACd,CAAC,QAAS,GAAI,kBACd,CAAC,QAAS,GAAI,aACd,CAAC,QAAS,GAAI,WACd,CAAC,QAAS,GAAI,gBACd,CAAC,QAAS,GAAI,WACd,CAAC,QAAS,GAAI,QACd,CAAC,QAAS,GAAI,UACd,CAAC,QAAS,GAAI,WAChBC,MAAK,SAAUC,EAAGC,GAChB,OAAQ,GAAKD,EAAE,IAAIE,cAAcD,EAAE,OCnDjCE,EAAc,CAChB,CAAC,EAAG,eAAgB,aACpB,CAAC,EAAG,iBAAkB,cACtB,CAAC,EAAG,eAAgB,aACpB,CAAC,EAAG,cAAe,YA0FRC,E,YArFX,WAAYjB,GAAQ,IAAD,8BACf,4CAAMA,KACDkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,kBAAoB,EAAKA,kBAAkBH,KAAvB,gBACzB,EAAKlB,MAAQ,CACTsB,SAAU,GACVC,oBAAqBb,EAAW,GAAG,GACnCc,oBAAqBT,EAAY,GAAG,IATzB,E,yEAaPU,GACRA,EAAMC,iBACNtB,KAAKL,MAAM4B,mBAAmBvB,KAAKJ,S,oCAGzByB,GACVrB,KAAKwB,SAAS,CACVL,oBAAqBE,EAAMI,OAAOC,MAAMC,MAAM,KAAK,O,wCAIzCN,GACdrB,KAAKwB,SAAS,CACVJ,oBAAqBC,EAAMI,OAAOC,MAAMC,MAAM,KAAK,O,mCAI9CN,GACTrB,KAAKwB,SAAS,CACVN,SAAUG,EAAMI,OAAOC,MAAMC,MAAM,KACnC1B,SAAU,W,+BAKd,IAAI2B,EAAYtB,EAAWuB,KAAI,SAASjC,GACpC,OAAO,4BAAQkC,IAAKlC,EAAM,GAAI8B,MAAO9B,GAAQA,EAAM,OAGnDmC,EAAkBpB,EAAYkB,KAAI,SAASG,GAC3C,OAAO,4BAAQF,IAAKE,EAAW,GAAIN,MAAOM,GAAaA,EAAW,OAGtE,OACI,yBAAKlC,UAAU,qCACX,kBAACC,EAAA,EAAD,CAAMkC,SAAUjC,KAAKa,aACjB,kBAACd,EAAA,EAAKmC,MAAN,CAAYpC,UAAU,eAClB,kBAACqC,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKtC,UAAU,eACX,kBAACC,EAAA,EAAKsC,MAAN,CAAYvC,UAAU,mBAAmBwC,QAAQ,kBAAiB,oDAClE,kBAACvC,EAAA,EAAKwC,QAAN,CAAczC,UAAU,gBAAgBM,KAAK,OAAOoC,YAAY,iBAAiBd,MAAO1B,KAAKJ,MAAMsB,SAAUuB,SAAUzC,KAAKe,aAAc2B,GAAG,qBAIrJ,kBAACP,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKtC,UAAU,eACX,kBAACC,EAAA,EAAKsC,MAAN,CAAYvC,UAAU,mBAAmBwC,QAAQ,0BAAyB,mDAE1E,kBAACvC,EAAA,EAAKwC,QAAN,CAAcI,GAAG,SAASF,SAAUzC,KAAKiB,kBAAoByB,GAAG,yBAAyB5C,UAAU,8BAC9FiC,KAKb,kBAACI,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKtC,UAAU,eACX,kBAACC,EAAA,EAAKsC,MAAN,CAAYvC,UAAU,mBAAmBwC,QAAQ,sBAAqB,8CAEtE,kBAACvC,EAAA,EAAKwC,QAAN,CAAcI,GAAG,SAASF,SAAUzC,KAAKgB,cAAgB0B,GAAG,qBAAqB5C,UAAU,8BACtF8B,GAGL,kBAAC1B,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAA/B,mB,GA7EHC,a,QC2DduC,E,YAhEb,WAAYjD,GAAQ,IAAD,8BACjB,4CAAMA,KACDkB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAK+B,kBAAoB,EAAKA,kBAAkB/B,KAAvB,gBACzB,EAAKgC,qBAAuB,EAAKA,qBAAqBhC,KAA1B,gBAC5B,EAAKlB,MAAQ,CACTC,eAAe,EACfI,SAAU,OACV8C,SAAU,QARG,E,2EAaU,SAAxB/C,KAAKJ,MAAMK,UAA+C,SAAxBD,KAAKJ,MAAMmD,UAC9C/C,KAAKL,MAAMqD,kBAAkBhD,KAAKJ,S,wCAIpByB,GAChBrB,KAAKwB,SAAS,CACVvB,SAAUoB,EAAMI,OAAOC,U,2CAIRL,GACnBrB,KAAKwB,SAAS,CACVuB,SAAU1B,EAAMI,OAAOC,U,+BAO3B,OACF,yBAAK5B,UAAU,aACT,0CACA,6BAEA,8CACA,8CACA,6BACI,kBAACC,EAAA,EAAD,CAAMkC,SAAUjC,KAAKa,aACnB,kBAACd,EAAA,EAAKmC,MAAN,CAAYe,UAAU,qBAClB,kBAAClD,EAAA,EAAKsC,MAAN,iBACA,kBAACtC,EAAA,EAAKwC,QAAN,CAAcnC,KAAK,OAAOoC,YAAY,iBAAiBd,MAAO1B,KAAKJ,MAAMsB,SAAUuB,SAAUzC,KAAK6C,qBAGtG,kBAAC9C,EAAA,EAAKmC,MAAN,CAAYe,UAAU,qBAClB,kBAAClD,EAAA,EAAKsC,MAAN,iBACA,kBAACtC,EAAA,EAAKwC,QAAN,CAAcnC,KAAK,WAAWoC,YAAY,WAAWd,MAAO1B,KAAKJ,MAAMsB,SAAUuB,SAAUzC,KAAK8C,wBAEpG,kBAAC5C,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAA/B,e,GArDeC,a,QCoDd6C,E,YAnDb,WAAYvD,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXuD,KAAM,GACNjC,SAAU,IALK,E,sEAWjB,IAAIkC,EAAepD,KAAKL,MAAM0D,UAAUC,QAAQzB,KAAI,SAAE0B,EAAQC,GAC5D,OACE,wBAAI1B,IAAK0B,GAAQD,MAIjBE,EAAYzD,KAAKL,MAAM0D,UAAUF,KAAKtB,KAAI,SAAE0B,EAAQC,GACtD,IAAIE,EAAQH,EAAO1B,KAAI,SAAC8B,EAAEC,GACxB,OAAO,wBAAI9B,IAAO8B,GAAID,MAGxB,OACE,wBAAI7B,IAAK0B,GACP,4BAAKA,EAAQ,GAEZE,MAKP,OACF,yBAAK5D,UAAU,aACX,0BAAMA,UAAU,UAAS,4BAAKE,KAAKL,MAAMkE,QACzC,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,GAC3B,+BACE,4BACE,iCACA,uCACCb,IAGL,+BACGK,S,GA7CkBpD,a,2DCE7B6D,IAAcC,KAyDd,IAAMC,EAAiB,CACrB,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,YAGNC,EAAiB,CACrB,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,YAAa,YAGVC,EAAiB,CACrB,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,YAGNC,EAAkB,CACtB,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,WACV,CAAC,QAAS,YA6HKC,E,YAxHf,WAAY7E,GAAQ,IAAD,8BACf,4CAAMA,KAsGR8E,aAAe,SAACd,GACd,EAAKhE,MAAM+E,gBAAgBf,EAAEgB,MAAM,YArGnC,EAAK/E,MAAQ,CACTgF,WAAa,CACTC,MAAO,CACLC,OAAQ,EAAKnF,MAAMmF,OAEnBjD,IAAK,sBACLkD,OAAQ,CACJC,UAAW,SAASrB,GAClBsB,QAAQC,IAAI,mBAEdC,QAAS,WACPF,QAAQC,IAAI,mBAIpBE,QAAS,CAAEC,SAAS,GACpBC,OAAQ,CACNC,OAAQ,WACRC,MAAO,QACPC,cAAe,SACfJ,SAAS,GAGXxB,MAAO,CACL6B,KAAM,2BAGRC,cAAe,CACbN,SAAS,EACTO,cAAe,CACbH,cAAe,WAInBI,YAAa,CACXhE,IAAK,CACHiE,OAAQ,CAENC,MAAO,UAEP9B,MAAO,CACL8B,MAAO,UACPV,SAAS,EACTW,WAAY,MAKlBC,OAAO,CACHtB,MAAM,CACFI,OAAO,CACHmB,MAAO,EAAKzB,aAAa3D,KAAlB,oBAOrBmF,OAAQ,CAWN,CACE9C,KAAMiB,EAAe+B,OAAO9B,GAAgB8B,OAAO7B,GAAgB6B,OAAO5B,GAC1E6B,KAAM,CAAC,SAAU,SACjBC,QAASC,EACTC,KAAM,aACNC,WAAY,CACRnB,SAAS,EACToB,OAAQ,oCAMhBzB,UAAW,CACT0B,qBAAsB,CACpBX,MAAO,UACPY,eAAgB,OAChBC,YAAa,eAEfC,cAAe,CACbC,WAAY,aACZC,SAAU,CACRC,EAAG,EACHC,EAAG,QA/FF,E,sEA4Gb,OACI,yBAAKnH,UAAU,eACX,kBAAC,IAAD,CACIoH,gBAAiB,WACjBC,WAAYhD,IACZiD,QAASpH,KAAKJ,MAAMgF,kB,GAnHpByC,IAAMhH,W,MC/BnB,SAASiH,EAAkBC,GAG9B,MAFa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,GAAI,IAE3DC,MAAM,EAAGD,GAoDpB,SAASE,EAAsBtE,EAAMuE,EAAQC,EAAO7C,GAWvD,IAXyE,IAAV8C,EAAS,uDAAF,EAClEC,EAAS,GAOTC,EAAUH,GANDD,EAAOK,MAAQL,EAAOM,OAO/BC,EAAUnD,GAND4C,EAAOQ,MAAQR,EAAOS,OAQ1BvE,EAAE,EAAGA,EAAET,EAAKiF,OAAQxE,IAQzBiE,EAAOQ,KAAK,EAAEzE,EAAEgE,GAAUE,EAAS3E,EAAKS,GAAG,GAAIkB,EAAS3B,EAAKS,GAAG,GAAKqE,EAASnD,EAAS3B,EAAKS,GAAG,GAAKqE,EAASnD,EAAS3B,EAAKS,GAAG,GAAKqE,IAMvI,OAAOJ,EAmEJ,SAASS,EAAiBC,GAC7B,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOf,MAAM,GClPzD,IAGakB,EAGC,CACVC,UAAW,IACXC,WAAY,KALHF,EAUG,CACZX,MAAQ,IACRC,MAAO,EACPE,MAAO,IACPC,MAAO,GAdEO,EAkBS,IAlBTA,EAmBkB,GCd/B,SAASG,EAAa7B,EAAGC,GAErB,IAAI6B,EAAI,YAAQ9B,EAAE,GAAV,YAAgBC,EAAhB,cAAuBD,EAAvB,YAA4BC,GAEpC,MAAM,YAAN,OAAmB6B,EAAnB,uDAiBG,SAASC,EAAajE,EAAQkE,GAKjC,IAJA,IAAInB,EAAS,GAEToB,EAAQnE,EAASkE,EAEZpF,EAAE,EAAGA,GAAGoF,EAAcpF,IAAI,CAC/B,IAAIe,EAAQsE,EAAQrF,EACpBiE,EAAOQ,KAAKQ,EAAa,EAAElE,IAG/B,OAAOkD,EAIX,SAASqB,EAAYlC,EAAGC,GAEpB,IAAI6B,EAAI,YAAQ9B,EAAR,YAAaC,EAAb,cAAoBD,EAApB,YAAyBC,EAAI,IACrC,MAAM,+BAAN,OAAsC6B,EAAtC,yBAGG,SAASK,EAAUxB,EAAO7C,EAAQsE,GAKrC,IAJA,IAAIvB,EAAS,GAEToB,EAAQtB,GAASyB,EAAe,GAE3BxF,EAAE,EAAGA,EAAEwF,EAAcxF,IAAI,CAC9B,IAAIe,EAAQsE,EAAQrF,EACpBiE,EAAOQ,KAAKa,EAAYvE,EAAOG,IAGnC,OAAO+C,EAGX,SAASwB,EAAYrC,EAAGC,EAAGvF,GACvB,MAAM,YAAN,OAAmBsF,EAAnB,oDAAgEC,EAAhE,aAAsEvF,EAAtE,WAGG,SAAS4H,EAAWtC,EAAGC,EAAGnC,EAAQkE,GAKrC,IAJA,IAAInB,EAAS,GAEToB,EAAQnE,EAASkE,EAEbpF,EAAE,EAAGA,GAAGoF,EAAcpF,IAC1BiE,EAAOQ,KAAKgB,GAAa,GAAIvE,EAASmE,EAAOrF,EAAGA,EAAIoF,IAGxD,IAAIF,EAAI,YAAQ9B,EAAR,YAAaC,EAAb,cAAoBD,EAApB,YAAyBC,EAAInC,GAGrC,OAFA+C,EAAOQ,KAAP,mBAAwBS,EAAxB,wDAEOjB,EASJ,SAAS0B,EAAe5B,EAAO7C,EAAQsE,EAAcI,GAOxD,IANA,IAAI3B,EAAS,GAETO,EAASqB,OAAOrD,KAAKoD,GAAWpB,OAChCsB,EAAaC,KAAKC,MAAMxB,EAAOgB,EAAa,GAE5CH,EAAQtB,GAASyB,EAAe,GAC5BxF,EAAE,EAAGA,EAAEwF,EAAcxF,IACzBiE,EAAOQ,KAAP,mBAAwBY,EAAMrF,EAA9B,wDAA+EkB,EAAS,GAAxF,aAA+F+E,GAAmBL,EAAUE,EAAW9F,GAAG,IAA1I,YAGJ,OAAOiE,EAIJ,SAASiC,EAAWjG,EAAO8D,EAAO7C,EAAQiF,EAASC,GACtD,IAAInC,EAAS,GACTiB,EAAI,cAAUhE,EAAV,cAAsB6C,GAI9B,OAFAE,EAAOQ,KAAP,mBAAwBV,EAAM,EAA9B,8DAAqF7C,EAASkF,EAAQ,EAAtG,oBAAmHnG,EAAnH,oBACAgE,EAAOQ,KAAP,mBAAwBS,EAAxB,wDACOjB,EAOJ,SAASoC,EAAaC,EAAYC,GAErC,IAEInD,EAAc,KAFJkD,EAAWvC,MAAMwC,EAAapC,OAK5C,MAAM,iEAAN,OACuDf,EADvD,gBACgEA,EADhE,YACqEkD,EAAWpF,OADhF,6DAqCG,SAASsF,EAAaC,EAAU1B,EAAWC,EAAY1H,GAE1D,IAAIoJ,EAAS,GAEb,QAAgBC,IAAbF,QAA+CE,IAArBF,EAASG,QAClC,IAAI,IAAI5G,EAAE,EAAGA,EAAEyG,EAASI,OAAOrC,OAAQxE,IACnC0G,EAAOjC,KAAP,mCAAgD,IAAPzE,EAAI,GAAQ,GAArD,iBAAwE,IAAPA,EAAI,GAAQ,GAA7E,qBAA4FyG,EAASI,OAAO7G,GAA5G,4EACwB,IAAPA,EAAI,GAAQ,GAD7B,YACmC0E,EAAiBpH,EAAS0C,IAD7D,YACoEyG,EAASG,QAAQ,GAAG5G,GAAG8G,QAAQ,GADnG,kBAC+GL,EAASG,QAAQ,GAAG5G,GAAG8G,QAAQ,GAD9I,mBAC2JL,EAASG,QAAQ,GAAG5G,GAAG8G,QAAQ,GAD1L,aAKR,IAAIC,EAiCR,SAAoBC,GAElB,IAAID,EAAO,IAAIE,KAAKD,GAChBE,EAAKH,EAAKI,UACVC,EAAKL,EAAKM,WAAW,EACrBC,EAAOP,EAAKQ,cACbL,EAAG,KAAIA,EAAG,IAAIA,GACdE,EAAG,KAAIA,EAAG,IAAIA,GACjB,OAAOJ,EAAIE,EAAG,IAAIE,EAAG,IAAIE,EAzCZE,CAAWf,EAASgB,SAE/B,MAAM,2BAAN,OAAkChB,EAASiB,MAA3C,aAAqDjB,EAASkB,MAA9D,gEAA2HlB,EAASmB,WAApI,8CAC8B7C,EAD9B,mBACkDC,EADlD,6FAG6B+B,EAH7B,0CAKML,EALN,cASG,SAASmB,GAAe9D,EAAO7C,EAAQ2F,EAAQvJ,GAIlD,IAFA,IAAIoE,EAAS,GAEL1B,EAAE,EAAGA,EAAE6G,EAAOrC,OAAQxE,IAC1B0B,EAAO+C,KAAP,uEAE2C,GAAGzE,EAAI,EAFlD,0EAGkD6G,EAAO7G,GAHzD,8JAIkH0E,EAAiBpH,EAAS0C,IAJ5I,sCAUJ,MAAM,qCAAN,OAC8B+D,EAD9B,aACwC7C,EADxC,iDAEUQ,EAFV,wBAkBJ,SAASuE,GAAmBe,GAE1B,IAAID,EAAO,IAAIE,KAAKD,GAChBE,EAAKH,EAAKI,UACVC,EAAKL,EAAKM,WAAW,EAIzB,OAFGH,EAAG,KAAIA,EAAG,IAAIA,GACdE,EAAG,KAAIA,EAAG,IAAIA,GACNA,EAAG,IAHHL,EAAKQ,c,ICzMDO,G,YAfb,WAAY/L,GAAQ,qEACVA,I,sEAIR,OACE,2BACI,uBAAGgM,wBAAyB,CAAEC,OAAQ9B,EAAW9J,KAAKL,MAAMkM,QAAS7L,KAAKL,MAAMuK,WAAWvC,MAAO3H,KAAKL,MAAMuK,WAAWpF,OAAQ9E,KAAKL,MAAMuK,WAAWH,QAAS/J,KAAKL,MAAMuK,WAAWF,YACrL,uBAAG2B,wBAAyB,CAAEC,OAAQzC,EAAUnJ,KAAKL,MAAMuK,WAAWvC,MAAO3H,KAAKL,MAAMuK,WAAWpF,OAAQ9E,KAAKL,MAAMmM,UACtH,uBAAGH,wBAAyB,CAAEC,OAAQrC,EAAevJ,KAAKL,MAAMuK,WAAWvC,MAAO3H,KAAKL,MAAMuK,WAAWpF,OAAQ9E,KAAKL,MAAMmM,MAAO9L,KAAKL,MAAMoM,e,GAVrI1E,IAAM2E,eCeTC,G,YAdb,WAAYtM,GAAQ,qEACVA,I,sEAIR,OACE,2BACI,uBAAGgM,wBAAyB,CAAEC,OAAQtC,EAAW,EAAG,EAAGtJ,KAAKL,MAAMuK,WAAWpF,OAAQ9E,KAAKL,MAAMuM,aAChG,uBAAGP,wBAAyB,CAAEC,QFoGT/H,EEpGkC7D,KAAKL,MAAMwM,QFoGtCrH,EEpG+C9E,KAAKL,MAAMuK,WAAWpF,OFoG7DiF,EEpGqE/J,KAAKL,MAAMuK,WAAWH,QFqGjI,YAAN,OAAmBA,EAAnB,sHAAwIjF,EAASiF,GAAS,EAAI,GAAIA,EAAlK,oBAAqLlG,EAArL,wBADG,IAA0BA,EAAOiB,EAAQiF,M,GE7G5B1C,IAAM2E,eCcTI,G,YAbb,WAAYzM,GAAQ,qEACVA,I,sEAIR,OACE,2BACI,uBAAGgM,wBAAyB,CAAEC,OAAQH,GAAgBzL,KAAKL,MAAMuK,WAAWvC,MAAO,EAAI3H,KAAKL,MAAMuK,WAAWH,QAAS/J,KAAKL,MAAMuK,WAAWpF,OAAS9E,KAAKL,MAAMuK,WAAWF,QAAQ,EAAGhK,KAAKL,MAAM8K,OAAQzK,KAAKL,MAAMuB,kB,GAR3MmG,IAAM2E,eCcVK,G,YAbb,WAAY1M,GAAQ,qEACVA,I,sEAIR,OACE,2BACI,uBAAGgM,wBAAyB,CAAEC,OAAQ3B,EAAajK,KAAKL,MAAMuK,WAAYlK,KAAKL,MAAM+H,gB,GARvEL,IAAM2E,eCcfM,G,YAbb,WAAY3M,GAAQ,qEACVA,I,sEAIR,OACE,2BACI,uBAAGgM,wBAAyB,CAAEC,QLqHZW,EKrHkCvM,KAAKL,MAAM4M,ULqHlCzH,EKrH6C9E,KAAKL,MAAMmF,OLsHvF,2BAAN,OAAkCyH,EAAUC,IAA5C,kGAC6E1H,EAD7E,yBACoGyH,EAAUf,WAD9G,gCADG,IAAuBe,EAAWzH,M,GK7HduC,IAAM2E,eCchBS,G,YAbb,WAAY9M,GAAQ,qEACVA,I,sEAIR,OACE,2BACI,uBAAGgM,wBAAyB,CAAEC,OAAQxB,EAAapK,KAAKL,MAAM0K,SAAUrK,KAAKL,MAAMgI,MAAO3H,KAAKL,MAAMmF,OAAQ9E,KAAKL,MAAMuB,kB,GAR7GmG,IAAM2E,eCKvBU,GAAU,SAACC,EAAQC,EAAS7G,EAAO8G,GAEvC,IAAMjC,EAAI+B,EAAOG,QAAO,SAACC,EAAKpI,EAAOf,EAAGpD,GAAhB,OAA4B,IAANoD,EAAA,YACvCe,EAAM,GADiC,YAC3BA,EAAM,IADqB,UAEzCoI,EAFyC,YAElCC,GAAcrI,EAAOf,EAAGpD,MAClC,IAEF,MAAM,YAAN,OAAmBoK,EAAnB,gCAA4C7E,EAA5C,8DAAuG8G,EAAvG,8BAIII,GAAW,SAACN,EAAQC,EAAS7G,GAEjC,IAAImH,EAAKP,EAAOG,QAAO,SAACC,EAAKpI,EAAOf,EAAGpD,GAAhB,OAA4B,IAANoD,EAAA,YACtCe,EAAM,GADgC,YAC1BA,EAAM,IADoB,UAExCoI,EAFwC,YAEjCI,GAAoBxI,EAAOf,EAAGpD,MACxC,IAIF0M,GAAE,aAAUP,EAAOA,EAAOvE,OAAS,GAAG,GAApC,YAA0CuE,EAAOA,EAAOvE,OAAS,GAAG,GAApE,MAEF,IAAIgF,EAAKT,EAAOU,UAAUP,QAAO,SAACC,EAAKpI,EAAOf,EAAGpD,GAAhB,OAA4B,IAANoD,EAAA,YAChDe,EAAM,GAD0C,YACpCA,EAAM,IAD8B,UAElDoI,EAFkD,YAE3CO,GAAoB3I,EAAOf,EAAGpD,MACxC,IAQF,OALA4M,GAAE,aAAUT,EAAOA,EAAOvE,OAAS,GAAG,GAApC,YAA0CuE,EAAOA,EAAOvE,OAAS,GAAG,GAApE,MAKI,YAAN,OAHQ8E,EAAKE,EAGb,kBAA8BrH,EAA9B,mBAA8CA,EAA9C,6EAKIwH,GAAc,SAAA5I,GAAK,kBAASA,EAAM,GAAf,YAAqBA,EAAM,KAI7C,SAAS6I,GAAUrK,EAAM4C,GAAe,IAAR8G,EAAO,uDAAF,EAEpChF,EAAS,GAIb,OAHAA,EAAOQ,KAAKqE,GAAQvJ,EAAMoK,GAAaxH,EAAO8G,IAC9ChF,EAAOQ,KAAK4E,GAAS9J,EAAM6J,GAAejH,IAEnC8B,EAiBX,IAsBM4F,GAAe,SAACC,EAASC,EAAUC,EAAMP,GAK7C,IAIMQ,EAxBK,SAACC,EAAQC,GACpB,IAAMC,EAAUD,EAAO,GAAKD,EAAO,GAC7BG,EAAUF,EAAO,GAAKD,EAAO,GACnC,MAAO,CACL1F,OAAQuB,KAAKuE,KAAKvE,KAAKwE,IAAIH,EAAS,GAAKrE,KAAKwE,IAAIF,EAAS,IAC3DG,MAAOzE,KAAK0E,MAAMJ,EAASD,IAmBnBlF,CAJA6E,GAAYD,EACZE,GAAQF,GAMZU,EAAQP,EAAEO,OAASf,EAAU1D,KAAK2E,GAAK,GACvClG,EAnCU,GAmCDyF,EAAEzF,OAKjB,MAAO,CAFGsF,EAAQ,GAAK/D,KAAK4E,IAAIH,GAAShG,EAC/BsF,EAAQ,GAAK/D,KAAK6E,IAAIJ,GAAShG,IASrC4E,GAAgB,SAACrI,EAAOf,EAAGpD,GAG/B,IAAMiO,EAAMhB,GAAajN,EAAEoD,EAAI,GAAIpD,EAAEoD,EAAI,GAAIe,GAGvC+J,EAAMjB,GAAa9I,EAAOnE,EAAEoD,EAAI,GAAIpD,EAAEoD,EAAI,IAAI,GACpD,MAAM,KAAN,OAAY6K,EAAI,GAAhB,YAAsBA,EAAI,GAA1B,YAAgCC,EAAI,GAApC,YAA0CA,EAAI,GAA9C,YAAoD/J,EAAM,GAA1D,YAAgEA,EAAM,KAIlEwI,GAAsB,SAACxI,EAAOf,EAAGpD,GAGrC,IAAMiO,EAAME,GAAmBnO,EAAEoD,EAAI,GAAIpD,EAAEoD,EAAI,GAAIe,GAG7C+J,EAAMC,GAAmBhK,EAAOnE,EAAEoD,EAAI,GAAIpD,EAAEoD,EAAI,IAAI,GAC1D,MAAM,KAAN,OAAY6K,EAAI,GAAhB,YAAsBA,EAAI,GAA1B,YAAgCC,EAAI,GAApC,YAA0CA,EAAI,GAA9C,YAAoD/J,EAAM,GAA1D,YAAgEA,EAAM,KAGlE2I,GAAsB,SAAC3I,EAAOf,EAAGpD,GAGrC,IAAMiO,EAAMG,GAAmBpO,EAAEoD,EAAI,GAAIpD,EAAEoD,EAAI,GAAIe,GAG7C+J,EAAME,GAAmBjK,EAAOnE,EAAEoD,EAAI,GAAIpD,EAAEoD,EAAI,IAAI,GAC1D,MAAM,KAAN,OAAY6K,EAAI,GAAhB,YAAsBA,EAAI,GAA1B,YAAgCC,EAAI,GAApC,YAA0CA,EAAI,GAA9C,YAAoD/J,EAAM,GAA1D,YAAgEA,EAAM,KAkClEiK,GAAqB,SAAClB,EAASC,EAAUC,EAAMP,GAKnD,IAIMQ,EAvCW,SAACC,EAAQC,GAC1B,IAAMC,EAAUD,EAAO,GAAKD,EAAO,GAC7BG,EAAUF,EAAO,GAAKD,EAAO,GACnC,MAAO,CACL1F,OAAQuB,KAAKuE,KAAKvE,KAAKwE,IAAIH,EAAS,GAAKrE,KAAKwE,IAAIF,EAAS,IAC3DG,MAAOzE,KAAK0E,MAAMJ,EAASD,IAkCnBa,CAJAlB,GAAYD,EACZE,GAAQF,GAMZU,EAAQP,EAAEO,OAASf,EAAU1D,KAAK2E,GAAK,GACvClG,EA3HU,GA2HDyF,EAAEzF,OAKjB,MAAO,CAFGsF,EAAQ,GAAK/D,KAAK4E,IAAIH,GAAShG,EAC/BsF,EAAQ,GAAK/D,KAAK6E,IAAIJ,GAAShG,IAIrCuG,GAAqB,SAACjB,EAASC,EAAUC,EAAMP,GAKnD,IAIMQ,EAnDW,SAACC,EAAQC,GAC1B,IAAMC,EAAUD,EAAO,GAAKD,EAAO,GAC7BG,EAAUF,EAAO,GAAKD,EAAO,GACnC,MAAO,CACL1F,OAAQuB,KAAKuE,KAAKvE,KAAKwE,IAAIH,EAAS,GAAKrE,KAAKwE,IAAIF,EAAS,IAC3DG,MAAOzE,KAAK0E,MAAMJ,EAASD,IA8CnBc,CAJAnB,GAAYD,EACZE,GAAQF,GAMZU,EAAQP,EAAEO,OAASf,EAAU1D,KAAK2E,GAAK,GACvClG,EAhJU,GAgJDyF,EAAEzF,OAKjB,MAAO,CAFGsF,EAAQ,GAAK/D,KAAK4E,IAAIH,GAAShG,EAC/BsF,EAAQ,GAAK/D,KAAK6E,IAAIJ,GAAShG,ICvM1B2G,G,YAlBb,WAAYpP,GAAQ,qEACVA,I,sEAIR,MAAwB,SAArBK,KAAKL,MAAMqP,MAEV,uBAAGrD,wBAAyB,CAAEC,OAAQ4B,GAAUxN,KAAKL,MAAMwD,KAAMnD,KAAKL,MAAMoG,MAAO,MAInF,uBAAG4F,wBAAyB,CAAEC,OAAQ4B,GAAUxN,KAAKL,MAAMwD,KAAMnD,KAAKL,MAAMoG,c,GAZ9DsB,IAAM2E,eCiBbiD,G,YAhBb,WAAYtP,GAAQ,qEACVA,I,sEAIN,OACI,2BAGI,uBAAGgM,wBAAyB,CAAEC,OAAQ7C,EAAY/I,KAAKL,MAAMuK,WAAWpF,OAAQ9E,KAAKL,MAAMuM,aAC3F,uBAAGP,wBAAyB,CAAEC,QToEhB/H,ESpEsC7D,KAAKL,MAAMkE,MToE1C8D,ESpEiD3H,KAAKL,MAAMuK,WAAWvC,MAAO3H,KAAKL,MAAMuK,WAAWpF,OAAQ9E,KAAKL,MAAMuK,WAAWH,QToE1GC,ESpEmHhK,KAAKL,MAAMuK,WAAWF,QTqE5L,YAAN,OAAmBrC,EAAM,EAAzB,yDAA2EqC,EAAQ,EAAnF,aAAyFnG,EAAzF,gBADG,IAAuBA,EAAO8D,EAAwBqC,M,GS/E1C3C,IAAM2E,eCYrB9B,GAAaxB,EACbhB,GAASgB,EAETwG,GAAqBxG,EAA+BA,EAoTzCyG,G,YA7Sb,WAAYxP,GAAQ,IAAD,uBACjB,4CAAMA,KAEDyP,gBAAkB,EAAKA,gBAAgBtO,KAArB,gBACvB,EAAKuO,eAAiB,EAAKA,eAAevO,KAApB,gBACtB,EAAKwO,uBAAyB,EAAKA,uBAAuBxO,KAA5B,gBAE9B,IAEI6G,EAA2B,GAAnB4H,OAAOC,WAAmB,IAClC1K,EAAS,EAAKnF,MAAMmF,OAAS,IAVhB,OAYjB,EAAK2K,OAASpI,IAAMqI,YAEpB,EAAK9P,MAAQ,CACTiE,MAAO,EAAKlE,MAAMyH,QAAQvD,MAC1BqI,SAAU,GACV9C,aAAc8F,GACdrD,QAAS,EAAKlM,MAAMyH,QAAQyE,QAC5BM,QAAS,EAAKxM,MAAMyH,QAAQ+E,QAC5BI,UAAW,CACTC,IAAK,EACLhB,WAAY,UAEdnB,SAAU,CACRiB,MAAO,EACPC,MAAO,EACPC,WAAY,SACZf,OAAQnD,EAAkB,EAAK3H,MAAMgQ,mBAExCC,uBAAwB,EAAKC,iBAAiB,EAAKlQ,MAAMmQ,gBAAiB,EAAKnQ,MAAMoQ,gBAAiBrI,GAAQC,EAAO7C,EAAQ,EAAKnF,MAAMgQ,kBAAkB,GAC1JK,uBAAwB,EAAKH,iBAAiB,EAAKlQ,MAAMmQ,gBAAiB,EAAKnQ,MAAMoQ,gBAAiBrI,GAAQC,EAAO7C,EAAQ,EAAKnF,MAAMgQ,kBAAkB,GAC1JM,oBAAqB,EAAKC,wBAAwB,EAAKvQ,MAAMmQ,gBAAiB,EAAKnQ,MAAMoQ,gBAAiBb,GAAoB,EAAKvP,MAAMgQ,kBACzIlF,OAAQ,EAAKnD,kBAAkB,EAAK3H,MAAMgQ,kBAC1CQ,gBAAiB,EAAKC,eAAe,EAAKzQ,MAAMgQ,kBAChDpI,OAAQ,EAAK5H,MAAMgQ,iBACnBzF,WAAY,CACXmG,OAAQ1I,EACRA,MAAOA,EAAM,IACb7C,OAAQA,EACRiF,QAjCU,GAkCVC,QAjCU,KARG,E,iFAgDjBhK,KAAKsP,yBACLC,OAAOe,iBAAiB,SAAUtQ,KAAKsP,wBACvCtP,KAAKyP,OAAO/B,QAAQ6C,U,6CAIpBhB,OAAOiB,oBAAoB,SAAUxQ,KAAKsP,0B,+CAK1C,IAAImB,EAAazQ,KAAKyP,OAAO/B,QAAQgD,YACjCC,EAAYF,EAAa,IACzB3L,EAAS9E,KAAKL,MAAMmF,OAAS,IAEjC9E,KAAKwB,SAAS,CACZ0I,WAAY,CACVmG,OAAQI,EACR9I,MAAOgJ,EACP7L,OAAQ9E,KAAKL,MAAMmF,OAAS,IAC5BiF,QAAS,GACTC,QAAS,IAEV4F,uBAAwB5P,KAAK6P,iBAAiB7P,KAAKL,MAAMmQ,gBAAiB9P,KAAKL,MAAMoQ,gBAAiBrI,GAAQiJ,EAAW7L,EAAQ9E,KAAKL,MAAMgQ,kBAAkB,GAC9JK,uBAAwBhQ,KAAK6P,iBAAiB7P,KAAKL,MAAMmQ,gBAAiB9P,KAAKL,MAAMoQ,gBAAiBrI,GAAQiJ,EAAW7L,EAAQ9E,KAAKL,MAAMgQ,kBAAkB,O,uCAKlJxM,EAAM4M,EAAiBrI,EAAQC,EAAO7C,EAAS6K,GAC9D,OZsGG,SAA0BiB,EAAwBC,EAAwBnJ,EAAQC,EAAO7C,EAAQgM,GAIpG,IAHA,IAAIC,EAA+B,GAC/BC,EAAsC,GAEjCpN,EAAE,EAAGA,EAAEkN,EAAiBlN,IAC7BmN,EAA6B1I,KAAKZ,EAAsBmJ,EAAuBhN,GAAI8D,EAAQC,EAAO7C,IAClGkM,EAAoC3I,KAAKZ,EAAsBoJ,EAAuBjN,GAAI8D,EAAQC,EAAQ7C,EAAQ,MAGtH,MAAO,CAACiM,EAA8BC,GY/G/BnB,CAAiB1M,EAAM4M,EAAiBrI,EAAQC,EAAO7C,EAAS6K,K,8CAGjDxM,EAAM4M,EAAiBb,EAAoBS,GACjE,OZ8GG,SAAiCsB,EAAuB/B,EAAoB4B,GAI/E,IAFA,IAAIb,EAAsB,GAElBrM,EAAI,EAAGA,EAAEsL,EAAoBtL,IAAK,CACtC,IAGI+G,EAHAuG,EAAgB,GAChBC,EAAa,GACbC,EAAa,GAGjBzG,EAAOsG,EAAsB,GAAGrN,GAAG,GAGnC,IAAI,IAAIyN,EAAE,EAAGA,EAAEP,EAAiBO,IAC9BH,EAAc7I,KAAK4I,EAAsBI,GAAGzN,GAAG,IAC/CuN,EAAW9I,KAAK4I,EAAsBI,GAAGzN,GAAG,IAC5CwN,EAAW/I,KAAK4I,EAAsBI,GAAGzN,GAAG,IAG9CqM,EAAoBrM,GAAK,CAACA,EAAG+G,EAAMuG,EAAeC,EAAYC,GAGlE,OAAOnB,EYpIAC,CZuFJ,SAAmCU,EAAwBC,EAAwBtJ,GAGtF,IAFA,IAAIM,EAAS,GAELjE,EAAE,EAAEA,EAAE2D,EAAO3D,IACjBiE,EAAOQ,KAAKuI,EAAuBhN,GAAGuC,OAAO0K,EAAuBjN,KAGxE,OAAOiE,EY9FwByJ,CAA0BnO,EAAM4M,EAAiBJ,GAAmBT,EAAoBS,K,wCAGvGA,GAChB,OAAOrI,EAAkBqI,K,qCAGZA,GACb,OZbe,KADYpI,EYcLoI,GZZX,EAEJ,IAAIpI,EAAS,GAAK,GAJtB,IAAwBA,I,sCYkBblG,GACd,IACIkQ,EADIlQ,EAAMI,OACF+P,wBACRxK,EAAI3F,EAAMoQ,QAAUF,EAAIG,KAAO1R,KAAKJ,MAAMsK,WAAWH,QACrD9C,EAAI5F,EAAMsQ,QAAUJ,EAAIK,IAAM5R,KAAKJ,MAAMsK,WAAWF,QAExD,GAAGhD,GAAK,GAAKC,GAAK,GAAKD,GAAKhH,KAAKJ,MAAMsK,WAAWvC,OAASV,GAAKjH,KAAKJ,MAAMsK,WAAWpF,OAAO,CAE3F,IAAI+M,EAASnK,GAAOK,MAAQL,GAAOM,MAC/BF,EAAU9H,KAAKJ,MAAMsK,WAAWvC,MAAMkK,EACtC/P,EAAM6H,KAAKmI,MAAO9K,EAAGc,GAEzB,QAA4CyC,IAAxCvK,KAAKJ,MAAMqQ,oBAAoBnO,GAAmB,CAEnC6H,KAAKmI,OAAOpK,GAAOK,MAAQL,GAAOM,OAAO,GACxC2B,KAAKmI,OAAOpK,GAAOK,MAAQL,GAAOM,OAAO,GAG3D,IAJA,IAIQpE,EAAE8D,GAAOM,MAAOpE,GAAG9B,EAAK8B,SACW2G,IAAtCvK,KAAKJ,MAAMqQ,oBAAoBrM,IACnBA,EAKjB,IAAI,IAAIA,EAAE9B,EAAK8B,GAAG8D,GAAOK,MAAOnE,SACW2G,IAAtCvK,KAAKJ,MAAMqQ,oBAAoBrM,IAClBA,EAKlB5D,KAAKwB,SAAS,CACZ+K,UAAW,CACTC,IAAKxF,GAEPqD,SAAU,CACRiB,MAAOtE,EACPuE,MAAOtE,EACPoE,QAASrL,KAAKJ,MAAMqQ,oBAAoBnO,GAAK,GAC7C0I,QAASxK,KAAKJ,MAAMqQ,oBAAoBnO,GACxC2I,OAAQnD,EAAkBtH,KAAKL,MAAMgQ,qBAGF,WAAnC3P,KAAKJ,MAAMyK,SAASmB,iBAA8DjB,IAAnCvK,KAAKJ,MAAMyK,SAASmB,YACrExL,KAAKwB,SAAS,CACZ+K,UAAW,CACTC,IAAKxF,UAIN,QAAYuD,IAARzI,EAAkB,CAO3B,IAJA,IAAIiQ,EAAajQ,EAAM,EACnBkQ,EAAclQ,EAAM,EAGf8B,EAAE9B,EAAK8B,GAAG,EAAGA,IACpB,QAAyC2G,IAAtCvK,KAAKJ,MAAMqQ,oBAAoBrM,GAAiB,CACjDmO,EAAanO,EACb,MAKJ,IAAK,IAAIA,EAAE9B,EAAK8B,GAAG8D,GAAOK,MAAOnE,IAC/B,QAAyC2G,IAAtCvK,KAAKJ,MAAMqQ,oBAAoBrM,GAAkB,CAClDoO,EAAcpO,EACd,WAS+C2G,IAA/CvK,KAAKJ,MAAMqQ,oBAAoB8B,SAA+ExH,IAAhDvK,KAAKJ,MAAMqQ,oBAAoB+B,KAE7FhS,KAAKwB,SAAS,CACZ+K,UAAW,CACTC,IAAKxF,GAEPqD,SAAU,CACRiB,MAAOtE,EACPuE,MAAOtE,EACPoE,QAASrL,KAAKJ,MAAMqQ,oBAAoBnO,GAAK,GAC7C0I,QAASxK,KAAKJ,MAAMqQ,oBAAoBnO,GACxC2I,OAAQnD,EAAkBtH,KAAKL,MAAMgQ,qBAGF,WAAnC3P,KAAKJ,MAAMyK,SAASmB,iBAA8DjB,IAAnCvK,KAAKJ,MAAMyK,SAASmB,YACrExL,KAAKwB,SAAS,CACZ+K,UAAW,CACTC,IAAKxF,YA8BRA,EAAIhH,KAAKJ,MAAMsK,WAAWvC,OAASV,EAAIjH,KAAKJ,MAAMsK,WAAWpF,QAAUkC,EAAIhH,KAAKJ,MAAMsK,WAAWH,SAAW9C,EAAIjH,KAAKJ,MAAMsK,WAAWF,UAC/IhK,KAAKwB,SAAS,CACZ+K,UAAW,CACTf,WAAY,SACZgB,IAAK,MAEPnC,SAAU,CACRmB,WAAY,SACZF,MAAO,KACPC,MAAO,KACPd,OAAQnD,EAAkBtH,KAAKL,MAAMgQ,uB,qCAO9BtO,GACbrB,KAAKwB,SAAS,CACZ+K,UAAU,CACNC,IAAK,EACLhB,WAAY,UAEhBnB,SAAU,CACRiB,MAAO,EACPC,MAAO,EACPC,WAAY,SACZf,OAAQnD,EAAkBtH,KAAKL,MAAMgQ,uB,+BAKjC,IAAD,OAEHsC,EAAajS,KAAKJ,MAAMgQ,uBAAuB/N,KAAI,SAAE0B,EAAQC,GAC/D,OACE,kBAAC,GAAD,CAAW1B,IAAK0B,EAAOL,KAAMI,EAAQwC,MAAO,EAAKnG,MAAM6K,OAAOjH,GAAQwL,MAAO,YAI7EkD,EAAoBlS,KAAKJ,MAAMoQ,uBAAuBnO,KAAI,SAAE0B,EAAQC,GACtE,OACE,kBAAC,GAAD,CAAW1B,IAAK0B,EAAOL,KAAMI,EAAQwC,MAAO,EAAKnG,MAAM6K,OAAOjH,GAAQwL,MAAO,YAI7EmD,EAAM,OAASnS,KAAKJ,MAAMsK,WAAWmG,OAAS,IAAMrQ,KAAKL,MAAMmF,OAC/DsN,EAAU,aAAepS,KAAKJ,MAAMsK,WAAWH,QAAU,IAAM/J,KAAKJ,MAAMsK,WAAWF,QAAU,IAEnG,OACE,yBAAKqI,IAAKrS,KAAKyP,QACb,yBAAK6C,QAAQ,MAAMC,MAAM,6BAA6BC,oBAAoB,OAAOC,YAAazS,KAAKoP,gBAAiBsD,aAAc1S,KAAKqP,eAAgBvP,UAAU,YAAY6H,MAAO3H,KAAKJ,MAAMsK,WAAWmG,OAAQvL,OAAQ9E,KAAKL,MAAMmF,OAAQ6N,QAASR,GAElP,2BACE,uBAAGS,UAAWR,GAEVH,EAEAC,EAEF,kBAAC,GAAD,CAAMhI,WAAYlK,KAAKJ,MAAMsK,WAAYgC,SAAUlM,KAAKJ,MAAMsM,SAAUrI,MAAO7D,KAAKJ,MAAMiE,QAE1F,kBAAC,GAAD,CAAOqG,WAAYlK,KAAKJ,MAAMsK,WAAYgC,SAAUlM,KAAKJ,MAAMsM,SAAUC,QAASnM,KAAKJ,MAAMuM,UAE7F,kBAAC,GAAD,CAAOjC,WAAYlK,KAAKJ,MAAMsK,WAAY2B,QAAS7L,KAAKJ,MAAMiM,QAASC,MAAO,GAAIC,MAAO/L,KAAKJ,MAAMqQ,sBAEpG,kBAAC,GAAD,CAAQ/F,WAAYlK,KAAKJ,MAAMsK,WAAYO,OAAQzK,KAAKJ,MAAM6K,OAAQvJ,SAAUlB,KAAKL,MAAMuB,WAE3F,kBAAC,GAAD,CAAagJ,WAAYlK,KAAKJ,MAAMsK,WAAYxC,OAAQA,KAExD,kBAAC,GAAD,CAAc6E,UAAWvM,KAAKJ,MAAM2M,UAAWzH,OAAQ9E,KAAKJ,MAAMsK,WAAWpF,SAE7E,kBAAC,GAAD,CAAUuF,SAAUrK,KAAKJ,MAAMyK,SAAU1C,MAAOuC,GAAWvB,UAAW7D,OAAQ9E,KAAKJ,MAAMuQ,gBAAiBjP,SAAUlB,KAAKL,MAAMuB,mB,GArSjHmG,IAAMhH,WCThC6J,I,YCbqB,CACrB2I,aAAc,iCACdC,cAAe,4BACfC,cAAe,uBACfC,aAAc,0BACdC,gBAAiB,mCACjBC,kBAAmB,sCDOIhJ,YA6MZiJ,G,YAnMX,WAAYxT,GAAO,IAAD,8BAChB,4CAAMA,KA0BRyT,cAAgB,SAACjQ,GACb,EAAK3B,SAAS,CACV6R,gBAAgB,IAGpB,EAAKC,UAAUnQ,EAAKjC,SAAUiC,EAAKhC,oBAAqBgC,EAAK/B,qBACtC,EAAKmS,WAAWC,cA9BzC,EAAKD,WAAalM,IAAMqI,YAExB,EAAK9P,MAAQ,CACXK,SAAU,OACViB,SAAU,GACVrB,eAAe,EACfwT,gBAAgB,EAChBI,aAAc,KACdrS,oBAAqB,YACrBgG,QAAS,CACPvD,MAAO,kBACPgI,QAAS,OACTM,QAAS,sBACTjC,WAAYA,IAEd4F,gBAAiB,GACjBC,gBAAiB,GACjB2D,gBAAiB,GACjBC,kBAAmB,GACnBC,WAAY,KAtBE,E,uEAsCR1S,EAAUtB,EAAOwB,GAAqB,IAAD,OAK3CyS,MAFU,OAEC,CACTC,OAAQ,OACRxQ,QAAS,CACP,eAAgB,oBAElByQ,KAAMC,KAAKC,UAAU,CACnB/S,SAAUA,EAAUuS,aAAc7T,EAAOoC,WAAYZ,MAEtD8S,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MACD,SAACrM,GAAY,IAAD,EACR,EAAKrG,UAAL,GACIN,SAAUA,EACVmS,gBAAgB,EAChBI,aAAc7T,EACdwB,oBAAqBA,GAJzB,gCAKoB,GALpB,gCAMqB,EAAKiT,oBAAoBnT,EAAU2G,IANxD,gCAOqB,EAAKyM,oBAAoBpT,EAAU2G,IAPxD,gCAQqB,EAAK0M,iBAAiB1M,EAAO2M,qBARlD,kCASuB,EAAKC,mBAAmB5M,EAAO6M,0BATtD,S,+BAcF,IAAD,OAEL,OAAI1U,KAAKJ,MAAMC,cAEX,yBAAKC,UAAU,gBACdE,KAAKJ,MAAMyT,eAEZ,6BACE,kBAAC,EAAD,CAAQpT,SAAUD,KAAKJ,MAAMK,WAE7B,kBAAC0U,EAAD,CAAOpT,mBAAoBvB,KAAKoT,gBAEhC,yBAAKf,IAAM,SAACkB,GAAiB,EAAKA,WAAaA,GAAezT,UAAU,eACtE,kBAAC8U,EAAA,EAAD,KACI,yBAAK9U,UAAU,WACf,kBAAC,EAAD,CAAOgF,OAAQ9E,KAAKJ,MAAMgU,cAG1B,yBAAKlR,GAAG,YACJ,kBAAC,GAAD,CAAiB0E,QAASpH,KAAKJ,MAAMwH,QAAS0I,gBAAiB9P,KAAKJ,MAAMkQ,gBAAiBC,gBAAiB/P,KAAKJ,MAAMmQ,gBAAiBJ,iBAAkB3P,KAAKJ,MAAMmQ,gBAAgB3H,OAAQlH,SAAUlB,KAAKJ,MAAMsB,SAAU4D,OAAQ9E,KAAKJ,MAAMgU,gBAKzP,yBAAK9T,UAAU,UACb,kBAAC8U,EAAA,EAAD,KACI,yBAAK9U,UAAU,iCACX,kBAAC,EAAD,CAAOuD,UAAWrD,KAAKJ,MAAM8T,gBAAiB7P,MAAO,iBAEzD,yBAAK/D,UAAU,iCACX,kBAAC,EAAD,CAAOuD,UAAWrD,KAAKJ,MAAM+T,kBAAmB9P,MAAO,yBAMnE,6BACE,kBAAC,EAAD,CAAQ5D,SAAUD,KAAKJ,MAAMK,WAC7B,kBAAC0U,EAAD,CAAOpT,mBAAoBvB,KAAKoT,gBAEhC,yBAAKtT,UAAU,YASrB,6BACI,kBAAC+U,EAAD,CAAO7R,kBAAmBhD,KAAK8U,qB,yCAKlB3R,GACjB,IAAIG,EAAU,CAAC,4DAA6D,4DAc5E,MALa,CACXH,KAPQsG,OAAOrD,KAAKjD,EAAI,SAAatB,KACrC,SAASC,GACP,MAAO,CAACwG,EAAiBnF,EAAI,QAAYrB,IAAOqB,EAAKG,EAAQ,IAAIxB,GAAMqB,EAAKG,EAAQ,IAAIxB,OAM1FwB,QAASA,K,uCAMIH,GACf,IAAIG,EAAU,CAAC,kBAAmB,kBAAmB,kBAAmB,kBAAmB,mBAc3F,MALa,CACXH,KAPQsG,OAAOrD,KAAKjD,EAAI,SAAatB,KACrC,SAASC,GACP,MAAO,CAACwG,EAAiBnF,EAAI,QAAYrB,IAAOqB,EAAKG,EAAQ,IAAIxB,GAAMqB,EAAKG,EAAQ,IAAIxB,GAAMqB,EAAKG,EAAQ,IAAIxB,GAAMqB,EAAKG,EAAQ,IAAIxB,GAAMqB,EAAKG,EAAQ,IAAIxB,OAM/JwB,QAVkB,CAAC,gBAAiB,gBAAiB,gBAAiB,gBAAiB,oB,0CAgBvEpC,EAAU2G,GAC5B,IAAI1E,EAAO,GADwB,WAG1B4R,GACL,IAAIvR,EAAQ,EACRwR,EAAM9T,EAAS6T,GACfE,EAAMxL,OAAOrD,KAAKyB,EAAOmN,GA7KxB,gBA6KsCA,IAAMxN,MAAM,EAAE,KAAK3F,KAC9D,SAASC,GACL,MAAO,CAAC0B,IAASqH,KAAKqK,IAAIpT,EAAIqT,UAAU,EAAE,GAAIrT,EAAIqT,UAAU,EAAE,GAAIrT,EAAIqT,UAAU,EAAE,KAAMtN,EAAOmN,GA/K9F,gBA+K4GA,GAAKlT,GAAM+F,EAAOmN,GA9K5H,kBA8K4IA,GAAKlT,GAAM+F,EAAOmN,GA7K9J,kBA6K8KA,GAAKlT,OAG1LqB,EAAKkF,KAAK4M,IARd,IAAK,IAAIF,KAAW7T,EAAW,EAAtB6T,GAWT,OAAO5R,I,0CAGSjC,EAAU2G,GAC9B,IAAI1E,EAAO,GAD0B,WAG5B4R,GACL,IAAIvR,EAAQ,EACRwR,EAAM9T,EAAS6T,GACfE,EAAMxL,OAAOrD,KAAKyB,EAAO3G,EAAS6T,GAAW,KAAK7T,EAAS6T,KAAWlT,KAC1E,SAASC,GACL,MAAO,CAAC0B,IAASqH,KAAKqK,IAAIpT,EAAIqT,UAAU,EAAE,GAAIrT,EAAIqT,UAAU,EAAE,GAAIrT,EAAIqT,UAAU,EAAE,KAAMtN,EAAO3G,EAAS6T,GAAW,KAhM9G,gBAgM4HC,GAAKlT,GAAM+F,EAAO3G,EAAS6T,GAAW,KA/LhK,kBA+LgLC,GAAKlT,GAAM+F,EAAO3G,EAAS6T,GAAW,KA9LtN,kBA8LsOC,GAAKlT,OAGtPqB,EAAKkF,KAAK4M,IARd,IAAK,IAAIF,KAAW7T,EAAW,EAAtB6T,GAWT,OAAO5R,M,GAhMOkE,IAAMhH,WEVJ+U,QACW,cAA7B7F,OAAO8F,SAASC,UAEe,UAA7B/F,OAAO8F,SAASC,UAEhB/F,OAAO8F,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5B,MAAK,SAAA6B,GACjCA,EAAaC,kB","file":"static/js/main.f8ba3502.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\nclass Header extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      authenticated: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"myheader\">\n        <Form>\n          <b>Hello, {this.props.username}&nbsp;</b>\n          <Button variant=\"light\" className=\"btn-white\" type=\"submit\">\n              Logout\n          </Button>\n        </Form>\n      </div>\n\t\t);\n  }\n}\n\nexport default Header","\nexport const USA_STATES =[\n    ['us', 0, ' All states'],\n    ['us-ma', 1, 'Massachusetts'],\n    ['us-wa', 2, 'Washington'],\n    ['us-ca', 3, 'California'],\n    ['us-or', 4, 'Oregon'],\n    ['us-wi', 5, 'Wisconsin'],\n    ['us-me', 6, 'Maine'],\n    ['us-mi', 7, 'Michigan'],\n    ['us-nv', 8, 'Nevada'],\n    ['us-nm', 9, 'New Mexico'],\n    ['us-co', 10, \"Colorado\"],\n    ['us-wy', 11, 'Wyoming'],\n    ['us-ks', 12, 'Kansas'],\n    ['us-ne', 13, 'Nebraska'],\n    ['us-ok', 14, 'Oklahoma'],\n    ['us-mo', 15, 'Missouri'],\n    ['us-il', 16, 'Illinois'],\n    ['us-in', 17, 'Indiana'],\n    ['us-vt', 18, 'Vermont'],\n    ['us-ar', 19, 'Arkansas'],\n    ['us-tx', 20, 'Texas'],\n    ['us-ri', 21, 'Rhode Island'],\n    ['us-al', 22, 'Alabama'],\n    ['us-ms', 23, 'Mississippi'],\n    ['us-nc', 24, 'North Carolina'],\n    ['us-va', 25, 'Virginia'],\n    ['us-ia', 26, 'Iowa'],\n    ['us-md', 27, 'Maryland'],\n    ['us-de', 28, 'Delaware'],\n    ['us-pa', 29, 'Pennsylvania'],\n    ['us-nj', 30, 'New Jersey'],\n    ['us-ny', 31, 'New York'],\n    ['us-id', 32, 'Idaho'],\n    ['us-sd', 33, 'South Dakota'],\n    ['us-ct', 34, 'Connecticut'],\n    ['us-nh', 35, 'New Hampshire'],\n    ['us-ky', 36, 'Kentucky'],\n    ['us-oh', 37, 'Ohio'],\n    ['us-tn', 38, 'Tennessee'],\n    ['us-wv', 39, 'West Virginia'],\n    ['us-dc', 40, 'District of Columbia'],\n    ['us-la', 41, 'Louisiana'],\n    ['us-fl', 42, 'Florida'],\n    ['us-ga', 43, 'Georgia'],\n    ['us-sc', 44, 'South Carolina'],\n    ['us-mn', 45, 'Minnesota'],\n    ['us-mt', 46, 'Montana'],\n    ['us-nd', 47, 'North Dakota'],\n    ['us-az', 48, 'Arizona'],\n    ['us-ut', 49, 'Utah'],\n    ['us-hi', 50, 'Hawaii'],\n    ['us-ak', 51, 'Alaska']\n].sort(function (a, b) {\n    return ('' + a[2]).localeCompare(b[2]);\n})","import React, { Component } from 'react';\nimport { Col, Form, Button } from \"react-bootstrap\";\nimport { USA_STATES } from '../states.js';\n\nconst time_frames = [\n    [0, \"Past 5 years\", \"today 5-y\"],\n    [1, \"Past 12 months\", \"today 12-m\"],\n    [2, \"Past 1 month\", \"today 1-m\"],\n    [3, \"Last 7 days\", \"now 7-d\"],\n]\n\nclass InputComponent extends Component {\t\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.selectedState = this.selectedState.bind(this);\n        this.selectedTimeFrame = this.selectedTimeFrame.bind(this);\n        this.state = {\n            keywords: [],\n            selected_state_name: USA_STATES[0][0],\n            selected_time_frame: time_frames[0][2]\n        };\n    }\n\n    handleClick(event){\n        event.preventDefault();\n        this.props.callbackFromParent(this.state);\n    }\n\n    selectedState(event){\n        this.setState({\n            selected_state_name: event.target.value.split(',')[0]\n        });\n    }\n\n    selectedTimeFrame(event){\n        this.setState({\n            selected_time_frame: event.target.value.split(',')[2]\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            keywords: event.target.value.split(','),\n            username: \"name\",\n        });\n    }\n    \n    render() {\n        let namesList = USA_STATES.map(function(state){\n            return <option key={state[1]} value={state}>{state[2]}</option>;\n        })\n\n        let time_framesList = time_frames.map(function(time_frame){\n            return <option key={time_frame[0]} value={time_frame}>{time_frame[1]}</option>;\n        })\n\n        return (\n            <div className=\"input_bar input-bar-item width100\">\n                <Form onSubmit={this.handleClick}>\n                    <Form.Group className=\"form-inline\">\n                        <Col sm=\"6\">   \n                            <div className=\"input-group\">\n                                <Form.Label className=\"form-inline mr-1\" htmlFor=\"keywords_input\"><h5>Type your keywords:</h5></Form.Label>\n                                <Form.Control className=\"width100 mr-1\" type=\"text\" placeholder=\"Enter keywords\" value={this.state.keywords} onChange={this.handleChange} id=\"keywords_input\" />\n                            </div>\n                        </Col>\n\n                        <Col sm=\"3\">   \n                            <div className=\"input-group\">\n                                <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_timeframe_input\"><h5>Select time frame:</h5></Form.Label>\n\n                                <Form.Control as=\"select\" onChange={this.selectedTimeFrame}  id=\"select_timeframe_input\" className=\"form-control width100 mr-1\">\n                                    {time_framesList}\n                                </Form.Control>                                \n                            </div>\n                        </Col>\n\n                        <Col sm=\"3\">   \n                            <div className=\"input-group\">\n                                <Form.Label className=\"form-inline mr-1\" htmlFor=\"select_state_input\"><h5>Select state:</h5></Form.Label>\n\n                                <Form.Control as=\"select\" onChange={this.selectedState}  id=\"select_state_input\" className=\"form-control width100 mr-1\">\n                                    {namesList}\n                                </Form.Control>                                \n\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                            </div>\n                        </Col>\n                    </Form.Group>\n                </Form>\n            </div>\n\t\t);\n  }\n}\n\nexport default InputComponent","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\n\n\nclass LoginComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChangeLogin = this.handleChangeLogin.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.state = {\n        authenticated: true,\n        username: \"user\",\n        password: \"user\"\n    };\n  }\n\n  handleClick(){\n    if(this.state.username === \"user\" && this.state.password === \"user\"){\n      this.props.callbackFromLogin(this.state);\n    }\n  }\n\n  handleChangeLogin(event) {\n    this.setState({\n        username: event.target.value\n    });\n  }\n\n  handleChangePassword(event) {\n    this.setState({\n        password: event.target.value\n    });\n  }\n\n\n  render() {\n\n    return (\n\t\t<div className=\"loginform\">\n        <h2>Login page</h2>\n        <br/>\n\n        <h5>Username: user</h5>\n        <h5>Password: user</h5>\n        <br/>\n            <Form onSubmit={this.handleClick}>\n              <Form.Group controlId=\"formBasicUsername\">\n                  <Form.Label>Username</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter username\" value={this.state.keywords} onChange={this.handleChangeLogin}/>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.keywords} onChange={this.handleChangePassword}/>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                  Login\n              </Button>\n            </Form>\n\n\t\t</div>\n\t\t);\n\n  }\n\n\n}\n\nexport default LoginComponent","import React, { Component } from 'react';\nimport { Table } from 'react-bootstrap';\n\nclass TableComponent extends Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      keywords: []\n\t\t};\n  }\n\n  render() {\n\n    var tableHeaders = this.props.tableData.headers.map(( entity, index ) => {\n      return (\n        <th key={index}>{entity}</th>\n      );\n    })\n\n    var tableRows = this.props.tableData.data.map(( entity, index ) => {\n      let cells = entity.map((e,i) => {\n        return <td key = {i}>{e}</td>\n      })\n      \n      return (\n        <tr key={index}>\n          <td>{index + 1}</td>\n\n          {cells}\n        </tr>\n      );\n    })\n\n    return (\n\t\t<div className=\"table_div\">\n      <span className=\"center\"><h3>{this.props.title}</h3></span>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Keyword</th>\n            {tableHeaders}\n          </tr>\n        </thead>\n        <tbody>\n          {tableRows}\n        </tbody>\n      </Table>\n\t\t</div>\n\t\t);\n  }\n}\n\nexport default TableComponent","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport highchartsMap from \"highcharts/modules/map\";\nimport mapDataIE from \"@highcharts/map-collection/countries/us/us-all.geo.json\";\nhighchartsMap(Highcharts); // Initialize the map module\n\n// const data = [\n//     ['us-ma', 0],\n//     ['us-wa', 1],\n//     ['us-ca', 2],\n//     ['us-or', 3],\n//     ['us-wi', 4],\n//     ['us-me', 5],\n//     ['us-mi', 6],\n//     ['us-nv', 7],\n//     ['us-nm', 8],\n//     ['us-co', 9],\n//     ['us-wy', 10],\n//     ['us-ks', 11],\n//     ['us-ne', 12],\n//     ['us-ok', 13],\n//     ['us-mo', 14],\n//     ['us-il', 15],\n//     ['us-in', 16],\n//     ['us-vt', 17],\n//     ['us-ar', 18],\n//     ['us-tx', 19],\n//     ['us-ri', 20],\n//     ['us-al', 21],\n//     ['us-ms', 22],\n//     ['us-nc', 23],\n//     ['us-va', 24],\n//     ['us-ia', 25],\n//     ['us-md', 26],\n//     ['us-de', 27],\n//     ['us-pa', 28],\n//     ['us-nj', 29],\n//     ['us-ny', 30],\n//     ['us-id', 31],\n//     ['us-sd', 32],\n//     ['us-ct', 33],\n//     ['us-nh', 34],\n//     ['us-ky', 35],\n//     ['us-oh', 36],\n//     ['us-tn', 37],\n//     ['us-wv', 38],\n//     ['us-dc', 39],\n//     ['us-la', 40],\n//     ['us-fl', 41],\n//     ['us-ga', 42],\n//     ['us-sc', 43],\n//     ['us-mn', 44],\n//     ['us-mt', 45],\n//     ['us-nd', 46],\n//     ['us-az', 47],\n//     ['us-ut', 48],\n//     ['us-hi', 49],\n//     ['us-ak', 50],\n//     ['undefined', 51]\n// ];\n\nconst western_states = [\n  ['us-ca', \"#20e012\"],\n  ['us-or', \"#20e012\"],\n  ['us-id', \"#20e012\"],\n  ['us-mt', \"#20e012\"],\n  ['us-az', \"#20e012\"],\n  ['us-nv', \"#20e012\"],\n  ['us-wa', \"#20e012\"],\n  ['us-ut', \"#20e012\"]\n];\n\nconst central_states = [\n  ['us-wy', \"#BADA55\"],\n  ['us-nd', \"#BADA55\"],\n  ['us-sd', \"#BADA55\"],\n  ['us-co', \"#BADA55\"],\n  ['us-ks', \"#BADA55\"],\n  ['us-ky', \"#BADA55\"],\n  ['us-in', \"#BADA55\"],\n  ['us-wi', \"#BADA55\"],\n  ['us-ne', \"#BADA55\"],\n  ['us-ia', \"#BADA55\"],\n  ['us-mi', \"#BADA55\"],\n  ['us-mo', \"#BADA55\"],\n  ['us-il', \"#BADA55\"],\n  ['us-mn', \"#BADA55\"],\n  ['undefined', \"#BADA55\"]\n];\n\nconst eastern_states = [\n  ['us-oh', \"#003fed\"],\n  ['us-ny', \"#003fed\"],\n  ['us-nc', \"#003fed\"],\n  ['us-vt', \"#003fed\"],\n  ['us-wv', \"#003fed\"],\n  ['us-md', \"#003fed\"],\n  ['us-de', \"#003fed\"],\n  ['us-ri', \"#003fed\"],\n  ['us-ma', \"#003fed\"],\n  ['us-me', \"#003fed\"],\n  ['us-nh', \"#003fed\"],\n  ['us-sc', \"#003fed\"],\n  ['us-va', \"#003fed\"],\n  ['us-nj', \"#003fed\"],\n  ['us-dc', \"#003fed\"],\n  ['us-ct', \"#003fed\"],\n  ['us-pa', \"#003fed\"]\n];\n\nconst southern_states = [\n  ['us-tx', \"#e08a12\"],\n  ['us-nm', \"#e08a12\"],\n  ['us-tn', \"#e08a12\"],\n  ['us-ga', \"#e08a12\"],\n  ['us-fl', \"#e08a12\"],\n  ['us-ar', \"#e08a12\"],\n  ['us-ok', \"#e08a12\"],\n  ['us-la', \"#e08a12\"],\n  ['us-al', \"#e08a12\"],\n  ['us-hi', \"#e08a12\"],\n  ['us-ak', \"#e08a12\"],\n  ['us-ms', \"#e08a12\"]\n];\n\nclass Chart extends React.Component {\n\n  constructor(props) {\n      super(props);\n  \n      this.state = {\n          mapOptions:  {\n              chart: {\n                height: this.props.height,\n                \n                map: \"countries/ie/ie-all\",\n                events: {\n                    drilldown: function(e) {\n                      console.log('from drillDown');\n                    },\n                    drillup: function() {\n                      console.log('from drillUp');\n                    }\n                  }\n              },\n              tooltip: { enabled: true },\n              legend: {\n                layout: \"vertical\",\n                align: \"right\",\n                verticalAlign: \"middle\",\n                enabled: false\n              },\n            \n              title: {\n                text: 'Keyword stats per State'\n              },\n            \n              mapNavigation: {\n                enabled: true,\n                buttonOptions: {\n                  verticalAlign: \"bottom\"\n                }\n              },\n            \n              plotOptions: {\n                map: {\n                  states: {\n\n                    color: \"#126c31\",\n\n                    hover: {\n                      color: \"#000000\",\n                      enabled: true,\n                      brightness: 0.5\n                    },\n                    \n                  }\n                },\n                series:{\n                    point:{\n                        events:{\n                            click: this.setHoverData.bind(this)\n\n                        }\n                    }\n                }\n              },\n            \n              series: [\n                // {\n                //   data: data,\n                //   mapData: mapDataIE,\n                //   name: \"USA\",\n                //   dataLabels: {\n                //       enabled: true,\n                //       format: \"{point.properties.postal-code}\"\n                //   }\n                // },\n\n                {\n                  data: western_states.concat(central_states).concat(eastern_states).concat(southern_states),\n                  keys: ['hc-key', 'color'],\n                  mapData: mapDataIE,\n                  name: \"Western US\",\n                  dataLabels: {\n                      enabled: true,\n                      format: \"{point.properties.postal-code}\"\n                  }\n                },\n\n              ],\n            \n              drilldown: {\n                activeDataLabelStyle: {\n                  color: \"#FFFFFF\",\n                  textDecoration: \"none\",\n                  textOutline: \"1px #000000\"\n                },\n                drillUpButton: {\n                  relativeTo: \"spacingBox\",\n                  position: {\n                    x: 0,\n                    y: 60\n                  }\n                }\n              }\n            }\n      };\n    }\n\n    setHoverData = (e) => {\n      this.props.callbackFromApp(e.point[\"hc-key\"])\n    }\n  \n    render() {\n        return (\n            <div className=\"map_content\">\n                <HighchartsReact\n                    constructorType={\"mapChart\"}\n                    highcharts={Highcharts}\n                    options={this.state.mapOptions} \n                />\n            </div>\n        );\n      }\n  }\n\n  export default Chart\n\n","\n\nexport function add(a, b){\n    return a + b;\n}\n\n// get random int\nexport function get_random(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//get random double\nexport function get_random_double(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        let y = get_random(min_y, max_y);\n        result.push([i, y - s_dev, y + s_dev, y])\n    }\n\n    return result;\n}\n\nexport function scale_data(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_area_data(area_data, ranges, width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<area_data.length; i++){\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\n    }\n\n    return result;\n}\n\n\n/////////////\n// MOCKED DATA\n\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=min_x; i<=max_x; i++){\n        result.push([i, get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n\n// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\n\n\nexport function get_random_colors(number) {\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\n\n    return colors.slice(0, number);\n}\n\nexport function get_box_height(number){\n    if (number === 0){\n        return 0;\n    }\n    return 25*(number + 1) + 10;\n}\n\n\n///////////////////////////////\n// MOCKED DATA with DATES\n\n\nexport function get_random_mock_array_dates(dates, min_y, max_y){\n    let result = [];\n\n    for (let i=0; i<dates.length; i++){\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n\n//     return result;\n// }\n\nexport function scale_data_dates(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\n    let result = [];\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    // console.log(\"%%\")\n    // console.log(width)\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        // console.log(data[i])\n        // if(i<255){\n        //     result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }else{\n        //     result.push([(data[i][0] + 256) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n\n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        \n    }\n\n    // console.log(result)\n\n    return result;\n}\n\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\n    let result = [];\n    \n\n\n\n    for (let i=0; i<dates.length; i++){\n        let s_d1 = get_random(2,8);\n        let s_d2 = get_random(2,8);\n        let random = get_random(min_y, max_y);\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\n    }\n\n    return result;\n}\n\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\n    let result = []\n\n    for(let i=0;i<number;i++){\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\n    }\n\n    return result\n\n}\n\nexport function scale_data_mocks(data_mocks_area_DATES1, data_mocks_area_DATES2, ranges, width, height, number_of_plots){\n    let scaled_data_mocks_area_DATES = []\n    let scaled_data_mocks_area_future_DATES = []\n\n    for (let i=0; i<number_of_plots; i++){\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data_mocks_area_DATES1[i], ranges, width, height));\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, width,  height, 256));\n    }\n\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\n}\n\nexport function get_data_map_area_DATES(data_mocks_area_DATES, array_length_dates, number_of_plots){\n\n    let data_map_area_DATES = []\n\n    for(let i = 0; i<array_length_dates; i++) {\n        let y_data_normal = [];\n        let y_data_min = [];\n        let y_data_max = [];\n        let date;\n      \n        date = data_mocks_area_DATES[0][i][1]\n      \n      \n        for(let j=0; j<number_of_plots; j++) {\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\n        }\n      \n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\n    }\n\n    return data_map_area_DATES;\n}\n\nexport function capitalizeString(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n","\nlet w = 1100;\nlet h = 400;\n\nexport const appConfig = {\n\n\n  dimensions: {\n    box_width: 400,\n    box_height: 120\n  },\n\n  number_of_plots: 5,\n\n  ranges_dates: {\n    max_x: (255 + 48 + 0),\n    min_x: 0,\n    max_y: 100,\n    min_y: 0,\n    // max_x_forecast: 53\n  },\n\n  array_length_dates: 256,\n  array_length_dates_forecast: 48,\n\n  KEYWORDS_URL: \"http://0.0.0.0:5000\",\n\n\n};\n//53","import { capitalizeString } from \"./functions\";\n\n\nfunction make_line (point, width) {\n\n    let line = `M 0 ${point} H ${width}`;\n    return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n}\n\nfunction make_yy_tick(x, y) {\n\n    let line = `M ${x-10} ${y} L ${x} ${y}`;\n    // return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\n    return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n}\n\nexport function get_lines (width, height, lines_number) {\n\n    let frame = height / lines_number;\n\n    let result = [];\n\n    for (let i=lines_number; i<=lines_number; i++){\n        let point = frame * i;\n        result.push(make_line(point,width))\n    }\n\n    return result;\n}\n\nexport function get_y_ticks (height, lines_number) {\n    let result = []\n\n    let frame = height / lines_number;\n\n    for (let i=0; i<=lines_number; i++){\n        let point = frame * i;\n        result.push(make_yy_tick(0,point))\n    }\n\n    return result\n}\n\n\nfunction make_x_tick(x, y) {\n\n    let line = `M ${x} ${y} L ${x} ${y + 10}`;\n    return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\n}\n\nexport function get_ticks(width, height, ticks_number){\n    let result = [];\n\n    let frame = width / (ticks_number - 1);\n\n    for (let i=0; i<ticks_number; i++){\n        let point = frame * i;\n        result.push(make_x_tick(point, height))\n    }\n\n    return result;\n}\n\nfunction make_y_tick(x, y, value) {\n    return `<text x=\"${x}\" textAnchor=\"end\" class=\"plot_ytick\" y=\"${y}\">${value}</text>`\n}\n\nexport function get_y_axis(x, y, height, lines_number) {\n    let result = [];\n\n    let frame = height / lines_number;\n\n    for(let i=0; i<=lines_number; i++){\n        result.push(make_y_tick(-40, height - frame*(i),i * lines_number));\n    }\n\n    let line = `M ${x} ${y} L ${x} ${y + height}`;\n    result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n\n    return result;\n}\n\nexport function prepare_title(title, width, height, x_trans, y_trans){\n    return `<text x=\"${width/2}\" class=\"plot_title\" text-anchor=\"middle\" y=\"${-y_trans/3}\">${title}</text>`\n}\n\n\n\nexport function prepare_x_axis(width, height, ticks_number, data_mock){\n    let result = []\n\n    let length = Object.keys(data_mock).length;\n    let data_frame = Math.floor(length/ticks_number-1);\n\n    let frame = width / (ticks_number - 1)\n    for(let i=0; i<ticks_number; i++){\n        result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n    }\n\n    return result \n\n}\n\nexport function get_x_axis(title, width, height, x_trans, y_trans){\n    let result = []\n    let line = `M 0 ${height} H ${width}`;\n\n    result.push(`<text x=\"${width/2}\" text-anchor=\"middle\" class=\"plot_xaxis_title\" y=\"${height + y_trans/2}\"><tspan>${title}</tspan></text>`)\n    result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n    return result\n}\n\nexport function get_y_axis_label(title, height, x_trans){\n    return `<text x=\"${x_trans}\" text-anchor=\"middle\" transform=\"translate(0,0) rotate(270 25.140625 309.5)\" class=\"plot_yaxis_title\" y=\"${(height + x_trans)/2 - 0.1*x_trans}\"><tspan>${title}</tspan></text>`\n}\n\nexport function get_red_line(dimensions, ranges_dates){\n\n    let x_frame = dimensions.width/ranges_dates.max_x\n\n    let x = x_frame * 256;\n\n\n    return `<g>\n        <path fill=\"none\" class=\"plot_pointer_line\" d=\"M ${x} 0 L ${x} ${dimensions.height}\" stroke-dasharray=\"6\" data-z-index=\"0\"></path>\n    </g>`\n}\n\nexport function get_mark_line(mark_line, height){\n    return `<g transform=\"translate(${mark_line.pos}, 0)\">\n        <path fill=\"none\" data-z-index=\"0\" class=\"plot_mark_line\" d=\"M 0 0 L 0 ${height}\" visibility=\"${mark_line.visibility}\" />         \n    </g>`\n}\n\n// export function get_info_box2(info_box, box_width, box_height){ \n\n//     let y_data = [];\n//     // console.log(info_box.value_y)\n    \n//     if(info_box !== undefined && info_box.value_y !== undefined) {\n//         for(let i=0; i<info_box.colors.length; i++){\n//             y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n//             <text stroke=\"#343640\" opacity=\"1\" x=25 y=${(i + 1)*25 + 25}>Series ${i + 1} value y: ${info_box.value_y[2][i]}</text>`)\n//         }\n//     }\n\n//     let date = formatDate(info_box.value_x)\n    \n//     return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n//         <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n//         <text x=5 y=\"25\" class=\"plot_info_box_header\">Date: ${date}</text>\n//         ${y_data}\n//     </g>`\n// }\n\n// export function get_y_axis(x, y, height){\n//     let line = `M ${x} ${y} L ${x} ${y + height}`;\n//     return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n// }\n\nexport function get_info_box(info_box, box_width, box_height, keywords){ \n\n    let y_data = [];\n    \n    if(info_box !== undefined && info_box.value_y !== undefined) {\n        for(let i=0; i<info_box.colors.length; i++){\n            y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n             <text x=25 y=${(i + 1)*25 + 25}>${capitalizeString(keywords[i])} ${info_box.value_y[2][i].toFixed(1)} (min: ${info_box.value_y[3][i].toFixed(1)} | max: ${info_box.value_y[2][i].toFixed(1)})</text>`)\n        }\n    }\n\n    let date = formatDate(info_box.value_x)\n    \n    return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n        <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n        <g class=\"plot_info_box_header\">\n        <text x=5 y=\"25\">Date: ${date}</text>\n        </g>\n        ${y_data}\n    </g>`\n}\n\nexport function prepare_legend(width, height, colors, keywords){\n\n    let legend = [];\n\n    for(let i=0; i<colors.length; i++){\n        legend.push(`\n        \n        <g data-z-index=\"1\" transform=\"translate(${87*i + 8},3)\">\n            <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n            <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"1.1em\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n        </g>\n\n        `);\n    }\n\n    return `\n        <g transform=\"translate(${width}, ${height})\" class=\"plot_legend\" >\n            ${legend}\n        </g>\n    `\n}\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}\n\nfunction formatDate_monthly(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = mm+'-'+yyyy\n}\n\n// function capitalizeString(string) {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n// }\n","import React from 'react';\nimport { get_ticks, get_x_axis, prepare_x_axis } from \"../utils_dates/graphics\"\n\nclass AxisX extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_x_axis(this.props.x_label, this.props.dimensions.width, this.props.dimensions.height, this.props.dimensions.x_trans, this.props.dimensions.y_trans) }} /> \n            <g dangerouslySetInnerHTML={{ __html: get_ticks(this.props.dimensions.width, this.props.dimensions.height, this.props.ticks) }} />\n            <g dangerouslySetInnerHTML={{ __html: prepare_x_axis(this.props.dimensions.width, this.props.dimensions.height, this.props.ticks, this.props.dates) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default AxisX;","import React from 'react';\nimport { get_y_axis, get_y_axis_label } from \"../utils_dates/graphics\"\n\nclass AxisY extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_y_axis(0, 0, this.props.dimensions.height, this.props.y_number) }} />\n            <g dangerouslySetInnerHTML={{ __html: get_y_axis_label(this.props.y_label, this.props.dimensions.height, this.props.dimensions.x_trans) }} />\n        </g>\n      );\n    }\n  }\n\n  export default AxisY;","import React from 'react';\nimport { prepare_legend } from \"../utils_dates/graphics\"\n\nclass Legend extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: prepare_legend((this.props.dimensions.width)/2 - this.props.dimensions.x_trans, this.props.dimensions.height + this.props.dimensions.y_trans/2, this.props.colors, this.props.keywords) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Legend ;","import React from 'react';\nimport { get_red_line } from \"../utils_dates/graphics\"\n\nclass Static_Line extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_red_line(this.props.dimensions, this.props.ranges) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Static_Line ;","import React from 'react';\nimport { get_mark_line } from \"../utils_dates/graphics\"\n\nclass Pointer_Line extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_mark_line(this.props.mark_line, this.props.height) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Pointer_Line;","import React from 'react';\nimport { get_info_box } from \"../utils_dates/graphics\"\n\nclass Info_Box extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      return (\n        <g>\n            <g dangerouslySetInnerHTML={{ __html: get_info_box(this.props.info_box, this.props.width, this.props.height, this.props.keywords ) }} /> \n        </g>\n      );\n    }\n  }\n\n  export default Info_Box ;","      \nconst lineBottomCommand = point => `L ${point[0]} ${point[3]}`\n\nconst lineUpperCommand = point => `L ${point[0]} ${point[4]}`\n\n// const svgCommand = point => `L ${point[0]} ${point[2]}`\n\n\nconst svgPath = (points, command, color, dash) => {\n\n  const d = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[2]}`\n  : `${acc} ${bezierCommand(point, i, a)}`\n  , '')\n\n  return `<path d=\"${d}\" fill=\"none\" stroke=${color} stroke-width=2  data-z-index=\"0\" stroke-dasharray=${dash} pointer-events=\"none\" />`\n}\n// stroke-dasharray=\"4\"\n\nconst areaPath = (points, command, color) => {\n\n  let d1 = points.reduce((acc, point, i, a) => i === 0\n  ? `M ${point[0]},${point[4]}`\n  : `${acc} ${bezierCommand_upper(point, i, a)}`\n  , '');\n\n\n\n  d1 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][3]}  `;\n\n  let d3 = points.reverse().reduce((acc, point, i, a) => i === 0\n  ? `L ${point[0]},${point[3]}`\n  : `${acc} ${bezierCommand_lower(point, i, a)}`\n  , '');\n\n\n  d3 += ` L ${points[points.length - 1][0]} ${points[points.length - 1][4]}  `;\n\n  let d = d1 + d3;\n//////////////////////////////////////////\n\n  return `<path d=\"${d}\" fill=${color} stroke=${color} stroke-width=2 data-z-index=\"0\" pointer-events=\"none\" opacity=\"0.35\" />`\n}\n\n\n\nconst lineCommand = point => `L ${point[0]} ${point[2]}`\n\n\n    \nexport function area_path(data, color, dash=0){\n\n    let result = [];\n    result.push(svgPath(data, lineCommand, color, dash));\n    result.push(areaPath(data, bezierCommand, color));\n\n    return result;\n}\n\n// export function area_path_future(data, color, dash=0){\n\n//   let result = [];\n\n//   // console.log(data)\n//   result.push(svgPath(data, lineCommand, color, 4 ));\n//   result.push(areaPath(data, bezierCommand, color));\n\n//   return result;\n// }\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// The smoothing ratio\nconst smoothing = 0.2\n\n\n// Properties of a line \n// I:  - pointA (array) [x,y]: coordinates\n//     - pointB (array) [x,y]: coordinates\n// O:  - (object) { length: l, angle: a }: properties of the line\nconst line = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[2] - pointA[2]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n// Position of a control point \n// I:  - current (array) [x, y]: current point coordinates\n//     - previous (array) [x, y]: previous point coordinates\n//     - next (array) [x, y]: next point coordinates\n//     - reverse (boolean, optional): sets the direction\n// O:  - (array) [x,y]: a tuple of coordinates\nconst controlPoint = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[2] + Math.sin(angle) * length\n  return [x, y]\n}\n\n// Create the bezier curve command \n// I:  - point (array) [x,y]: current point coordinates\n//     - i (integer): index of 'point' in the array 'a'\n//     - a (array): complete array of points coordinates\n// O:  - (string) 'C x2,y2 x1,y1 x,y': SVG cubic bezier C command\nconst bezierCommand = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[2]}`\n}\n\n\nconst bezierCommand_upper = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_upper(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint_upper(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[4]}`\n}\n\nconst bezierCommand_lower = (point, i, a) => {\n\n  // start control point\n  const cps = controlPoint_lower(a[i - 1], a[i - 2], point)\n\n  // end control point\n  const cpe = controlPoint_lower(point, a[i - 1], a[i + 1], true)\n  return `C ${cps[0]},${cps[1]} ${cpe[0]},${cpe[1]} ${point[0]},${point[3]}`\n}\n\n\nconst line_lower = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[3] - pointA[3]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\nconst line_upper = (pointA, pointB) => {\n  const lengthX = pointB[0] - pointA[0]\n  const lengthY = pointB[4] - pointA[4]\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst controlPoint_lower = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_lower(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[3] + Math.sin(angle) * length\n  return [x, y]\n}\n\nconst controlPoint_upper = (current, previous, next, reverse) => {\n\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current\n  const n = next || current\n\n  // Properties of the opposed-line\n  const o = line_upper(p, n)\n\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0)\n  const length = o.length * smoothing\n\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length\n  const y = current[4] + Math.sin(angle) * length\n  return [x, y]\n}","import React from 'react';\nimport { area_path } from \"../utils_dates/area_path\";\n\nclass Area_Path extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n      if(this.props.style === \"dash\"){\n        return (\n          <g dangerouslySetInnerHTML={{ __html: area_path(this.props.data, this.props.color, 4) }} />\n        );\n      } else {\n        return (\n          <g dangerouslySetInnerHTML={{ __html: area_path(this.props.data, this.props.color) }} />\n        );\n      }\n\n    }\n  }\n\n  export default Area_Path;","import React from 'react';\nimport { get_lines, prepare_title, get_y_ticks, get_y_axis } from \"../utils_dates/graphics\";\n\nclass Plot extends React.PureComponent {\n    constructor(props) {\n        super(props);\n    }\n    \n    render() {\n        return (\n            <g>\n                {/* <g dangerouslySetInnerHTML={{ __html: get_y_axis(0,0, this.props.dimensions.height) }} /> */}\n                {/* <g dangerouslySetInnerHTML={{ __html: get_lines(this.props.dimensions.width, this.props.dimensions.height, this.props.y_number) }} /> */}\n                <g dangerouslySetInnerHTML={{ __html: get_y_ticks(this.props.dimensions.height, this.props.y_number) }} />\n                <g dangerouslySetInnerHTML={{ __html: prepare_title(this.props.title, this.props.dimensions.width, this.props.dimensions.height, this.props.dimensions.x_trans, this.props.dimensions.y_trans) }} />\n            </g>\n        );\n    }\n  }\n\n  export default Plot;","import React from 'react';\nimport './App.css';\nimport { get_random_colors, get_box_height, get_data_mocks_area_DATES, scale_data_mocks, get_data_map_area_DATES} from './utils_dates/functions'\nimport { appConfig } from './utils_dates/config.js';\n\nimport AxisX from './components/AxisX';\nimport AxisY from './components/AxisY';\nimport Legend from './components/Legend';\nimport Static_Line from './components/Static_Line';\nimport Pointer_Line from './components/Pointer_Line';\nimport Info_Box from './components/Info_Box';\nimport Area_Path from './components/Area_Path';\nimport Plot from './components/Plot';\n\n\nlet dimensions = appConfig.dimensions;\nlet ranges = appConfig.ranges_dates;\nlet number_of_plots = appConfig.number_of_plots;\nlet array_length_dates = appConfig.array_length_dates + appConfig.array_length_dates_forecast;\n\n// dimensions.box_height = get_box_height(number_of_plots);\n\n\nclass Test_Plot_Dates extends React.Component {\t\n\n  constructor(props) {\n    super(props);\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleHoverOff = this.handleHoverOff.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    let x_trans = 85;\n    let y_trans = 85;\n    let width = window.innerWidth*(0.6) - 2*x_trans\n    let height = this.props.height - 2*y_trans\n\n    this.divRef = React.createRef();\n\n    this.state = {\n        title: this.props.options.title,\n        y_number: 10,\n        ticks_number: array_length_dates,\n        x_label: this.props.options.x_label,\n        y_label: this.props.options.y_label,\n        mark_line: {\n          pos: 0,\n          visibility: \"hidden\"\n        },\n        info_box: {\n          pos_x: 0,\n          pos_y: 0,\n          visibility: \"hidden\",\n          colors: get_random_colors(this.props.number_of_series),\n        },\n       scaled_historical_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, ranges, width, height, this.props.number_of_series)[0],\n       scaled_forecasted_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, ranges, width, height, this.props.number_of_series)[1],\n       data_map_area_DATES: this.get_data_map_area_DATES(this.props.historical_data, this.props.forecasted_data, array_length_dates, this.props.number_of_series),\n       colors: this.get_random_colors(this.props.number_of_series),\n       info_box_height: this.get_box_height(this.props.number_of_series),\n       number: this.props.number_of_series,\n       dimensions: {\n        width2: width,\n        width: width/1.1,\n        height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n       }\n    };\n  }\n\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.divRef.current.focus();\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  updateWindowDimensions() {\n    \n    let div_width2 = this.divRef.current.clientWidth;\n    let div_width = div_width2 - 2*85;\n    let height = this.props.height - 2*85;\n\n    this.setState({\n      dimensions: {\n        width2: div_width2,\n        width: div_width,\n        height: this.props.height - 2*85,\n        x_trans: 85,\n        y_trans: 85,\n       },\n       scaled_historical_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, ranges, div_width, height, this.props.number_of_series)[0],\n       scaled_forecasted_data: this.scale_data_mocks(this.props.historical_data, this.props.forecasted_data, ranges, div_width, height, this.props.number_of_series)[1],\n       \n    });\n  }\n\n  scale_data_mocks(data, forecasted_data, ranges, width, height , number_of_series){\n    return scale_data_mocks(data, forecasted_data, ranges, width, height , number_of_series)\n  }\n\n  get_data_map_area_DATES(data, forecasted_data, array_length_dates, number_of_series){\n    return get_data_map_area_DATES(get_data_mocks_area_DATES(data, forecasted_data, number_of_series), array_length_dates, number_of_series)\n  }\n\n  get_random_colors(number_of_series){\n    return get_random_colors(number_of_series)\n  }\n\n  get_box_height(number_of_series){\n    return get_box_height(number_of_series)\n  }\n\n\n  handleMouseMove(event) {\n    var e = event.target;\n    var dim = e.getBoundingClientRect();\n    var x = event.clientX - dim.left - this.state.dimensions.x_trans;\n    var y = event.clientY - dim.top - this.state.dimensions.y_trans;\n\n    if(x >= 0 && y >= 0 && x <= this.state.dimensions.width && y <= this.state.dimensions.height){\n\n      let x_diff = ranges.max_x - ranges.min_x;  \n      let x_frame = this.state.dimensions.width/x_diff;\n      let key = Math.round((x)/x_frame);\n\n      if (this.state.data_map_area_DATES[key] !== undefined){\n\n        let left_index = Math.round((ranges.max_x - ranges.min_x)/2) - 1;\n        let right_index = Math.round((ranges.max_x - ranges.min_x)/2) + 1;\n\n        //keys left\n        for(let i=ranges.min_x; i<=key; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i\n          }\n        }\n\n        //keys right\n        for(let i=key; i<=ranges.max_x; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            right_index = i\n          }\n        }\n    \n        //index difference\n        this.setState({\n          mark_line: {\n            pos: x,  \n          },\n          info_box: {\n            pos_x: x,\n            pos_y: y,\n            value_x: this.state.data_map_area_DATES[key][1],\n            value_y: this.state.data_map_area_DATES[key],\n            colors: get_random_colors(this.props.number_of_series)\n          }\n        })\n        if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n          this.setState({\n            mark_line: {\n              pos: x\n            }\n          })\n        }\n      } else if (key !== undefined){\n////////////////////////////\n\n        let left_index = key - 1;\n        let right_index = key + 1;\n        \n        //keys left\n        for (let i=key; i>=0; i--) {\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i;\n            break;\n          }\n        }\n\n        //keys right\n        for (let i=key; i<=ranges.max_x; i++) {\n          if(this.state.data_map_area_DATES[i] !== undefined) {\n            right_index = i;\n            break;\n          }\n        }\n\n        //index difference\n        let left_diff = key - left_index;\n        let right_diff = right_index - key;\n\n\n        if((this.state.data_map_area_DATES[left_index] !== undefined) && (this.state.data_map_area_DATES[right_index] !== undefined)){\n          if (left_diff<=right_diff ) {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          } else {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          }\n\n        }\n/////////////////\n\n      }\n    } else if (x > this.state.dimensions.width || y > this.state.dimensions.height || x < this.state.dimensions.x_trans || y < this.state.dimensions.y_trans){\n      this.setState({\n        mark_line: {\n          visibility: \"hidden\",\n          pos: 9999\n        },\n        info_box: {\n          visibility: \"hidden\",\n          pos_x: 9999,\n          pos_y: 9999,\n          colors: get_random_colors(this.props.number_of_series)\n        }\n      })\n    }\n  }\n  \n\n  handleHoverOff(event) {\n    this.setState({\n      mark_line:{\n          pos: 0,\n          visibility: \"hidden\"\n      },\n      info_box: {\n        pos_x: 0,\n        pos_y: 0,\n        visibility: \"hidden\",\n        colors: get_random_colors(this.props.number_of_series)\n      }\n    })\n  }\n\n  render() {\n\n    let area_paths = this.state.scaled_historical_data.map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"none\"} />\n      );\n    });\n\n    let area_paths_future = this.state.scaled_forecasted_data.map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"dash\"} />\n      );\n    });\n\n    let v_b = \"0 0 \" + this.state.dimensions.width2 + \" \" + this.props.height;\n    let v_trans = \"translate(\" + this.state.dimensions.x_trans + \",\" + this.state.dimensions.y_trans + \")\";\n\n    return (\n      <div ref={this.divRef}>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" onMouseMove={this.handleMouseMove} onMouseLeave={this.handleHoverOff} className=\"test_plot\" width={this.state.dimensions.width2} height={this.props.height} viewBox={v_b}>\n          {/* <rect fill=\"#ffffff\" className=\"\" x=\"0\" y=\"0\" width={dimensions.width} height={dimensions.height} rx=\"0\" ry=\"0\"></rect>  */}\n            <g>\n              <g transform={v_trans}>\n\n                { area_paths }\n\n                { area_paths_future }\n                \n                <Plot dimensions={this.state.dimensions} y_number={this.state.y_number} title={this.state.title} />\n\n                <AxisY dimensions={this.state.dimensions} y_number={this.state.y_number} y_label={this.state.y_label} />\n\n                <AxisX dimensions={this.state.dimensions} x_label={this.state.x_label} ticks={10} dates={this.state.data_map_area_DATES} />\n                \n                <Legend dimensions={this.state.dimensions} colors={this.state.colors} keywords={this.props.keywords} />\n\n                <Static_Line dimensions={this.state.dimensions} ranges={ranges} />\n\n                <Pointer_Line mark_line={this.state.mark_line} height={this.state.dimensions.height} />\n\n                <Info_Box info_box={this.state.info_box} width={dimensions.box_width} height={this.state.info_box_height} keywords={this.props.keywords}  />\n                \n              </g>\n            </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default Test_Plot_Dates;\n","import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css'\n\nimport { appConfig } from './config.js';\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\n\n\nclass App extends React.Component {\n  \n    constructor(props){\n      super(props);\n\n      this.divElement = React.createRef();\n\n      this.state = {\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        selected_time_frame: \"today 5-y\",\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n        historical_data: [],\n        forecasted_data: [],\n        rate_table_data: [],\n        growth_table_data: [],\n        div_height: 570\n      };\n\n    }\n\n    fetchCallback = (data) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(data.keywords, data.selected_state_name, data.selected_time_frame)\n                const height = this.divElement.clientHeight;\n        // this.setState({ height });\n\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n        // let url = appConfig.KEYWORDS_NEW;\n        let url = \"/new\"\n        \n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: keywords, region_state: state, time_frame: selected_time_frame\n          }),\n        }).then(res => res.json())\n            .then(\n            (result) => {\n                this.setState({\n                    keywords: keywords,\n                    displayResults: true,\n                    region_state: state,\n                    selected_time_frame: selected_time_frame,\n                    displayResults: true,\n                    historical_data: this.get_historical_data(keywords, result),\n                    forecasted_data: this.get_forecasted_data(keywords, result),\n                    rate_table_data: this.getRateTableData(result.growth_rate_result),\n                    growth_table_data: this.getGrowthTableData(result.projected_growth_result)\n                });\n            })\n    }\n    \n    render() {\n\n        if (this.state.authenticated) {\n        return (\n            <div className=\"main_results\">\n            {this.state.displayResults ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div ref={ (divElement) => { this.divElement = divElement } } className=\"results_div\">\n                <Row> \n                    <div className=\"map_div\">\n                    <Chart height={this.state.div_height} />\n                    {/* <Chart callbackFromApp={this.mapCallback}/> */}\n                    </div>\n                    <div id=\"plot_div\"> \n                        <Test_Plot_Dates options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} />\n                        {/* <Plot options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} /> */}\n                    </div>\n                </Row> \n              </div>\n              <div className=\"tables\">\n                <Row>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.rate_table_data} title={\"Growth Rate\"}/>\n                    </div>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.growth_table_data} title={\"Projected growth\"} />\n                    </div>\n                </Row>\n              </div>\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"intro\">\n              </div>\n            </div>\n            )\n          }\n            </div>\n            );\n        } else{\n        return (\n        <div>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n        </div>);      \n        }\n    }\n    \n      getGrowthTableData(data){\n        let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"]\n        \n        \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n    \n      getRateTableData(data){\n        let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"]\n        let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: table_headers\n        }\n    \n        return result;\n      }\n\n      get_historical_data(keywords, result){\n        let data = []\n\n        for (let keyword in keywords) {  \n            let index = 0;\n            let k_w = keywords[keyword]\n            let arr = Object.keys(result[k_w][MA_Day_5+k_w]).slice(4,260).map(\n            function(key){\n                return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n            );\n            data.push(arr)\n        }\n\n        return data;\n    }\n    \n    get_forecasted_data(keywords, result){\n    let data = []\n\n    for (let keyword in keywords) {  \n        let index = 0;\n        let k_w = keywords[keyword]\n        let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n        function(key){\n            return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n        }\n        );\n        data.push(arr)\n    }\n\n    return data;\n    }\n}\n  \n  \nexport default App;\n","\nexport const appConfig = {\n    KEYWORDS_URL: \"http://localhost:5000/keywords\",\n    KEYWORDS_URL3: \"http://localhost:5000/all\",\n    KEYWORDS_URL2: \"http://0.0.0.0:5000/\",\n    KEYWORDS_NEW: \"http://0.0.0.0:5000/new\",\n    RATE_RANKER_URL: \"http://localhost:5000/rateranker\",\n    GROWTH_RANKER_URL: \"http://localhost:5000/growthranker\"\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}