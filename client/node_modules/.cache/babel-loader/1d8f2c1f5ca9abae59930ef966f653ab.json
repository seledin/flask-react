{"ast":null,"code":"import React from'react';import{get_y_axis,get_y_axis_label}from\"../utils_dates/graphics\";// class AxisY extends React.PureComponent {\n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//       return (\n//         <g>\n//             <g dangerouslySetInnerHTML={{ __html: get_y_axis(0, 0, this.props.dimensions.height, this.props.lower_bound/10, this.props.upper_bound/10) }} />\n//             <g dangerouslySetInnerHTML={{ __html: get_y_axis_label(this.props.y_label, this.props.dimensions.height, this.props.dimensions.x_trans) }} />\n//         </g>\n//       );\n//     }\n//   }\n//   export default AxisY;\nexport var AxisY=function AxisY(props){console.log(props);var result=[];var upper_index=props.lower_bound/10;var lower_index=props.lower_bound/10;var lines_number=upper_index-lower_index;var frame=props.dimensions.height/lines_number;var x=0;var y=0;var difference=Math.abs(lower_index);// for(let i=0; i<=lines_number; i++){\n//     result.push(make_y_tick(-20, height - frame*(i),i * 10));\n// }\nfor(var i=lower_index;i<=upper_index;i++){result.push(make_y_tick(-20,props.dimensions.height-frame*(i-lower_index),i*10));}var line=\"M \".concat(x,\" \").concat(y,\" L \").concat(x,\" \").concat(y+props.dimensions.height);result.push(\"<path d=\\\"\".concat(line,\"\\\" fill=\\\"none\\\" class=\\\"plot_line\\\" data-z-index=\\\"0\\\" />\"));// return result;\n// return (\n//   // <g>\n//   //   <g transform={`translate(${-(props.dimensions.x_trans/2 + 10)},${props.dimensions.height/2})`}><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>{props.y_label}</tspan></text></g>\n//     {result}\n//   // </g>\n// )\nreturn result;};export default AxisY;// export function get_y_axis_label(title, height, x_trans){\n//     return `<g transform=\"translate(${-(x_trans/2 + 10)},${height/2})\"><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>${title}</tspan></text></g>`\n// }\n// export function get_y_axis(x, y, height, lower_index, upper_index) {\n//   let result = [];\n//   let lines_number = upper_index - lower_index;\n//   let frame = height / lines_number;\n//   // let lower_index = 10 - lines_number;\n//   let difference = Math.abs(lower_index)\n//   // for(let i=0; i<=lines_number; i++){\n//   //     result.push(make_y_tick(-20, height - frame*(i),i * 10));\n//   // }\n//   for(let i=lower_index; i<=upper_index; i++){\n//       result.push(make_y_tick(-20, height - frame*(i -lower_index),i * 10));\n//   }\n//   let line = `M ${x} ${y} L ${x} ${y + height}`;\n//   result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n//   return result;\n// }\nfunction make_y_tick(x,y,value){return\"<text x=\\\"\".concat(x,\"\\\" text-anchor=\\\"end\\\" class=\\\"plot_ytick\\\" y=\\\"\").concat(y,\"\\\">\").concat(value,\"</text>\");}","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/components/plot3/src/plot/parts/AxisY.js"],"names":["React","get_y_axis","get_y_axis_label","AxisY","props","console","log","result","upper_index","lower_bound","lower_index","lines_number","frame","dimensions","height","x","y","difference","Math","abs","i","push","make_y_tick","line","value"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,yBAA7C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAC,KAAK,CAAI,CAC5BC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAEA,GAAIG,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,WAAW,CAAGJ,KAAK,CAACK,WAAN,CAAkB,EAApC,CACA,GAAIC,CAAAA,WAAW,CAAGN,KAAK,CAACK,WAAN,CAAkB,EAApC,CAEA,GAAIE,CAAAA,YAAY,CAAGH,WAAW,CAAGE,WAAjC,CAEA,GAAIE,CAAAA,KAAK,CAAGR,KAAK,CAACS,UAAN,CAAiBC,MAAjB,CAA0BH,YAAtC,CAEA,GAAII,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIC,CAAAA,CAAC,CAAG,CAAR,CAEA,GAAIC,CAAAA,UAAU,CAAGC,IAAI,CAACC,GAAL,CAAST,WAAT,CAAjB,CAEA;AACA;AACA;AAEA,IAAI,GAAIU,CAAAA,CAAC,CAACV,WAAV,CAAuBU,CAAC,EAAEZ,WAA1B,CAAuCY,CAAC,EAAxC,CAA2C,CACvCb,MAAM,CAACc,IAAP,CAAYC,WAAW,CAAC,CAAC,EAAF,CAAMlB,KAAK,CAACS,UAAN,CAAiBC,MAAjB,CAA0BF,KAAK,EAAEQ,CAAC,CAAEV,WAAL,CAArC,CAAuDU,CAAC,CAAG,EAA3D,CAAvB,EACH,CAED,GAAIG,CAAAA,IAAI,aAAQR,CAAR,aAAaC,CAAb,eAAoBD,CAApB,aAAyBC,CAAC,CAAGZ,KAAK,CAACS,UAAN,CAAiBC,MAA9C,CAAR,CACAP,MAAM,CAACc,IAAP,qBAAwBE,IAAxB,gEAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAOhB,CAAAA,MAAP,CACD,CArCM,CAuCP,cAAeJ,CAAAA,KAAf,CAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA,QAASmB,CAAAA,WAAT,CAAqBP,CAArB,CAAwBC,CAAxB,CAA2BQ,KAA3B,CAAkC,CAChC,0BAAmBT,CAAnB,4DAAiEC,CAAjE,eAAuEQ,KAAvE,YACD","sourcesContent":["import React from 'react';\nimport { get_y_axis, get_y_axis_label } from \"../utils_dates/graphics\"\n\n// class AxisY extends React.PureComponent {\n//     constructor(props) {\n//         super(props);\n//     }\n    \n//     render() {\n//       return (\n//         <g>\n//             <g dangerouslySetInnerHTML={{ __html: get_y_axis(0, 0, this.props.dimensions.height, this.props.lower_bound/10, this.props.upper_bound/10) }} />\n//             <g dangerouslySetInnerHTML={{ __html: get_y_axis_label(this.props.y_label, this.props.dimensions.height, this.props.dimensions.x_trans) }} />\n//         </g>\n//       );\n//     }\n//   }\n\n//   export default AxisY;\n\n\n\n\n\nexport const AxisY = props => {\n  console.log(props)\n\n  let result = [];\n  let upper_index = props.lower_bound/10;\n  let lower_index = props.lower_bound/10;\n\n  let lines_number = upper_index - lower_index;\n\n  let frame = props.dimensions.height / lines_number;\n\n  let x = 0;\n  let y = 0;\n\n  let difference = Math.abs(lower_index)\n\n  // for(let i=0; i<=lines_number; i++){\n  //     result.push(make_y_tick(-20, height - frame*(i),i * 10));\n  // }\n\n  for(let i=lower_index; i<=upper_index; i++){\n      result.push(make_y_tick(-20, props.dimensions.height - frame*(i -lower_index),i * 10));\n  }\n\n  let line = `M ${x} ${y} L ${x} ${y + props.dimensions.height}`;\n  result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n\n  // return result;\n\n  // return (\n  //   // <g>\n  //   //   <g transform={`translate(${-(props.dimensions.x_trans/2 + 10)},${props.dimensions.height/2})`}><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>{props.y_label}</tspan></text></g>\n  //     {result}\n  //   // </g>\n  // )\n\n  return result;\n};\n\nexport default AxisY\n\n// export function get_y_axis_label(title, height, x_trans){\n//     return `<g transform=\"translate(${-(x_trans/2 + 10)},${height/2})\"><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>${title}</tspan></text></g>`\n// }\n\n// export function get_y_axis(x, y, height, lower_index, upper_index) {\n//   let result = [];\n\n//   let lines_number = upper_index - lower_index;\n\n//   let frame = height / lines_number;\n\n//   // let lower_index = 10 - lines_number;\n\n//   let difference = Math.abs(lower_index)\n\n//   // for(let i=0; i<=lines_number; i++){\n//   //     result.push(make_y_tick(-20, height - frame*(i),i * 10));\n//   // }\n\n//   for(let i=lower_index; i<=upper_index; i++){\n//       result.push(make_y_tick(-20, height - frame*(i -lower_index),i * 10));\n//   }\n\n//   let line = `M ${x} ${y} L ${x} ${y + height}`;\n//   result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n\n//   return result;\n// }\n\nfunction make_y_tick(x, y, value) {\n  return `<text x=\"${x}\" text-anchor=\"end\" class=\"plot_ytick\" y=\"${y}\">${value}</text>`\n}\n"]},"metadata":{},"sourceType":"module"}