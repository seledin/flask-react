{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/App.js\";\nimport React from 'react';\nimport Header from \"./components/Header\";\nimport Input from './components/Input';\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css';\nimport { appConfig } from './config.js';\nimport TodoApp from './TodoApp';\nlet dimensions = appConfig.dimensions;\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props); // this.divElement = React.createRef();\n\n    this.fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n      this.setState({\n        displayResults: false\n      });\n      this.fetchData(keywords, selected_state_name, selected_time_frame); // const height = this.divElement.clientHeight;\n      // this.setState({ height });\n    };\n\n    this.myInput = React.createRef();\n    this.state = {\n      username: \"user\",\n      keywords: [],\n      authenticated: true,\n      displayResults: false,\n      region_state: \"US\",\n      selected_time_frame: \"today 5-y\",\n      options: {\n        title: \"Trends Forecast\",\n        x_label: \"Date\",\n        y_label: \"Search interest (%)\",\n        dimensions: dimensions\n      },\n      historical_data: [],\n      forecasted_data: [],\n      rate_table_data: [],\n      growth_table_data: [],\n      div_height: 570\n    };\n  }\n\n  fetchData(keywords, state, selected_time_frame) {\n    let url = appConfig.KEYWORDS_NEW; // let url = \"/new\"\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        keywords: keywords,\n        region_state: state,\n        time_frame: selected_time_frame\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        keywords: keywords,\n        displayResults: true,\n        region_state: state,\n        selected_time_frame: selected_time_frame,\n        displayResults: true,\n        historical_data: this.get_historical_data(keywords, result),\n        forecasted_data: this.get_forecasted_data(keywords, result),\n        rate_table_data: this.getRateTableData(result.growth_rate_result),\n        growth_table_data: this.getGrowthTableData(result.projected_growth_result)\n      });\n    });\n  }\n\n  componentDidMount() {\n    // this.myInput.current.focus();\n    console.log(\"app\");\n    console.log(this.myInput.current);\n  }\n\n  render() {\n    if (this.state.authenticated) {\n      return React.createElement(\"div\", {\n        className: \"main_results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.displayResults ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"results_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"map_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        height: this.state.div_height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        ref: this.myInput,\n        id: \"plot_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Test_Plot_Dates, {\n        options: this.state.options,\n        historical_data: this.state.historical_data,\n        forecasted_data: this.state.forecasted_data,\n        number_of_series: this.state.forecasted_data.length,\n        keywords: this.state.keywords,\n        height: this.state.div_height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"tables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.rate_table_data,\n        title: \"Growth Rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.growth_table_data,\n        title: \"Projected growth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(TodoApp, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Login, {\n        callbackFromLogin: this.toLoginCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }));\n    }\n  }\n\n  getGrowthTableData(data) {\n    let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: headers\n    };\n    return result;\n  }\n\n  getRateTableData(data) {\n    let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"];\n    let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: table_headers\n    };\n    return result;\n  }\n\n  get_historical_data(keywords, result) {\n    let data = [];\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword];\n      let arr = Object.keys(result[k_w][MA_Day_5 + k_w]).slice(4, 260).map(function (key) {\n        return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7), key.substring(8, 10)), result[k_w][MA_Day_5 + k_w][key], result[k_w][LOWER_BAND + k_w][key], result[k_w][UPPER_BAND + k_w][key]];\n      });\n      data.push(arr);\n    }\n\n    return data;\n  }\n\n  get_forecasted_data(keywords, result) {\n    let data = [];\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword];\n      let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(function (key) {\n        return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7), key.substring(8, 10)), result[keywords[keyword] + \"F\"][MA_Day_5 + k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND + k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND + k_w][key]];\n      });\n      data.push(arr);\n    }\n\n    return data;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/App.js"],"names":["React","Header","Input","Row","Col","Login","Table","Chart","Test_Plot_Dates","capitalizeString","appConfig","TodoApp","dimensions","MA_Day_5","LOWER_BAND","UPPER_BAND","App","Component","constructor","props","fetchCallback","keywords","selected_state_name","selected_time_frame","setState","displayResults","fetchData","myInput","createRef","state","username","authenticated","region_state","options","title","x_label","y_label","historical_data","forecasted_data","rate_table_data","growth_table_data","div_height","url","KEYWORDS_NEW","fetch","method","headers","body","JSON","stringify","time_frame","then","res","json","result","get_historical_data","get_forecasted_data","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","componentDidMount","console","log","current","render","length","toLoginCallback","data","arr","Object","keys","map","key","table_headers","keyword","index","k_w","slice","Date","UTC","substring","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css'\n\nimport { appConfig } from './config.js';\n\nimport TodoApp from './TodoApp'\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\n\n\nclass App extends React.Component {\n  \n    constructor(props){\n      super(props);\n\n      // this.divElement = React.createRef();\n      this.myInput = React.createRef()\n\n      this.state = {\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        selected_time_frame: \"today 5-y\",\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n        historical_data: [],\n        forecasted_data: [],\n        rate_table_data: [],\n        growth_table_data: [],\n        div_height: 570\n      };\n\n    }\n\n    fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(keywords, selected_state_name, selected_time_frame)\n                // const height = this.divElement.clientHeight;\n        // this.setState({ height });\n\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n        let url = appConfig.KEYWORDS_NEW;\n        // let url = \"/new\"\n        \n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: keywords, region_state: state, time_frame: selected_time_frame\n          }),\n        }).then(res => res.json())\n            .then(\n            (result) => {\n                this.setState({\n                    keywords: keywords,\n                    displayResults: true,\n                    region_state: state,\n                    selected_time_frame: selected_time_frame,\n                    displayResults: true,\n                    historical_data: this.get_historical_data(keywords, result),\n                    forecasted_data: this.get_forecasted_data(keywords, result),\n                    rate_table_data: this.getRateTableData(result.growth_rate_result),\n                    growth_table_data: this.getGrowthTableData(result.projected_growth_result)\n                });\n            })\n    }\n\n    componentDidMount () {\n      // this.myInput.current.focus();\n      console.log(\"app\")\n      console.log(this.myInput.current)\n    }\n    \n    render() {\n\n        if (this.state.authenticated) {\n        return (\n            <div className=\"main_results\">\n            {this.state.displayResults ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"results_div\">\n                <Row> \n                    <div className=\"map_div\">\n                      <Chart height={this.state.div_height} />\n                      {/* <Chart callbackFromApp={this.mapCallback}/> */}\n                    </div>\n                    <div ref={this.myInput} id=\"plot_div\"> \n                        <Test_Plot_Dates options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} />\n                        {/* <Plot options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} /> */}\n                    </div>\n                </Row> \n              </div>\n              <div className=\"tables\">\n                <Row>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.rate_table_data} title={\"Growth Rate\"}/>\n                    </div>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.growth_table_data} title={\"Projected growth\"} />\n                    </div>\n                </Row>\n              </div>\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n              <TodoApp />\n\n              <div className=\"intro\">\n              </div>\n            </div>\n            )\n          }\n            </div>\n            );\n        } else{\n        return (\n        <div>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n        </div>);      \n        }\n    }\n    \n      getGrowthTableData(data){\n        let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"]\n        \n        \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n    \n      getRateTableData(data){\n        let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"]\n        let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: table_headers\n        }\n    \n        return result;\n      }\n\n      get_historical_data(keywords, result){\n        let data = []\n\n        for (let keyword in keywords) {  \n            let index = 0;\n            let k_w = keywords[keyword]\n            let arr = Object.keys(result[k_w][MA_Day_5+k_w]).slice(4,260).map(\n            function(key){\n                return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n            );\n            data.push(arr)\n        }\n\n        return data;\n    }\n    \n    get_forecasted_data(keywords, result){\n    let data = []\n\n    for (let keyword in keywords) {  \n        let index = 0;\n        let k_w = keywords[keyword]\n        let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n        function(key){\n            return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n        }\n        );\n        data.push(arr)\n    }\n\n    return data;\n    }\n}\n  \n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}