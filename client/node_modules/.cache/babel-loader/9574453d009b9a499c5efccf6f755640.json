{"ast":null,"code":"import _classCallCheck from\"/Users/marcin/workspace/react/flask-react-app/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/marcin/workspace/react/flask-react-app/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/marcin/workspace/react/flask-react-app/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/marcin/workspace/react/flask-react-app/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/marcin/workspace/react/flask-react-app/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/marcin/workspace/react/flask-react-app/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./App.css';import{get_random_colors as _get_random_colors,get_box_height as _get_box_height,get_data_mocks_area_DATES,scale_data_mocks as _scale_data_mocks,get_data_map_area_DATES as _get_data_map_area_DATES,get_min_value,get_max_value}from'./utils/functions';import{appConfig}from'./utils/config.js';import AxisX from'./parts/AxisX';import AxisY from'./parts/AxisY';import Legend from'./parts/Legend';import Static_Line from'./parts/Static_Line';import Pointer_Line from'./parts/Pointer_Line';import Info_Box from'./parts/Info_Box';import Area_Path from'./parts/Area_Path';import Plot from'./parts/Plot';import'./css/plot.css';var dimensions=appConfig.dimensions;var array_length_dates=appConfig.array_length_dates+appConfig.array_length_dates_forecast;export var KeywordPlot=/*#__PURE__*/function(_React$PureComponent){_inherits(KeywordPlot,_React$PureComponent);function KeywordPlot(props){var _this;_classCallCheck(this,KeywordPlot);_this=_possibleConstructorReturn(this,_getPrototypeOf(KeywordPlot).call(this,props));_this.handleMouseMove=_this.handleMouseMove.bind(_assertThisInitialized(_this));_this.handleHoverOff=_this.handleHoverOff.bind(_assertThisInitialized(_this));_this.updateWindowDimensions=_this.updateWindowDimensions.bind(_assertThisInitialized(_this));var x_trans_left=85;var y_trans_up=85;var y_trans_bottom=85;var width=window.innerWidth*0.6-2*x_trans_left;var height=_this.props.plot_settings.height-y_trans_up-y_trans_bottom;_this.divRef=React.createRef();var min_y=get_min_value(_this.props.data.historical_data);var max_y=get_max_value(_this.props.data.historical_data);_this.state={title:_this.props.plot_settings.title,x_label:_this.props.plot_settings.x_label,y_label:_this.props.plot_settings.y_label,mark_line:{pos:0,visibility:\"hidden\"},info_box:{pos_x:0,pos_y:0,visibility:\"hidden\",colors:_get_random_colors(_this.props.plot_settings.number_of_series)},scaled_data:_this.scale_data_mocks(_this.props.data,_this.props.plot_settings.ranges,width,height,_this.props.plot_settings.number_of_series),data_map_area_DATES:_this.get_data_map_area_DATES(_this.props.data.historical_data,_this.props.data.forecasted_data,array_length_dates,_this.props.plot_settings.number_of_series),colors:_this.get_random_colors(_this.props.plot_settings.number_of_series),info_box_height:_this.get_box_height(_this.props.plot_settings.number_of_series),dimensions:{svg_width:width,width:width/1.1,height:height,x_trans:x_trans_left,y_trans:y_trans_up,y_trans_bottom:y_trans_bottom,historical_data_length:appConfig.array_length_dates,forecasted_data_length:appConfig.array_length_dates_forecast},min_y:get_min_value(_this.props.data.historical_data),max_y:get_max_value(_this.props.data.historical_data),ticks:12};return _this;}_createClass(KeywordPlot,[{key:\"componentDidMount\",value:function componentDidMount(){this.updateWindowDimensions();window.addEventListener('resize',this.updateWindowDimensions);this.divRef.current.focus();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){window.removeEventListener('resize',this.updateWindowDimensions);}},{key:\"scaling\",value:function scaling(){}},{key:\"updateWindowDimensions\",value:function updateWindowDimensions(){var svg_width=this.divRef.current.clientWidth;var x_trans_left=this.props.plot_settings.x_trans_left;var y_trans_up=this.props.plot_settings.y_trans_up;var x_trans_right=this.props.plot_settings.x_trans_right;var y_trans_bottom=this.props.plot_settings.y_trans_bottom;var plot_width=svg_width-x_trans_left-x_trans_right;var plot_height=this.props.plot_settings.height-y_trans_up-y_trans_bottom;this.setState({dimensions:{svg_width:svg_width,width:plot_width,height:plot_height,x_trans:x_trans_left,y_trans:y_trans_up,x_trans_right:x_trans_right,y_trans_bottom:y_trans_bottom,historical_data_length:appConfig.array_length_dates,forecasted_data_length:appConfig.array_length_dates_forecast},scaled_data:this.scale_data_mocks(this.props.data,this.props.plot_settings.ranges,plot_width,plot_height,this.props.plot_settings.number_of_series)});}},{key:\"scale_data_mocks\",value:function scale_data_mocks(data,ranges,width,height,number_of_series){return _scale_data_mocks(data,ranges,width,height,number_of_series);}},{key:\"get_data_map_area_DATES\",value:function get_data_map_area_DATES(data,forecasted_data,array_length_dates,number_of_series){return _get_data_map_area_DATES(get_data_mocks_area_DATES(data,forecasted_data,number_of_series),array_length_dates,number_of_series);}},{key:\"get_random_colors\",value:function get_random_colors(number_of_series){return _get_random_colors(number_of_series);}},{key:\"get_box_height\",value:function get_box_height(number_of_series){return _get_box_height(number_of_series);}},{key:\"handleMouseMove\",value:function handleMouseMove(event){var e=event.target;var dim=e.getBoundingClientRect();var x=event.clientX-dim.left-this.state.dimensions.x_trans;var y=event.clientY-dim.top-this.state.dimensions.y_trans;if(x>=0&&y>=0&&x<=this.state.dimensions.width&&y<=this.state.dimensions.height){var x_diff=this.props.plot_settings.ranges.max_x-this.props.plot_settings.ranges.min_x;var x_frame=this.state.dimensions.width/x_diff;var key=Math.round(x/x_frame);if(this.state.data_map_area_DATES[key]!==undefined){var left_index=Math.round((this.props.plot_settings.ranges.max_x-this.props.plot_settings.ranges.min_x)/2)-1;var right_index=Math.round((this.props.plot_settings.ranges.max_x-this.props.plot_settings.ranges.min_x)/2)+1;//keys left\nfor(var i=this.props.plot_settings.ranges.min_x;i<=key;i++){if(this.state.data_map_area_DATES[i]!==undefined){left_index=i;}}//keys right\nfor(var _i=key;_i<=this.props.plot_settings.ranges.max_x;_i++){if(this.state.data_map_area_DATES[_i]!==undefined){right_index=_i;}}//index difference\nthis.setState({mark_line:{pos:x},info_box:{pos_x:x,pos_y:y,value_x:this.state.data_map_area_DATES[key][1],value_y:this.state.data_map_area_DATES[key],colors:_get_random_colors(this.props.plot_settings.number_of_series)}});if(this.state.info_box.visibility==='hidden'||this.state.info_box.visibility===undefined){this.setState({mark_line:{pos:x}});}}else if(key!==undefined){////////////////////////////\nvar _left_index=key-1;var _right_index=key+1;//keys left\nfor(var _i2=key;_i2>=0;_i2--){if(this.state.data_map_area_DATES[_i2]!==undefined){_left_index=_i2;break;}}//keys right\nfor(var _i3=key;_i3<=this.props.plot_settings.ranges.max_x;_i3++){if(this.state.data_map_area_DATES[_i3]!==undefined){_right_index=_i3;break;}}//index difference\nvar left_diff=key-_left_index;var right_diff=_right_index-key;if(this.state.data_map_area_DATES[_left_index]!==undefined&&this.state.data_map_area_DATES[_right_index]!==undefined){if(left_diff<=right_diff){this.setState({mark_line:{pos:x},info_box:{pos_x:x,pos_y:y,value_x:this.state.data_map_area_DATES[key][1],value_y:this.state.data_map_area_DATES[key],colors:_get_random_colors(this.props.plot_settings.number_of_series)}});if(this.state.info_box.visibility==='hidden'||this.state.info_box.visibility===undefined){this.setState({mark_line:{pos:x}});}}else{this.setState({mark_line:{pos:x},info_box:{pos_x:x,pos_y:y,value_x:this.state.data_map_area_DATES[key][1],value_y:this.state.data_map_area_DATES[key],colors:_get_random_colors(this.props.plot_settings.number_of_series)}});if(this.state.info_box.visibility==='hidden'||this.state.info_box.visibility===undefined){this.setState({mark_line:{pos:x}});}}}/////////////////\n}}else if(x>this.state.dimensions.width||y>this.state.dimensions.height||x<this.state.dimensions.x_trans||y<this.state.dimensions.y_trans){this.setState({mark_line:{visibility:\"hidden\",pos:9999},info_box:{visibility:\"hidden\",pos_x:9999,pos_y:9999,colors:_get_random_colors(this.props.plot_settings.number_of_series)}});}}},{key:\"handleHoverOff\",value:function handleHoverOff(event){this.setState({mark_line:{pos:0,visibility:\"hidden\"},info_box:{pos_x:0,pos_y:0,visibility:\"hidden\",colors:_get_random_colors(this.props.plot_settings.number_of_series)}});}},{key:\"render\",value:function render(){var _this2=this;var area_paths=this.state.scaled_data[0].map(function(entity,index){return React.createElement(Area_Path,{key:index,data:entity,color:_this2.state.colors[index],style:\"none\",slice:4});});var area_paths_future=this.state.scaled_data[1].map(function(entity,index){return React.createElement(Area_Path,{key:index,data:entity,color:_this2.state.colors[index],style:\"dash\"});});var v_b=\"0 0 \"+this.state.dimensions.svg_width+\" \"+this.props.plot_settings.height;var v_trans=\"translate(\"+this.state.dimensions.x_trans+\",\"+this.state.dimensions.y_trans+\")\";var aa=this.state.max_y;var bb=this.state.min_y;var lower_bound=(Math.ceil((bb+1)/10)-1)*10;var upper_bound=Math.ceil((Math.abs(aa)+1)/10)*10;var calc_y_number=(upper_bound-lower_bound)/10;return React.createElement(\"div\",{ref:this.divRef},React.createElement(\"svg\",{version:\"1.1\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"none\",onMouseMove:this.handleMouseMove,onMouseLeave:this.handleHoverOff,className:\"test_plot\",width:this.state.dimensions.svg_width,height:this.props.plot_settings.height,viewBox:v_b},React.createElement(\"g\",null,React.createElement(\"g\",{transform:v_trans},area_paths,area_paths_future,React.createElement(Plot,{dimensions:this.state.dimensions,y_number:this.state.y_number,title:this.state.title}),React.createElement(AxisY,{dimensions:this.state.dimensions,y_number:calc_y_number,y_label:this.state.y_label,lower_bound:lower_bound,upper_bound:upper_bound}),React.createElement(AxisX,{dimensions:this.state.dimensions,x_label:this.state.x_label,ticks:this.state.ticks,dates:this.state.data_map_area_DATES}),React.createElement(Legend,{dimensions:this.state.dimensions,colors:this.state.colors,keywords:this.props.plot_settings.keywords}),React.createElement(Static_Line,{dimensions:this.state.dimensions,ranges:this.props.plot_settings.ranges}),React.createElement(Pointer_Line,{mark_line:this.state.mark_line,height:this.state.dimensions.height}),React.createElement(Info_Box,{info_box:this.state.info_box,width:dimensions.box_width,height:this.state.info_box_height,keywords:this.props.plot_settings.keywords})))));}}]);return KeywordPlot;}(React.PureComponent);export default KeywordPlot;","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/components/plot/src/plot/KeywordPlot.js"],"names":["React","get_random_colors","get_box_height","get_data_mocks_area_DATES","scale_data_mocks","get_data_map_area_DATES","get_min_value","get_max_value","appConfig","AxisX","AxisY","Legend","Static_Line","Pointer_Line","Info_Box","Area_Path","Plot","dimensions","array_length_dates","array_length_dates_forecast","KeywordPlot","props","handleMouseMove","bind","handleHoverOff","updateWindowDimensions","x_trans_left","y_trans_up","y_trans_bottom","width","window","innerWidth","height","plot_settings","divRef","createRef","min_y","data","historical_data","max_y","state","title","x_label","y_label","mark_line","pos","visibility","info_box","pos_x","pos_y","colors","number_of_series","scaled_data","ranges","data_map_area_DATES","forecasted_data","info_box_height","svg_width","x_trans","y_trans","historical_data_length","forecasted_data_length","ticks","addEventListener","current","focus","removeEventListener","clientWidth","x_trans_right","plot_width","plot_height","setState","event","e","target","dim","getBoundingClientRect","x","clientX","left","y","clientY","top","x_diff","max_x","min_x","x_frame","key","Math","round","undefined","left_index","right_index","i","value_x","value_y","left_diff","right_diff","area_paths","map","entity","index","area_paths_future","v_b","v_trans","aa","bb","lower_bound","ceil","upper_bound","abs","calc_y_number","y_number","keywords","box_width","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { get_random_colors, get_box_height, get_data_mocks_area_DATES, scale_data_mocks, get_data_map_area_DATES, get_min_value, get_max_value } from './utils/functions'\nimport { appConfig } from './utils/config.js';\n\nimport AxisX from './parts/AxisX';\nimport AxisY from './parts/AxisY';\nimport Legend from './parts/Legend';\nimport Static_Line from './parts/Static_Line';\nimport Pointer_Line from './parts/Pointer_Line';\nimport Info_Box from './parts/Info_Box';\nimport Area_Path from './parts/Area_Path';\nimport Plot from './parts/Plot';\nimport './css/plot.css';\n\n\nlet dimensions = appConfig.dimensions;\nlet array_length_dates = appConfig.array_length_dates + appConfig.array_length_dates_forecast;\n\nexport class KeywordPlot extends React.PureComponent {\t\n\n  constructor(props) {\n    super(props);\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleHoverOff = this.handleHoverOff.bind(this);\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n    let x_trans_left = 85;\n    let y_trans_up = 85;\n    let y_trans_bottom = 85;\n\n    let width = window.innerWidth*(0.6) - 2*x_trans_left;\n    let height = this.props.plot_settings.height - y_trans_up - y_trans_bottom;\n\n    this.divRef = React.createRef();\n\n    let min_y = get_min_value(this.props.data.historical_data);\n    let max_y = get_max_value(this.props.data.historical_data);\n\n    this.state = {\n      title: this.props.plot_settings.title,\n      x_label: this.props.plot_settings.x_label,\n      y_label: this.props.plot_settings.y_label,\n\n      mark_line: {\n        pos: 0,\n        visibility: \"hidden\"\n      },\n\n      info_box: {\n        pos_x: 0,\n        pos_y: 0,\n        visibility: \"hidden\",\n        colors: get_random_colors(this.props.plot_settings.number_of_series),\n      },\n\n      scaled_data: this.scale_data_mocks(this.props.data, this.props.plot_settings.ranges, width, height, this.props.plot_settings.number_of_series),\n      data_map_area_DATES: this.get_data_map_area_DATES(this.props.data.historical_data, this.props.data.forecasted_data, array_length_dates, this.props.plot_settings.number_of_series),\n\n      colors: this.get_random_colors(this.props.plot_settings.number_of_series),\n      info_box_height: this.get_box_height(this.props.plot_settings.number_of_series),\n\n      dimensions: {\n        svg_width: width,\n        width: width/1.1,\n        height: height,\n        x_trans: x_trans_left,\n        y_trans: y_trans_up,\n        y_trans_bottom: y_trans_bottom,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n      },\n      min_y: get_min_value(this.props.data.historical_data),\n      max_y: get_max_value(this.props.data.historical_data), \n      ticks: 12\n    };\n  }\n\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.divRef.current.focus();\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  scaling(){\n\n  }\n  \n  updateWindowDimensions() {\n    let svg_width = this.divRef.current.clientWidth;\n\n    let x_trans_left = this.props.plot_settings.x_trans_left;\n    let y_trans_up = this.props.plot_settings.y_trans_up;\n    let x_trans_right = this.props.plot_settings.x_trans_right;\n    let y_trans_bottom = this.props.plot_settings.y_trans_bottom;\n\n    let plot_width = svg_width - x_trans_left - x_trans_right;\n    let plot_height = this.props.plot_settings.height - y_trans_up - y_trans_bottom;\n\n    this.setState({\n      dimensions: {\n        svg_width: svg_width,\n        width: plot_width,\n        height: plot_height,\n        x_trans: x_trans_left,\n        y_trans: y_trans_up,\n        x_trans_right: x_trans_right,\n        y_trans_bottom: y_trans_bottom,\n        historical_data_length: appConfig.array_length_dates,\n        forecasted_data_length: appConfig.array_length_dates_forecast,\n       },\n       scaled_data: this.scale_data_mocks(this.props.data, this.props.plot_settings.ranges, plot_width, plot_height, this.props.plot_settings.number_of_series),\n    });\n  }\n\n  scale_data_mocks(data, ranges, width, height, number_of_series){\n    return scale_data_mocks(data, ranges, width, height, number_of_series)\n  }\n\n  get_data_map_area_DATES(data, forecasted_data, array_length_dates, number_of_series){\n    return get_data_map_area_DATES(get_data_mocks_area_DATES(data, forecasted_data, number_of_series), array_length_dates, number_of_series)\n  }\n\n  get_random_colors(number_of_series){\n    return get_random_colors(number_of_series)\n  }\n\n  get_box_height(number_of_series){\n    return get_box_height(number_of_series)\n  }\n\n\n  handleMouseMove(event) {\n    var e = event.target;\n    var dim = e.getBoundingClientRect();\n    var x = event.clientX - dim.left - this.state.dimensions.x_trans;\n    var y = event.clientY - dim.top - this.state.dimensions.y_trans;\n\n    if(x >= 0 && y >= 0 && x <= this.state.dimensions.width && y <= this.state.dimensions.height){\n\n      let x_diff = this.props.plot_settings.ranges.max_x - this.props.plot_settings.ranges.min_x;  \n      let x_frame = this.state.dimensions.width/x_diff;\n      let key = Math.round((x)/x_frame);\n\n      if (this.state.data_map_area_DATES[key] !== undefined){\n\n        let left_index = Math.round((this.props.plot_settings.ranges.max_x - this.props.plot_settings.ranges.min_x)/2) - 1;\n        let right_index = Math.round((this.props.plot_settings.ranges.max_x - this.props.plot_settings.ranges.min_x)/2) + 1;\n\n        //keys left\n        for(let i=this.props.plot_settings.ranges.min_x; i<=key; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i\n          }\n        }\n\n        //keys right\n        for(let i=key; i<=this.props.plot_settings.ranges.max_x; i++){\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            right_index = i\n          }\n        }\n    \n        //index difference\n        this.setState({\n          mark_line: {\n            pos: x,  \n          },\n          info_box: {\n            pos_x: x,\n            pos_y: y,\n            value_x: this.state.data_map_area_DATES[key][1],\n            value_y: this.state.data_map_area_DATES[key],\n            colors: get_random_colors(this.props.plot_settings.number_of_series)\n          }\n        })\n        if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n          this.setState({\n            mark_line: {\n              pos: x\n            }\n          })\n        }\n      } else if (key !== undefined){\n////////////////////////////\n\n        let left_index = key - 1;\n        let right_index = key + 1;\n        \n        //keys left\n        for (let i=key; i>=0; i--) {\n          if(this.state.data_map_area_DATES[i] !== undefined){\n            left_index = i;\n            break;\n          }\n        }\n\n        //keys right\n        for (let i=key; i<=this.props.plot_settings.ranges.max_x; i++) {\n          if(this.state.data_map_area_DATES[i] !== undefined) {\n            right_index = i;\n            break;\n          }\n        }\n\n        //index difference\n        let left_diff = key - left_index;\n        let right_diff = right_index - key;\n\n\n        if((this.state.data_map_area_DATES[left_index] !== undefined) && (this.state.data_map_area_DATES[right_index] !== undefined)){\n          if (left_diff<=right_diff ) {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.plot_settings.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          } else {\n            this.setState({\n              mark_line: {\n                pos: x,  \n              },\n              info_box: {\n                pos_x: x,\n                pos_y: y,\n                value_x: this.state.data_map_area_DATES[key][1],\n                value_y: this.state.data_map_area_DATES[key],\n                colors: get_random_colors(this.props.plot_settings.number_of_series)\n              }\n            })\n            if (this.state.info_box.visibility === 'hidden' || this.state.info_box.visibility === undefined) {\n              this.setState({\n                mark_line: {\n                  pos: x\n                }\n              })\n            }\n          }\n\n        }\n/////////////////\n\n      }\n    } else if (x > this.state.dimensions.width || y > this.state.dimensions.height || x < this.state.dimensions.x_trans || y < this.state.dimensions.y_trans){\n      this.setState({\n        mark_line: {\n          visibility: \"hidden\",\n          pos: 9999\n        },\n        info_box: {\n          visibility: \"hidden\",\n          pos_x: 9999,\n          pos_y: 9999,\n          colors: get_random_colors(this.props.plot_settings.number_of_series)\n        }\n      })\n    }\n  }\n  \n\n  handleHoverOff(event) {\n    this.setState({\n      mark_line:{\n          pos: 0,\n          visibility: \"hidden\"\n      },\n      info_box: {\n        pos_x: 0,\n        pos_y: 0,\n        visibility: \"hidden\",\n        colors: get_random_colors(this.props.plot_settings.number_of_series)\n      }\n    })\n  }\n\n  render() {\n\n  let area_paths = this.state.scaled_data[0].map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"none\"} slice={4}/>\n      );\n    });\n\n    let area_paths_future = this.state.scaled_data[1].map(( entity, index ) => {\n      return (\n        <Area_Path key={index} data={entity} color={this.state.colors[index]} style={\"dash\"} />\n      );\n    });\n\n    let v_b = \"0 0 \" + this.state.dimensions.svg_width + \" \" + this.props.plot_settings.height;\n    let v_trans = \"translate(\" + this.state.dimensions.x_trans + \",\" + this.state.dimensions.y_trans + \")\";\n\n    const aa = this.state.max_y;\n    const bb = this.state.min_y;\n\n    let lower_bound = (Math.ceil(((bb)+1) / 10)-1) * 10\n    let upper_bound = Math.ceil((Math.abs(aa)+1) / 10) * 10\n    let calc_y_number = (upper_bound - lower_bound)/10;\n\n    return (\n      <div ref={this.divRef}>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" onMouseMove={this.handleMouseMove} onMouseLeave={this.handleHoverOff} className=\"test_plot\" width={this.state.dimensions.svg_width} height={this.props.plot_settings.height} viewBox={v_b}>\n            <g>\n              <g transform={v_trans}>\n\n                { area_paths }\n\n                { area_paths_future }\n                \n                <Plot dimensions={this.state.dimensions} y_number={this.state.y_number} title={this.state.title} />\n\n                <AxisY dimensions={this.state.dimensions} y_number={calc_y_number} y_label={this.state.y_label} lower_bound={lower_bound} upper_bound={upper_bound} />\n\n                <AxisX dimensions={this.state.dimensions} x_label={this.state.x_label} ticks={this.state.ticks} dates={this.state.data_map_area_DATES} />\n                \n                <Legend dimensions={this.state.dimensions} colors={this.state.colors} keywords={this.props.plot_settings.keywords} />\n\n                <Static_Line dimensions={this.state.dimensions} ranges={this.props.plot_settings.ranges} />\n\n                <Pointer_Line mark_line={this.state.mark_line} height={this.state.dimensions.height} />\n\n                <Info_Box info_box={this.state.info_box} width={dimensions.box_width} height={this.state.info_box_height} keywords={this.props.plot_settings.keywords}  />\n                \n              </g>\n            </g>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default KeywordPlot;\n"]},"metadata":{},"sourceType":"module"}