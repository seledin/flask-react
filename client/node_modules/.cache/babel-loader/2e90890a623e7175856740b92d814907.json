{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/App.js\";\nimport React from 'react';\nimport Header from \"./components/Header\";\nimport Input from './components/Input';\nimport { Row } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport KeywordPlot from './components/plot';\nimport { get_min_value, get_max_value } from './components/plot/src/plot/parts/functions';\nimport { appConfig } from './config.js';\nimport { capitalizeString } from './components/plot/src/plot/parts/functions';\nimport Loader from \"react-loader-spinner\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css';\nlet dimensions = appConfig.dimensions;\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\nconst HEADERS_GROWTH_RATES = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"];\nconst HEADERS_PROJECTED_GROWTH = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"];\nconst ratio = 4.5;\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n      this.setState({\n        displayResults: false\n      });\n      this.fetchData(keywords, selected_state_name, selected_time_frame);\n    };\n\n    this.mapCallback = state => {\n      console.log(\"state \" + state);\n      this.setState({\n        displayResults: false\n      });\n      this.fetchData(this.state.keywords, state, this.state.selected_time_frame);\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.state = {\n      username: \"user\",\n      authenticated: true,\n      displayResults: false,\n      region_state: \"US\",\n      selected_time_frame: \"today 5-y\",\n      keywords: [],\n      options: {\n        title: \"Trends Forecast\",\n        x_label: \"Date\",\n        y_label: \"Search interest (%)\",\n        dimensions: dimensions\n      },\n      data: [],\n      rate_table_data: [],\n      growth_table_data: [],\n      x_trans: 85,\n      y_trans: 85,\n      fetching_results: false\n    };\n    this.myRef = React.createRef();\n  }\n\n  fetchData(keywords, state, selected_time_frame) {\n    // let url = appConfig.KEYWORDS_NEW;\n    let url = \"/api\";\n    this.setState({\n      fetching_results: true,\n      keywords: keywords\n    }); // console.log(\"state \" + state)\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        keywords: keywords,\n        region_state: state,\n        time_frame: selected_time_frame\n      })\n    }).then(res => res.json()).then(result => {\n      let width = this.myRef.current.offsetWidth;\n      let sizes = this.get_dimensions(width);\n      this.setState({\n        keywords: keywords,\n        displayResults: true,\n        region_state: state,\n        selected_time_frame: selected_time_frame,\n        displayResults: true,\n        data: this.get_data(keywords, result),\n        rate_table_data: this.getRateTableData(result.growth_rate_result),\n        growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n        div_height: sizes.height,\n        x_trans: sizes.x_trans,\n        y_trans: sizes.y_trans,\n        x_trans2: sizes.x_trans2,\n        y_trans2: sizes.y_trans2,\n        fetching_results: false\n      });\n    }).catch(function (error) {});\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.myRef.current.focus();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    let width = this.myRef.current.offsetWidth;\n    let sizes = this.get_dimensions(width);\n    this.setState({\n      div_height: sizes.height,\n      x_trans: sizes.x_trans,\n      y_trans: sizes.y_trans,\n      x_trans2: sizes.x_trans2,\n      y_trans2: sizes.y_trans2\n    });\n  }\n\n  render() {\n    let ranges = {\n      max_x: 261 + 52 + 0,\n      min_x: 0,\n      max_y: 120,\n      min_y: -10\n    };\n\n    if (this.state.displayResults) {\n      let min_y = get_min_value(this.state.data.historical_data);\n      let max_y = get_max_value(this.state.data.historical_data);\n      let lower_bound = (Math.ceil((min_y + 1) / 10) - 1) * 10;\n      let upper_bound = Math.ceil((Math.abs(max_y) + 1) / 10) * 10;\n      ranges = {\n        max_x: this.state.data.historical_data[0].length + this.state.data.forecasted_data[0].length,\n        min_x: 0,\n        max_y: upper_bound,\n        min_y: lower_bound\n      }; // console.log(\"ranges\")\n      // console.log(ranges)\n    } // console.log(this.state.keywords.length)\n\n\n    if (this.state.authenticated) {\n      return React.createElement(\"div\", {\n        ref: this.myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main_results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, this.state.displayResults ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"results_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"map_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        callbackFromApp: this.mapCallback,\n        height: this.state.div_height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"plot_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(KeywordPlot, {\n        options: this.state.options,\n        ranges: ranges,\n        data: this.state.data,\n        number_of_series: this.state.data.forecasted_data.length,\n        keywords: this.state.keywords,\n        height: this.state.div_height,\n        x_trans: this.state.x_trans,\n        y_trans: this.state.y_trans,\n        x_trans2: this.state.x_trans2,\n        y_trans2: this.state.y_trans2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"tables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.rate_table_data,\n        title: \"Growth Rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.growth_table_data,\n        title: \"Projected growth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), this.state.fetching_results ? React.createElement(\"div\", {\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Oval\",\n        color: \"#007bff\",\n        height: 200,\n        width: 200,\n        timeout: 30000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        ref: this.myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(Login, {\n        callbackFromLogin: this.toLoginCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }));\n    }\n  }\n\n  getGrowthTableData(data) {\n    let headers = HEADERS_PROJECTED_GROWTH;\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: headers\n    };\n    return result;\n  }\n\n  getRateTableData(data) {\n    let headers = HEADERS_GROWTH_RATES;\n    let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: table_headers\n    };\n    return result;\n  }\n\n  get_data(keywords, result) {\n    let historical_data = [];\n    let forecasted_data = [];\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword];\n      let arr = Object.keys(result[k_w][MA_Day_5 + k_w]).map(function (key) {\n        if (index < 4) {\n          return [index++, new Date(key).valueOf(), result[k_w][k_w][key], result[k_w][LOWER_BAND + k_w][key], result[k_w][UPPER_BAND + k_w][key]];\n        } else {\n          return [index++, new Date(key).valueOf(), result[k_w][MA_Day_5 + k_w][key], result[k_w][LOWER_BAND + k_w][key], result[k_w][UPPER_BAND + k_w][key]];\n        }\n      });\n      historical_data.push(arr);\n      arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(function (key) {\n        if (index < 4) {\n          return [index++, new Date(key).valueOf(), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND + k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND + k_w][key]];\n        } else {\n          return [index++, new Date(key).valueOf(), result[keywords[keyword] + \"F\"][MA_Day_5 + k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND + k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND + k_w][key]];\n        }\n      });\n      forecasted_data.push(arr);\n    }\n\n    return {\n      historical_data: historical_data,\n      forecasted_data: forecasted_data\n    };\n  }\n\n  get_dimensions(width) {\n    let height = width / ratio;\n    let x_trans_left = this.state.x_trans;\n    let y_trans = this.state.y_trans;\n    let x_trans2 = this.state.x_trans;\n    let y_trans2 = this.state.y_trans;\n\n    if (width > 1800) {\n      height = height;\n      x_trans_left = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1800) {\n      height = 1.2 * width / ratio;\n      x_trans_left = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1600) {\n      height = 1.4 * width / ratio;\n      x_trans_left = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1400) {\n      height = 1.6 * width / ratio;\n      x_trans_left = 70;\n      y_trans = 70;\n      x_trans2 = 50;\n      y_trans2 = 70;\n    }\n\n    if (width <= 1200) {\n      height = 1.8 * width / ratio;\n      x_trans_left = 60;\n      y_trans = 60;\n      x_trans2 = 50;\n      y_trans2 = 70;\n    } // if(width<=800){\n    //   height = (2.2)*width/(ratio);\n    //   x_trans = 60;\n    //   y_trans = 20;\n    //   x_trans2 = 20;\n    //   y_trans2 = 60;\n    // }\n\n\n    if (width <= 700) {\n      height = 4 * width / ratio;\n      x_trans_left = 60;\n      y_trans = 20;\n      x_trans2 = 50;\n      y_trans2 = this.state.keywords.length * 14 + 80;\n    }\n\n    let sizes = {\n      height: height,\n      x_trans: x_trans_left,\n      y_trans: y_trans,\n      x_trans2: x_trans2,\n      y_trans2: y_trans2\n    };\n    return sizes;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/App.js"],"names":["React","Header","Input","Row","Login","Table","Chart","KeywordPlot","get_min_value","get_max_value","appConfig","capitalizeString","Loader","dimensions","MA_Day_5","LOWER_BAND","UPPER_BAND","HEADERS_GROWTH_RATES","HEADERS_PROJECTED_GROWTH","ratio","App","PureComponent","constructor","props","fetchCallback","keywords","selected_state_name","selected_time_frame","setState","displayResults","fetchData","mapCallback","state","console","log","updateWindowDimensions","bind","username","authenticated","region_state","options","title","x_label","y_label","data","rate_table_data","growth_table_data","x_trans","y_trans","fetching_results","myRef","createRef","url","fetch","method","headers","body","JSON","stringify","time_frame","then","res","json","result","width","current","offsetWidth","sizes","get_dimensions","get_data","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","div_height","height","x_trans2","y_trans2","catch","error","componentDidMount","window","addEventListener","focus","componentWillUnmount","removeEventListener","render","ranges","max_x","min_x","max_y","min_y","historical_data","lower_bound","Math","ceil","upper_bound","abs","length","forecasted_data","toLoginCallback","arr","Object","keys","map","key","table_headers","keyword","index","k_w","Date","valueOf","push","x_trans_left"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport KeywordPlot from './components/plot';\nimport { get_min_value, get_max_value} from './components/plot/src/plot/parts/functions';\nimport { appConfig } from './config.js';\nimport { capitalizeString } from './components/plot/src/plot/parts/functions';\n\nimport Loader from \"react-loader-spinner\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css';\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\nconst HEADERS_GROWTH_RATES = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"];\nconst HEADERS_PROJECTED_GROWTH = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"];\nconst ratio = 4.5;\n\nclass App extends React.PureComponent {\n  \n    constructor(props){\n      super(props);\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n      this.state = {\n        username: \"user\",\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        selected_time_frame: \"today 5-y\",\n        keywords: [],\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n        data: [],\n        rate_table_data: [],\n        growth_table_data: [],\n        x_trans: 85,\n        y_trans: 85,\n        fetching_results: false,\n      };\n\n      this.myRef = React.createRef();\n    }\n\n    fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(keywords, selected_state_name, selected_time_frame)\n    }\n\n    mapCallback = (state) => {\n      console.log(\"state \" + state)\n\n      this.setState({\n        displayResults: false,\n      });\n\n      this.fetchData(this.state.keywords, state, this.state.selected_time_frame)\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n      // let url = appConfig.KEYWORDS_NEW;\n      let url = \"/api\"\n\n      this.setState({\n        fetching_results: true,\n        keywords: keywords\n      })\n\n      // console.log(\"state \" + state)\n      \n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type':'application/json',\n        },\n        body: JSON.stringify({\n          keywords: keywords, region_state: state, time_frame: selected_time_frame\n        }),\n      }).then(res => res.json())\n          .then(\n          (result) => {\n            let width = this.myRef.current.offsetWidth;\n            let sizes = this.get_dimensions(width);\n      \n            this.setState({\n                keywords: keywords,\n                displayResults: true,\n                region_state: state,\n                selected_time_frame: selected_time_frame,\n                displayResults: true,\n                data: this.get_data(keywords, result),\n                rate_table_data: this.getRateTableData(result.growth_rate_result),\n                growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n                div_height: sizes.height,\n                x_trans: sizes.x_trans,\n                y_trans: sizes.y_trans,\n                x_trans2: sizes.x_trans2,\n                y_trans2: sizes.y_trans2,\n                fetching_results: false\n            });\n          }).catch(function(error) {\n          \n          })\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n      this.myRef.current.focus();\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n      let width = this.myRef.current.offsetWidth;\n      let sizes = this.get_dimensions(width);\n\n      this.setState({\n        div_height: sizes.height,\n        x_trans: sizes.x_trans,\n        y_trans: sizes.y_trans,\n        x_trans2: sizes.x_trans2,\n        y_trans2: sizes.y_trans2,\n      });\n    }\n\n    render() {\n\n      let ranges =  {\n        max_x: (261 + 52 + 0),\n        min_x: 0,\n        max_y: 120,\n        min_y: -10,\n      }\n\n      if(this.state.displayResults) {\n        let min_y = get_min_value(this.state.data.historical_data);\n        let max_y = get_max_value(this.state.data.historical_data);\n\n        let lower_bound = (Math.ceil(((min_y)+1) / 10)-1) * 10\n        let upper_bound = Math.ceil((Math.abs(max_y)+1) / 10) * 10\n\n        ranges = {\n          max_x: (this.state.data.historical_data[0].length + this.state.data.forecasted_data[0].length),\n          min_x: 0,\n          max_y: upper_bound,\n          min_y: lower_bound,\n        }\n\n        // console.log(\"ranges\")\n        // console.log(ranges)\n      }\n\n        // console.log(this.state.keywords.length)\n\n\n      if (this.state.authenticated) {\n        return (\n          <div ref={this.myRef}>\n            <div className=\"main_results\">\n\n            {/* {this.state.keywords.length<=5 ? (<div>\n\n              \n\n            </div>) : (<div>Too many keywords</div>)\n              \n            } */}\n\n            {(this.state.displayResults) ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"results_div\">\n                    <div className=\"map_div\">\n                      <Chart callbackFromApp={this.mapCallback} height={this.state.div_height} />\n                    </div>\n                    <div id=\"plot_div\"> \n                        <KeywordPlot options={this.state.options} ranges={ranges} data={this.state.data} number_of_series={this.state.data.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} x_trans2={this.state.x_trans2} y_trans2={this.state.y_trans2} />\n                    </div>\n              </div>\n              <div className=\"tables\">\n                <div>\n                <Row>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.rate_table_data} title={\"Growth Rate\"}/>\n                    </div>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.growth_table_data} title={\"Projected growth\"} />\n                    </div>\n                </Row>\n                </div>\n                <Row>\n                  {/* <KeywordPlot height={500} width={500} radius={50} color={\"red\"} /> */}\n                  {/* <KeywordPlot options={this.state.options} ranges={ranges} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} x_trans2={this.state.x_trans2} y_trans2={this.state.y_trans2} /> */}\n                </Row>\n              </div>\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"intro\">\n              </div>\n              {this.state.fetching_results ? (    \n                <div className=\"spinner\">\n                  <Loader type=\"Oval\" color=\"#007bff\" height={200} width={200} timeout={30000}/>\n                </div>   \n                ) : (<div></div>) }\n            </div>\n            )\n          }\n          </div>\n        </div>\n      );\n        } else {\n          return (\n          <div ref={this.myRef}>\n              <Login callbackFromLogin={this.toLoginCallback}/>\n          </div>);      \n        }\n    }\n    \n    getGrowthTableData(data){\n      let headers = HEADERS_PROJECTED_GROWTH;\n      \n      let arr = Object.keys(data[\"Keyword\"]).map(\n        function(key){\n          return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]]\n        }\n      );\n  \n      let result = {\n        data: arr,\n        headers: headers\n      }\n  \n      return result;\n    }\n    \n    getRateTableData(data){\n      let headers = HEADERS_GROWTH_RATES;\n      let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"]\n  \n      let arr = Object.keys(data[\"Keyword\"]).map(\n        function(key){\n          return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n        }\n      );\n  \n      let result = {\n        data: arr,\n        headers: table_headers\n      }\n  \n      return result;\n    }\n\n\n  get_data(keywords, result){\n    let historical_data = []\n    let forecasted_data = []\n\n    for (let keyword in keywords) {  \n        let index = 0;\n        let k_w = keywords[keyword]\n        let arr = Object.keys(result[k_w][MA_Day_5+k_w]).map(\n\n          function(key){\n            if(index<4) {\n              return [index++, new Date(key).valueOf(), result[k_w][k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            } else {\n              return [index++, new Date(key).valueOf(), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n          }\n        );\n        historical_data.push(arr)\n\n        arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n        \n          function(key){\n            if(index<4) {\n              return [index++, new Date(key).valueOf(), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]            \n            } else {\n              return [index++, new Date(key).valueOf(), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n            }\n          }\n        );\n        forecasted_data.push(arr)\n    }\n\n    return {\n      historical_data: historical_data,\n      forecasted_data: forecasted_data\n    }\n  }\n\n  get_dimensions(width){\n    let height = width/(ratio);\n    let x_trans_left = this.state.x_trans;\n    let y_trans = this.state.y_trans;\n    let x_trans2 = this.state.x_trans;\n    let y_trans2 = this.state.y_trans;\n\n    if(width>1800){\n      height = height;\n      x_trans_left = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if(width<=1800){\n      height = (1.2)*width/(ratio);\n      x_trans_left = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if(width<=1600){\n      height = (1.4)*width/(ratio);\n      x_trans_left = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n    \n    if(width<=1400){\n      height = (1.6)*width/(ratio);\n      x_trans_left = 70;\n      y_trans = 70;\n      x_trans2 = 50;\n      y_trans2 = 70;\n    }\n\n    if(width<=1200){\n      height = (1.8)*width/(ratio);\n      x_trans_left = 60;\n      y_trans = 60;\n      x_trans2 = 50;\n      y_trans2 = 70;\n    }\n\n    // if(width<=800){\n    //   height = (2.2)*width/(ratio);\n    //   x_trans = 60;\n    //   y_trans = 20;\n    //   x_trans2 = 20;\n    //   y_trans2 = 60;\n    // }\n\n    if(width<=700) {\n      height = (4)*width/(ratio);\n      x_trans_left = 60;\n      y_trans = 20;\n      x_trans2 = 50;\n      y_trans2 = this.state.keywords.length*14 + 80;\n    }\n\n    let sizes = {\n      height: height,\n      x_trans: x_trans_left,\n      y_trans: y_trans,\n      x_trans2: x_trans2,\n      y_trans2: y_trans2\n    }\n\n    return sizes;\n  }\n}\n  \n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}