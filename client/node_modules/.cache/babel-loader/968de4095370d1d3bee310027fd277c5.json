{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from \"./components/Header\";\nimport Input from './components/Input';\nimport Plot from './components/Plot2';\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart'; // import Test_Plot from './Test_Plot';\n\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { appConfig } from './config.js';\nimport './styles/plot.css'; // function calculateMean(array) {\n//   return (array.reduce((acc, c) => acc + c[1], 0)/array.length).toFixed(2)\n// }\n\nlet dimensions = appConfig.dimensions;\nlet ranges = appConfig.ranges_dates;\nconst MA_Day_5 = \"5 Day MA\";\nconst LOWER_BAND = \"Lower Band\";\nconst UPPER_BAND = \"Upper Band\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch2 = () => {\n      let url = '/users/ping';\n      fetch(url).then(response => response.json()).then(data => {\n        console.log(\"this data\");\n        console.log(data);\n        this.setState({\n          title: \"after\"\n        });\n      });\n    };\n\n    this.fetchCallback = data => {\n      this.setState({\n        displayResults: true\n      });\n      this.handleSearch2(); // this.fetchData2(data.keywords, data.selected_state_name, data.selected_time_frame)\n    };\n\n    this.state = {\n      repos: [],\n      title: \"before\",\n      username: \"user\",\n      keywords: [],\n      authenticated: true,\n      displayResults: false,\n      region_state: \"US\",\n      data: [],\n      futureData: [],\n      selected_time_frame: \"today 5-y\",\n      dataRanges: [],\n      futureDataRanges: [],\n      rankRates: [],\n      growthRates: [],\n      options: {\n        title: \"Trends Forecast\",\n        x_label: \"Date\",\n        y_label: \"Search interest (%)\",\n        dimensions: dimensions\n      }\n    };\n  }\n\n  componentDidMount() {// this.handleSearch2();\n  }\n\n  //     handleSearch = (user) =>{\n  //       let url = 'https://api.github.com/users/'+user+'/repos';\n  //    fetch(url).\n  //     then(response => response.json()).then((repos) => {\n  //         console.log(repos);\n  //         console.log(repos.length);\n  //         this.setState({\n  //           repos: repos\n  //         });\n  //       });\n  //     };\n  render() {\n    if (this.state.authenticated) {\n      return React.createElement(\"div\", {\n        className: \"main_results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.state.displayResults ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"results_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Test_Plot_Dates, {\n        options: this.state.options,\n        number_of_series: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"tables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Growth Rate\")), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Projected growth\")), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Login, {\n        callbackFromLogin: this.toLoginCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }));\n    }\n  }\n\n  getRankRates() {\n    fetch(appConfig.GROWTH_RANKER_URL, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        keywords: this.state.keywords\n      })\n    }).then(res => res.json()).then(result => {\n      return this.getRateTableData(result);\n    });\n  }\n\n  getGrowthRates() {\n    fetch(appConfig.GROWTH_RANKER_URL, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        keywords: this.state.keywords\n      })\n    }).then(res => res.json()).then(result => {\n      return this.getGrowthRates(result);\n    });\n  }\n\n  getGrowthTableData(data) {\n    let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: headers\n    };\n    return result;\n  }\n\n  getRateTableData(data) {\n    let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: headers\n    };\n    return result;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/App.js"],"names":["React","Component","Header","Input","Plot","Row","Col","Login","Table","Chart","Test_Plot_Dates","appConfig","dimensions","ranges","ranges_dates","MA_Day_5","LOWER_BAND","UPPER_BAND","App","constructor","props","handleSearch2","url","fetch","then","response","json","data","console","log","setState","title","fetchCallback","displayResults","state","repos","username","keywords","authenticated","region_state","futureData","selected_time_frame","dataRanges","futureDataRanges","rankRates","growthRates","options","x_label","y_label","componentDidMount","render","toLoginCallback","getRankRates","GROWTH_RANKER_URL","method","headers","body","JSON","stringify","res","result","getRateTableData","getGrowthRates","getGrowthTableData","arr","Object","keys","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport Plot  from './components/Plot2'\nimport { Row,Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\n// import Test_Plot from './Test_Plot';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { appConfig } from './config.js';\nimport './styles/plot.css'\n\n\n// function calculateMean(array) {\n//   return (array.reduce((acc, c) => acc + c[1], 0)/array.length).toFixed(2)\n// }\nlet dimensions = appConfig.dimensions;\nlet ranges = appConfig.ranges_dates;\n\nconst MA_Day_5 = \"5 Day MA\";\nconst LOWER_BAND = \"Lower Band\";\nconst UPPER_BAND = \"Upper Band\";\n\n\n\nclass App extends React.Component {\n  \n    constructor(props){\n      super(props);\n      this.state = {\n        repos: [],\n        title: \"before\",\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        data: [],\n        futureData: [],\n        selected_time_frame: \"today 5-y\",\n        dataRanges: [],\n        futureDataRanges: [],\n        rankRates: [],\n        growthRates: [],\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n      };\n    }\n\n    componentDidMount(){\n        // this.handleSearch2();\n    }\n\n    handleSearch2 = () => {\n        let url = '/users/ping';\n        fetch(url).\n        then(response => response.json()).then((data) => {\n        console.log(\"this data\")  \n        console.log(data);\n            this.setState({\n            title: \"after\"\n            });\n        });\n    };\n\n    fetchCallback = (data) => {\n\n        this.setState({\n            displayResults: true,\n        });\n        this.handleSearch2();\n\n    // this.fetchData2(data.keywords, data.selected_state_name, data.selected_time_frame)\n\n\n    }\n    \n//     handleSearch = (user) =>{\n//       let url = 'https://api.github.com/users/'+user+'/repos';\n//    fetch(url).\n//     then(response => response.json()).then((repos) => {\n//         console.log(repos);\n//         console.log(repos.length);\n//         this.setState({\n//           repos: repos\n//         });\n//       });\n//     };\n    \n    render() {\n\n        if (this.state.authenticated) {\n        return (\n            <div className=\"main_results\">\n            {this.state.displayResults ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"results_div\">\n              <Row> \n                  <Col sm={5}>\n                    <div>\n                      <Chart />\n                      {/* <Chart callbackFromApp={this.mapCallback}/> */}\n                    </div>\n                  </Col>\n                  <Col sm={7}>\n                    <div> \n                      {/* <Plot keywords={this.state.keywords} data={this.state.data} futureData={this.state.futureData} dataRanges={this.state.dataRanges} futureDataRanges={this.state.futureDataRanges}/>   */}\n                      <Test_Plot_Dates options={this.state.options} number_of_series={5}/>\n                    </div>\n                  </Col>\n              </Row> \n              </div>\n              <div className=\"tables\">\n                <Row>\n                  <Col sm={6}>\n                    <span className=\"center\"><h3>Growth Rate</h3></span>\n                    <Table />\n                    {/* <Table tableData={this.state.rankRates} /> */}\n                  </Col>\n                  <Col sm={6}>\n                    <span className=\"center\"><h3>Projected growth</h3></span>\n                    {/* <Table tableData={this.state.growthRates}  /> */}\n                    <Table />\n                  </Col>\n                </Row>\n              </div>\n\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"intro\">\n              </div>\n            </div>\n            )\n          }\n            </div>\n            );\n        } else{\n        return (\n        <div>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n        </div>);      \n        }\n    }\n    \n\n    getRankRates(){\n        fetch(appConfig.GROWTH_RANKER_URL, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: this.state.keywords\n          }),\n        }).then(res => res.json())\n          .then(\n          (result) => {\n            return this.getRateTableData(result)\n          },\n          )\n      }\n    \n      getGrowthRates(){\n        fetch(appConfig.GROWTH_RANKER_URL, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: this.state.keywords\n          }),\n        }).then(res => res.json())\n          .then(\n          (result) => {\n            return this.getGrowthRates(result)\n          },\n          )\n      }\n\n\n      getGrowthTableData(data){\n\n        let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n    \n      getRateTableData(data){\n    \n        let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n  }\n  \n  \n  export default App;\n"]},"metadata":{},"sourceType":"module"}