{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/components/plot/src/plot/parts/AxisY.js\";\nimport React from 'react';\nexport class AxisY extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let result = [];\n    let upper_index = this.props.upper_bound / 10;\n    let lower_index = this.props.lower_bound / 10;\n    let lines_number = upper_index - lower_index;\n    let frame = this.props.dimensions.height / lines_number;\n    let x = 0;\n    let y = 0;\n\n    for (let i = lower_index; i <= upper_index; i++) {\n      result.push(make_y_tick(-20, this.props.dimensions.height - frame * (i - lower_index), i * 10));\n    }\n\n    let line = `M ${x} ${y} L ${x} ${y + this.props.dimensions.height}`;\n    return React.createElement(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      transform: `translate(${-(this.props.dimensions.x_trans / 2 + 10)},${this.props.dimensions.height / 2})`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"text\", {\n      x: \"0\",\n      textAnchor: \"middle\",\n      transform: \"rotate(-90 0,0)\",\n      className: \"plot_yaxis_title\",\n      y: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"tspan\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.props.y_label))), get_y_ticks(this.props.dimensions.height, this.props.y_number), result, React.createElement(\"path\", {\n      d: line,\n      fill: \"none\",\n      className: \"plot_line\",\n      \"data-z-index\": \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default AxisY;\n\nfunction make_y_tick(x, y, value) {\n  return React.createElement(\"text\", {\n    x: x,\n    textAnchor: \"end\",\n    className: \"plot_ytick\",\n    y: y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, value);\n}\n\nfunction make_yy_tick(x, y) {\n  let line = `M ${x - 10} ${y} L ${x} ${y}`;\n  return React.createElement(\"path\", {\n    key: y,\n    d: line,\n    fill: \"none\",\n    className: \"plot_line\",\n    \"data-z-index\": \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n}\n\nfunction get_y_ticks(height, lines_number) {\n  let result = [];\n  let frame = height / lines_number;\n\n  for (let i = 0; i <= lines_number; i++) {\n    let point = frame * i;\n    result.push(make_yy_tick(0, point));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/components/plot/src/plot/parts/AxisY.js"],"names":["React","AxisY","PureComponent","constructor","props","render","result","upper_index","upper_bound","lower_index","lower_bound","lines_number","frame","dimensions","height","x","y","i","push","make_y_tick","line","x_trans","y_label","get_y_ticks","y_number","value","make_yy_tick","point"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport class AxisY extends React.PureComponent {\t\n\n  constructor(props) {\n    super(props);\n  }\n\n  render(){\n    let result = [];\n    let upper_index = this.props.upper_bound/10;\n    let lower_index = this.props.lower_bound/10;\n\n    let lines_number = upper_index - lower_index;\n\n    let frame = this.props.dimensions.height / lines_number;\n\n    let x = 0;\n    let y = 0;\n\n    for(let i=lower_index; i<=upper_index; i++){\n      result.push(make_y_tick(-20, this.props.dimensions.height - frame*(i -lower_index),i * 10));\n    }\n\n    let line = `M ${x} ${y} L ${x} ${y + this.props.dimensions.height}`;\n\n    return (\n      <g>\n        <g transform={`translate(${-(this.props.dimensions.x_trans/2 + 10)},${this.props.dimensions.height/2})`}><text x=\"0\" textAnchor=\"middle\" transform=\"rotate(-90 0,0)\" className=\"plot_yaxis_title\" y=\"0\"><tspan>{this.props.y_label}</tspan></text></g>\n        { get_y_ticks(this.props.dimensions.height, this.props.y_number) }\n        { result }\n        <path d={line} fill=\"none\" className=\"plot_line\" data-z-index=\"0\" />\n        \n      </g>\n    )\n  }\n}\n\nexport default AxisY\n\nfunction make_y_tick(x, y, value) {\n  return <text x={x} textAnchor=\"end\" className=\"plot_ytick\" y={y}>{value}</text>\n}\n\nfunction make_yy_tick(x, y) {\n\n  let line = `M ${x-10} ${y} L ${x} ${y}`;\n  return <path key={y} d={line} fill=\"none\" className=\"plot_line\" data-z-index=\"0\" />\n}\n\nfunction get_y_ticks (height, lines_number) {\n  let result = []\n\n  let frame = height / lines_number;\n\n  for (let i=0; i<=lines_number; i++){\n      let point = frame * i;\n      result.push(make_yy_tick(0,point))\n  }\n\n  return result\n}"]},"metadata":{},"sourceType":"module"}