{"ast":null,"code":"import{capitalizeString}from\"./functions\";function make_line(point,width){var line=\"M 0 \".concat(point,\" H \").concat(width);return\"<path d=\\\"\".concat(line,\"\\\" fill=\\\"none\\\" class=\\\"plot_line\\\" data-z-index=\\\"0\\\" />\");}function make_yy_tick(x,y){var line=\"M \".concat(x-10,\" \").concat(y,\" L \").concat(x,\" \").concat(y);// return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\nreturn\"<path d=\\\"\".concat(line,\"\\\" fill=\\\"none\\\" class=\\\"plot_line\\\" data-z-index=\\\"0\\\" />\");}export function get_lines(width,height,lines_number){var frame=height/lines_number;var result=[];for(var i=lines_number;i<=lines_number;i++){var point=frame*i;result.push(make_line(point,width));}return result;}export function get_y_ticks(height,lines_number){var result=[];var frame=height/lines_number;for(var i=0;i<=lines_number;i++){var point=frame*i;result.push(make_yy_tick(0,point));}return result;}function make_x_tick(x,y){var line=\"M \".concat(x,\" \").concat(y,\" L \").concat(x,\" \").concat(y+10);return\"<path class=\\\"plot_xmark\\\" d=\\\"\".concat(line,\"\\\" data-z-index=\\\"0\\\" />\");}export function get_ticks(width,height,ticks_number){var result=[];var frame=width/(ticks_number-1);for(var i=0;i<ticks_number;i++){var point=frame*i;result.push(make_x_tick(point,height));}// let frame = width / (length - 1)\n// for(let i=0; i<ticks_number; i++){\n//     // result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n//     result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[i][1])}</text>`)\n// }\nreturn result;}function make_y_tick(x,y,value){return\"<text x=\\\"\".concat(x,\"\\\" textAnchor=\\\"end\\\" class=\\\"plot_ytick\\\" y=\\\"\").concat(y,\"\\\">\").concat(value,\"</text>\");}export function get_y_axis(x,y,height,lines_number){var result=[];var frame=height/lines_number;for(var i=0;i<=lines_number;i++){result.push(make_y_tick(-40,height-frame*i,i*lines_number));}var line=\"M \".concat(x,\" \").concat(y,\" L \").concat(x,\" \").concat(y+height);result.push(\"<path d=\\\"\".concat(line,\"\\\" fill=\\\"none\\\" class=\\\"plot_line\\\" data-z-index=\\\"0\\\" />\"));return result;}export function prepare_title(title,width,height,x_trans,y_trans){return\"<text x=\\\"\".concat(width/2,\"\\\" class=\\\"plot_title\\\" text-anchor=\\\"middle\\\" y=\\\"\").concat(-y_trans/3,\"\\\">\").concat(title,\"</text>\");}export function prepare_x_axis(width,height,ticks_number,data_mock){var result=[];var length=Object.keys(data_mock).length;var data_frame=Math.floor(length/(ticks_number-1));var frame=width/(ticks_number-1);for(var i=0;i<ticks_number;i++){// result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\nresult.push(\"<text x=\\\"\".concat(frame*i,\"\\\" class=\\\"plot_xtick\\\" text-anchor=\\\"middle\\\" y=\\\"\").concat(height+30,\"\\\">\").concat(formatDate_monthly(data_mock[data_frame*i][1]),\"</text>\"));}return result;}export function get_x_axis(title,width,height,x_trans,y_trans){var result=[];var line=\"M 0 \".concat(height,\" H \").concat(width);result.push(\"<text x=\\\"\".concat(width/2,\"\\\" text-anchor=\\\"middle\\\" class=\\\"plot_xaxis_title\\\" y=\\\"\").concat(height+y_trans/2,\"\\\"><tspan>\").concat(title,\"</tspan></text>\"));result.push(\"<path d=\\\"\".concat(line,\"\\\" fill=\\\"none\\\" class=\\\"plot_line\\\" data-z-index=\\\"0\\\" />\"));return result;}export function get_y_axis_label(title,height,x_trans){return\"<text x=\\\"\".concat(x_trans,\"\\\" text-anchor=\\\"middle\\\" transform=\\\"translate(0,0) rotate(270 25.140625 309.5)\\\" class=\\\"plot_yaxis_title\\\" y=\\\"\").concat((height+x_trans)/2-0.1*x_trans,\"\\\"><tspan>\").concat(title,\"</tspan></text>\");}export function get_red_line(dimensions,ranges_dates){var x_frame=dimensions.width/(ranges_dates.max_x-1);// console.log(\"%%%%\")\n// console.log(dimensions)\n// console.log(ranges_dates)\n// let x = x_frame * 256;\nvar x=x_frame*(dimensions.historical_data_length-1);return\"<g>\\n        <path fill=\\\"none\\\" class=\\\"plot_pointer_line\\\" d=\\\"M \".concat(x,\" 0 L \").concat(x,\" \").concat(dimensions.height,\"\\\" stroke-dasharray=\\\"6\\\" data-z-index=\\\"0\\\"></path>\\n    </g>\");}export function get_mark_line(mark_line,height){return\"<g transform=\\\"translate(\".concat(mark_line.pos,\", 0)\\\">\\n        <path fill=\\\"none\\\" data-z-index=\\\"0\\\" class=\\\"plot_mark_line\\\" d=\\\"M 0 0 L 0 \").concat(height,\"\\\" visibility=\\\"\").concat(mark_line.visibility,\"\\\" />         \\n    </g>\");}// export function get_info_box2(info_box, box_width, box_height){ \n//     let y_data = [];\n//     // console.log(info_box.value_y)\n//     if(info_box !== undefined && info_box.value_y !== undefined) {\n//         for(let i=0; i<info_box.colors.length; i++){\n//             y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n//             <text stroke=\"#343640\" opacity=\"1\" x=25 y=${(i + 1)*25 + 25}>Series ${i + 1} value y: ${info_box.value_y[2][i]}</text>`)\n//         }\n//     }\n//     let date = formatDate(info_box.value_x)\n//     return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n//         <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n//         <text x=5 y=\"25\" class=\"plot_info_box_header\">Date: ${date}</text>\n//         ${y_data}\n//     </g>`\n// }\n// export function get_y_axis(x, y, height){\n//     let line = `M ${x} ${y} L ${x} ${y + height}`;\n//     return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n// }\nexport function get_info_box(info_box,box_width,box_height,keywords){var y_data=[];if(info_box!==undefined&&info_box.value_y!==undefined){for(var i=0;i<info_box.colors.length;i++){y_data.push(\"<path fill=\\\"none\\\" d=\\\"M 5 \".concat((i+1)*25+22,\" L 20 \").concat((i+1)*25+22,\"\\\" stroke=\\\"\").concat(info_box.colors[i],\"\\\" strokeWidth=\\\"2\\\" opacity=\\\"1\\\"></path>\\n             <text x=25 y=\").concat((i+1)*25+25,\">\").concat(capitalizeString(keywords[i]),\" \").concat(info_box.value_y[2][i].toFixed(1),\" (min: \").concat(info_box.value_y[3][i].toFixed(1),\" | max: \").concat(info_box.value_y[2][i].toFixed(1),\")</text>\"));}}var date=formatDate(info_box.value_x);return\"<g transform=\\\"translate(\".concat(info_box.pos_x,\", \").concat(info_box.pos_y,\")\\\" data-z-index=\\\"1\\\" class=\\\"plot_info_box\\\" visibility=\").concat(info_box.visibility,\">\\n        <rect x=\\\"0\\\" y=\\\"0\\\" width=\").concat(box_width,\" height=\").concat(box_height,\"  />   \\n        <g class=\\\"plot_info_box_header\\\">\\n        <text x=5 y=\\\"25\\\">Date: \").concat(date,\"</text>\\n        </g>\\n        \").concat(y_data,\"\\n    </g>\");}export function prepare_legend(dimensions,colors,keywords){// this.props.dimensions.width)/2 - this.props.dimensions.x_trans, this.props.dimensions.height + this.props.dimensions.y_trans/2\nvar legend=[];var keyword_sizes=[];console.log(dimensions);// for(let i=0; i<colors.length; i++){\n//     let l = calculate_translate_for_legend(keywords[i].length);\n//     let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n//     legend.push(`\n//         <g data-z-index=\"1\" transform=\"translate(${translation},3)\">\n//             <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n//             <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"1.1em\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n//         </g>\n//     `);\n//     keyword_sizes.push(l);\n// }\nif(dimensions.width>600){for(var i=0;i<colors.length;i++){var l=calculate_translate_for_legend(keywords[i].length);var _translation=keyword_sizes.reduce(function(a,b){return a+b;},0);legend.push(\"\\n                <g data-z-index=\\\"1\\\" transform=\\\"translate(\".concat(_translation,\",3)\\\">\\n                    <path fill=\\\"none\\\" d=\\\"M 0 11 L 30 11\\\" stroke=\").concat(colors[i],\" stroke-width=\\\"0\\\"></path>\\n                    <text x=\\\"35\\\" textAnchor=\\\"start\\\" data-z-index=\\\"0\\\" y=\\\"15\\\" font-size=\\\"1.1em\\\" stroke=\\\"#6c757d\\\" stroke-width=\\\"0\\\">\").concat(capitalizeString(keywords[i]),\"</text>\\n                </g>\\n            \"));keyword_sizes.push(l);}var translation=keyword_sizes.reduce(function(a,b){return a+b;},0);var width_trans=dimensions.width2/2-translation/2-dimensions.x_trans;var height_trans=dimensions.height+dimensions.y_trans/2;return\"\\n            <g transform=\\\"translate(\".concat(width_trans,\", \").concat(height_trans,\")\\\" class=\\\"plot_legend\\\" >\\n                \").concat(legend,\"\\n            </g>\");}else{for(var _i=0;_i<colors.length;_i++){var _l=calculate_translate_for_legend(keywords[_i].length);// let translation = keyword_sizes.reduce((a, b) => a + b, 0);\nlegend.push(\"\\n                <g data-z-index=\\\"1\\\" transform=\\\"translate(\".concat(dimensions.width2/2-_l,\", \").concat(_i*7+3,\")\\\">\\n                    <path fill=\\\"none\\\" d=\\\"M 0 11 L 30 11\\\" stroke=\").concat(colors[_i],\" stroke-width=\\\"0\\\"></path>\\n                    <text x=\\\"35\\\" textAnchor=\\\"start\\\" data-z-index=\\\"0\\\" y=\\\"15\\\" font-size=\\\"1.1em\\\" stroke=\\\"#6c757d\\\" stroke-width=\\\"0\\\">\").concat(capitalizeString(keywords[_i]),\"</text>\\n                </g>\\n            \"));// keyword_sizes.push(l);\n}// let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n// let width_trans = (dimensions.width2)/2 - translation/2 - dimensions.x_trans;\nvar _height_trans=dimensions.height+dimensions.y_trans/2;return\"\\n            <g transform=\\\"translate(\".concat(0,\", \",_height_trans,\")\\\" class=\\\"plot_legend\\\" >\\n                \").concat(legend,\"\\n            </g>\");}}function calculate_translate_for_legend(keyword_length){return(6,5)*keyword_length+55;}function formatDate(d){var date=new Date(d);var dd=date.getDate();var mm=date.getMonth()+1;var yyyy=date.getFullYear();if(dd<10){dd='0'+dd;}if(mm<10){mm='0'+mm;};return d=dd+'-'+mm+'-'+yyyy;}function formatDate_monthly(d){var date=new Date(d);var dd=date.getDate();var mm=date.getMonth()+1;var yyyy=date.getFullYear();if(dd<10){dd='0'+dd;}if(mm<10){mm='0'+mm;};return d=mm+'-'+yyyy;}// function capitalizeString(string) {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n// }","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/utils_dates/graphics.js"],"names":["capitalizeString","make_line","point","width","line","make_yy_tick","x","y","get_lines","height","lines_number","frame","result","i","push","get_y_ticks","make_x_tick","get_ticks","ticks_number","make_y_tick","value","get_y_axis","prepare_title","title","x_trans","y_trans","prepare_x_axis","data_mock","length","Object","keys","data_frame","Math","floor","formatDate_monthly","get_x_axis","get_y_axis_label","get_red_line","dimensions","ranges_dates","x_frame","max_x","historical_data_length","get_mark_line","mark_line","pos","visibility","get_info_box","info_box","box_width","box_height","keywords","y_data","undefined","value_y","colors","toFixed","date","formatDate","value_x","pos_x","pos_y","prepare_legend","legend","keyword_sizes","console","log","l","calculate_translate_for_legend","translation","reduce","a","b","width_trans","width2","height_trans","keyword_length","d","Date","dd","getDate","mm","getMonth","yyyy","getFullYear"],"mappings":"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","sourcesContent":["import { capitalizeString } from \"./functions\";\n\n\nfunction make_line (point, width) {\n\n    let line = `M 0 ${point} H ${width}`;\n    return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n}\n\nfunction make_yy_tick(x, y) {\n\n    let line = `M ${x-10} ${y} L ${x} ${y}`;\n    // return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\n    return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n}\n\nexport function get_lines (width, height, lines_number) {\n\n    let frame = height / lines_number;\n\n    let result = [];\n\n    for (let i=lines_number; i<=lines_number; i++){\n        let point = frame * i;\n        result.push(make_line(point,width))\n    }\n\n    return result;\n}\n\nexport function get_y_ticks (height, lines_number) {\n    let result = []\n\n    let frame = height / lines_number;\n\n    for (let i=0; i<=lines_number; i++){\n        let point = frame * i;\n        result.push(make_yy_tick(0,point))\n    }\n\n    return result\n}\n\n\nfunction make_x_tick(x, y) {\n\n    let line = `M ${x} ${y} L ${x} ${y + 10}`;\n    return `<path class=\"plot_xmark\" d=\"${line}\" data-z-index=\"0\" />`\n}\n\nexport function get_ticks(width, height, ticks_number){\n    let result = [];\n\n    let frame = width / (ticks_number - 1);\n\n    for (let i=0; i<ticks_number; i++){\n        let point = frame * i;\n        result.push(make_x_tick(point, height))\n    }\n\n    // let frame = width / (length - 1)\n    // for(let i=0; i<ticks_number; i++){\n    //     // result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n    //     result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[i][1])}</text>`)\n    // }\n\n    return result;\n}\n\nfunction make_y_tick(x, y, value) {\n    return `<text x=\"${x}\" textAnchor=\"end\" class=\"plot_ytick\" y=\"${y}\">${value}</text>`\n}\n\nexport function get_y_axis(x, y, height, lines_number) {\n    let result = [];\n\n    let frame = height / lines_number;\n\n    for(let i=0; i<=lines_number; i++){\n        result.push(make_y_tick(-40, height - frame*(i),i * lines_number));\n    }\n\n    let line = `M ${x} ${y} L ${x} ${y + height}`;\n    result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n\n    return result;\n}\n\nexport function prepare_title(title, width, height, x_trans, y_trans){\n    return `<text x=\"${width/2}\" class=\"plot_title\" text-anchor=\"middle\" y=\"${-y_trans/3}\">${title}</text>`\n}\n\n\n\nexport function prepare_x_axis(width, height, ticks_number, data_mock){\n    let result = []\n\n    let length = Object.keys(data_mock).length;\n    let data_frame = Math.floor(length/(ticks_number-1));\n\n    let frame = width / (ticks_number - 1)\n    for(let i=0; i<ticks_number; i++){\n        // result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n        result.push(`<text x=\"${frame*i}\" class=\"plot_xtick\" text-anchor=\"middle\" y=\"${height + 30}\">${formatDate_monthly(data_mock[data_frame*i][1])}</text>`)\n    }\n\n    return result \n\n}\n\nexport function get_x_axis(title, width, height, x_trans, y_trans){\n    let result = []\n    let line = `M 0 ${height} H ${width}`;\n\n    result.push(`<text x=\"${width/2}\" text-anchor=\"middle\" class=\"plot_xaxis_title\" y=\"${height + y_trans/2}\"><tspan>${title}</tspan></text>`)\n    result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n    return result\n}\n\nexport function get_y_axis_label(title, height, x_trans){\n    return `<text x=\"${x_trans}\" text-anchor=\"middle\" transform=\"translate(0,0) rotate(270 25.140625 309.5)\" class=\"plot_yaxis_title\" y=\"${(height + x_trans)/2 - 0.1*x_trans}\"><tspan>${title}</tspan></text>`\n}\n\nexport function get_red_line(dimensions, ranges_dates){\n\n    let x_frame = dimensions.width/(ranges_dates.max_x-1)\n\n    // console.log(\"%%%%\")\n    // console.log(dimensions)\n    // console.log(ranges_dates)\n\n    // let x = x_frame * 256;\n    let x = x_frame * (dimensions.historical_data_length - 1);\n\n\n    return `<g>\n        <path fill=\"none\" class=\"plot_pointer_line\" d=\"M ${x} 0 L ${x} ${dimensions.height}\" stroke-dasharray=\"6\" data-z-index=\"0\"></path>\n    </g>`\n}\n\nexport function get_mark_line(mark_line, height){\n    return `<g transform=\"translate(${mark_line.pos}, 0)\">\n        <path fill=\"none\" data-z-index=\"0\" class=\"plot_mark_line\" d=\"M 0 0 L 0 ${height}\" visibility=\"${mark_line.visibility}\" />         \n    </g>`\n}\n\n// export function get_info_box2(info_box, box_width, box_height){ \n\n//     let y_data = [];\n//     // console.log(info_box.value_y)\n    \n//     if(info_box !== undefined && info_box.value_y !== undefined) {\n//         for(let i=0; i<info_box.colors.length; i++){\n//             y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n//             <text stroke=\"#343640\" opacity=\"1\" x=25 y=${(i + 1)*25 + 25}>Series ${i + 1} value y: ${info_box.value_y[2][i]}</text>`)\n//         }\n//     }\n\n//     let date = formatDate(info_box.value_x)\n    \n//     return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n//         <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n//         <text x=5 y=\"25\" class=\"plot_info_box_header\">Date: ${date}</text>\n//         ${y_data}\n//     </g>`\n// }\n\n// export function get_y_axis(x, y, height){\n//     let line = `M ${x} ${y} L ${x} ${y + height}`;\n//     return `<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`\n// }\n\nexport function get_info_box(info_box, box_width, box_height, keywords){ \n\n    let y_data = [];\n    \n    if(info_box !== undefined && info_box.value_y !== undefined) {\n        for(let i=0; i<info_box.colors.length; i++){\n            y_data.push(`<path fill=\"none\" d=\"M 5 ${(i + 1)*25 + 22} L 20 ${(i + 1)*25 + 22}\" stroke=\"${info_box.colors[i]}\" strokeWidth=\"2\" opacity=\"1\"></path>\n             <text x=25 y=${(i + 1)*25 + 25}>${capitalizeString(keywords[i])} ${info_box.value_y[2][i].toFixed(1)} (min: ${info_box.value_y[3][i].toFixed(1)} | max: ${info_box.value_y[2][i].toFixed(1)})</text>`)\n        }\n    }\n\n    let date = formatDate(info_box.value_x)\n    \n    return `<g transform=\"translate(${info_box.pos_x}, ${info_box.pos_y})\" data-z-index=\"1\" class=\"plot_info_box\" visibility=${info_box.visibility}>\n        <rect x=\"0\" y=\"0\" width=${box_width} height=${box_height}  />   \n        <g class=\"plot_info_box_header\">\n        <text x=5 y=\"25\">Date: ${date}</text>\n        </g>\n        ${y_data}\n    </g>`\n}\n\nexport function prepare_legend(dimensions, colors, keywords){\n\n    // this.props.dimensions.width)/2 - this.props.dimensions.x_trans, this.props.dimensions.height + this.props.dimensions.y_trans/2\n\n    let legend = [];\n    let keyword_sizes = []\n\n    console.log(dimensions)\n    \n    // for(let i=0; i<colors.length; i++){\n    //     let l = calculate_translate_for_legend(keywords[i].length);\n        \n\n    //     let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n\n    //     legend.push(`\n    //         <g data-z-index=\"1\" transform=\"translate(${translation},3)\">\n    //             <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n    //             <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"1.1em\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n    //         </g>\n    //     `);\n    //     keyword_sizes.push(l);\n    // }\n\n    if (dimensions.width>600){\n        for(let i=0; i<colors.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            \n    \n            let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n    \n            legend.push(`\n                <g data-z-index=\"1\" transform=\"translate(${translation},3)\">\n                    <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n                    <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"1.1em\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n                </g>\n            `);\n            keyword_sizes.push(l);\n        }\n\n        let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n        let width_trans = (dimensions.width2)/2 - translation/2 - dimensions.x_trans;\n        let height_trans = dimensions.height + dimensions.y_trans/2;\n    \n        return `\n            <g transform=\"translate(${width_trans}, ${height_trans})\" class=\"plot_legend\" >\n                ${legend}\n            </g>`\n        \n    } else {\n        for(let i=0; i<colors.length; i++){\n            let l = calculate_translate_for_legend(keywords[i].length);\n            \n    \n            // let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n    \n            legend.push(`\n                <g data-z-index=\"1\" transform=\"translate(${(dimensions.width2)/2 - l}, ${i*7+3})\">\n                    <path fill=\"none\" d=\"M 0 11 L 30 11\" stroke=${colors[i]} stroke-width=\"0\"></path>\n                    <text x=\"35\" textAnchor=\"start\" data-z-index=\"0\" y=\"15\" font-size=\"1.1em\" stroke=\"#6c757d\" stroke-width=\"0\">${capitalizeString(keywords[i])}</text>\n                </g>\n            `);\n            // keyword_sizes.push(l);\n        }\n\n        // let translation = keyword_sizes.reduce((a, b) => a + b, 0);\n        // let width_trans = (dimensions.width2)/2 - translation/2 - dimensions.x_trans;\n        let height_trans = dimensions.height + dimensions.y_trans/2;\n    \n        return `\n            <g transform=\"translate(${0}, ${height_trans})\" class=\"plot_legend\" >\n                ${legend}\n            </g>`\n    }\n}\n\nfunction calculate_translate_for_legend(keyword_length){\n    return (6,5)*keyword_length + 55;\n}\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}\n\nfunction formatDate_monthly(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = mm+'-'+yyyy\n}\n\n// function capitalizeString(string) {\n//     return string.charAt(0).toUpperCase() + string.slice(1);\n// }\n"]},"metadata":{},"sourceType":"module"}