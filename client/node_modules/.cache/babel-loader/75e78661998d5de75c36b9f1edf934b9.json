{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/components/plot3/src/plot/parts/AxisY.js\";\nimport React from 'react';\nexport const AxisY = props => {\n  let result = [];\n  let upper_index = props.upper_bound / 10;\n  let lower_index = props.lower_bound / 10;\n  let lines_number = upper_index - lower_index;\n  let frame = props.dimensions.height / lines_number;\n  let x = 0;\n  let y = 0;\n\n  for (let i = lower_index; i <= upper_index; i++) {\n    result.push(make_y_tick(-20, props.dimensions.height - frame * (i - lower_index), i * 10));\n  }\n\n  let line = `M ${x} ${y} L ${x} ${y + props.dimensions.height}`;\n  return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    transform: `translate(${-(props.dimensions.x_trans / 2 + 10)},${props.dimensions.height / 2})`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    x: \"0\",\n    textAnchor: \"middle\",\n    transform: \"rotate(-90 0,0)\",\n    class: \"plot_yaxis_title\",\n    y: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"tspan\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.y_label))), get_y_ticks(props.dimensions.height, props.y_number), result, React.createElement(\"path\", {\n    d: line,\n    fill: \"none\",\n    class: \"plot_line\",\n    \"data-z-index\": \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n};\nexport default AxisY;\n\nfunction make_y_tick(x, y, value) {\n  return React.createElement(\"text\", {\n    x: x,\n    \"text-anchor\": \"end\",\n    class: \"plot_ytick\",\n    y: y,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, value);\n}\n\nfunction make_yy_tick(x, y) {\n  let line = `M ${x - 10} ${y} L ${x} ${y}`;\n  return React.createElement(\"path\", {\n    d: line,\n    fill: \"none\",\n    class: \"plot_line\",\n    \"data-z-index\": \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  });\n}\n\nfunction get_y_ticks(height, lines_number) {\n  let result = [];\n  let frame = height / lines_number;\n\n  for (let i = 0; i <= lines_number; i++) {\n    let point = frame * i;\n    result.push(make_yy_tick(0, point));\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/components/plot3/src/plot/parts/AxisY.js"],"names":["React","AxisY","props","result","upper_index","upper_bound","lower_index","lower_bound","lines_number","frame","dimensions","height","x","y","i","push","make_y_tick","line","x_trans","y_label","get_y_ticks","y_number","value","make_yy_tick","point"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport const AxisY = props => {\n\n  let result = [];\n  let upper_index = props.upper_bound/10;\n  let lower_index = props.lower_bound/10;\n\n  let lines_number = upper_index - lower_index;\n\n  let frame = props.dimensions.height / lines_number;\n\n  let x = 0;\n  let y = 0;\n\n  for(let i=lower_index; i<=upper_index; i++){\n    result.push(make_y_tick(-20, props.dimensions.height - frame*(i -lower_index),i * 10));\n  }\n\n  let line = `M ${x} ${y} L ${x} ${y + props.dimensions.height}`;\n\n  return (\n    <g>\n      <g transform={`translate(${-(props.dimensions.x_trans/2 + 10)},${props.dimensions.height/2})`}><text x=\"0\" textAnchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>{props.y_label}</tspan></text></g>\n      {get_y_ticks(props.dimensions.height, props.y_number)}\n      {result}\n      <path d={line} fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />\n      \n    </g>\n  )\n\n};\n\nexport default AxisY\n\nfunction make_y_tick(x, y, value) {\n  return <text x={x} text-anchor=\"end\" class=\"plot_ytick\" y={y}>{value}</text>\n}\n\nfunction make_yy_tick(x, y) {\n\n  let line = `M ${x-10} ${y} L ${x} ${y}`;\n  return <path d={line} fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />\n}\n\nfunction get_y_ticks (height, lines_number) {\n  let result = []\n\n  let frame = height / lines_number;\n\n  for (let i=0; i<=lines_number; i++){\n      let point = frame * i;\n      result.push(make_yy_tick(0,point))\n  }\n\n  return result\n}"]},"metadata":{},"sourceType":"module"}