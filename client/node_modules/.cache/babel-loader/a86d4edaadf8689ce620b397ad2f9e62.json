{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/App.js\";\nimport React from 'react';\nimport Header from \"./components/Header\";\nimport Input from './components/Input';\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css';\nimport { appConfig } from './config.js';\nlet dimensions = appConfig.dimensions;\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\nconst ratio = 4.5;\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n      this.setState({\n        displayResults: false\n      });\n      this.fetchData(keywords, selected_state_name, selected_time_frame);\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.state = {\n      username: \"user\",\n      keywords: [],\n      authenticated: true,\n      displayResults: false,\n      region_state: \"US\",\n      selected_time_frame: \"today 5-y\",\n      options: {\n        title: \"Trends Forecast\",\n        x_label: \"Date\",\n        y_label: \"Search interest (%)\",\n        dimensions: dimensions\n      },\n      historical_data: [],\n      forecasted_data: [],\n      rate_table_data: [],\n      growth_table_data: [],\n      x_trans: 85,\n      y_trans: 85\n    };\n    this.myRef = React.createRef();\n  }\n\n  fetchData(keywords, state, selected_time_frame) {\n    let url = appConfig.KEYWORDS_NEW; // let url = \"/new\"\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        keywords: keywords,\n        region_state: state,\n        time_frame: selected_time_frame\n      })\n    }).then(res => res.json()).then(result => {\n      let width = this.myRef.current.offsetWidth;\n      let height = width / ratio;\n      let x_trans = this.state.x_trans;\n      let y_trans = this.state.y_trans;\n      let y_trans2 = this.state.y_trans;\n\n      if (width > 1800) {\n        height = height;\n        x_trans = 80;\n        y_trans = 80;\n        y_trans2 = 80;\n      }\n\n      if (width <= 1800) {\n        height = 1.2 * width / ratio;\n        x_trans = 80;\n        y_trans = 80;\n        y_trans2 = 80;\n      }\n\n      if (width <= 1600) {\n        height = 1.4 * width / ratio;\n        x_trans = 80;\n        y_trans = 80;\n        y_trans2 = 80;\n      }\n\n      if (width <= 1400) {\n        height = 1.6 * width / ratio;\n        x_trans = 70;\n        y_trans = 70;\n        y_trans2 = 70;\n      }\n\n      if (width <= 1200) {\n        height = 1.8 * width / ratio;\n        x_trans = 60;\n        y_trans = 60;\n        y_trans2 = 60;\n      }\n\n      if (width <= 800) {\n        height = 2.8 * width / ratio;\n        x_trans = 40;\n        y_trans = 60;\n        y_trans2 = 60;\n      }\n\n      if (width <= 500) {\n        height = 3.2 * width / ratio;\n        x_trans = 40;\n        y_trans = 40;\n        y_trans2 = keywords.length * 20 + 50;\n      }\n\n      this.setState({\n        keywords: keywords,\n        displayResults: true,\n        region_state: state,\n        selected_time_frame: selected_time_frame,\n        displayResults: true,\n        historical_data: this.get_historical_data(keywords, result),\n        forecasted_data: this.get_forecasted_data(keywords, result),\n        rate_table_data: this.getRateTableData(result.growth_rate_result),\n        growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n        div_height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        y_trans2: y_trans2\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.myRef.current.focus();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    let width = this.myRef.current.offsetWidth;\n    let height = width / ratio;\n    let x_trans = this.state.x_trans;\n    let y_trans = this.state.y_trans;\n    let y_trans2 = this.state.y_trans;\n\n    if (width > 1800) {\n      height = height;\n      x_trans = 80;\n      y_trans = 80;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1800) {\n      height = 1.2 * width / ratio;\n      x_trans = 80;\n      y_trans = 80;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1600) {\n      height = 1.4 * width / ratio;\n      x_trans = 80;\n      y_trans = 80;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1400) {\n      height = 1.6 * width / ratio;\n      x_trans = 70;\n      y_trans = 70;\n      y_trans2 = 70;\n    }\n\n    if (width <= 1200) {\n      height = 1.8 * width / ratio;\n      x_trans = 60;\n      y_trans = 60;\n      y_trans2 = 60;\n    }\n\n    if (width <= 800) {\n      height = 3.2 * width / ratio;\n      x_trans = 40;\n      y_trans = 60;\n      y_trans2 = 60;\n    }\n\n    if (width <= 500) {\n      height = 4 * width / ratio;\n      x_trans = 40;\n      y_trans = 40;\n      y_trans2 = this.state.keywords.length * 30 + 10;\n    }\n\n    this.setState({\n      div_height: height,\n      x_trans: x_trans,\n      y_trans: y_trans,\n      y_trans2: y_trans2\n    });\n  }\n\n  render() {\n    if (this.state.authenticated) {\n      // console.log(\"##\")\n      // console.log(this.state.y_trans)\n      // console.log(this.state.y_trans2)\n      // console.log(\"----\")\n      return React.createElement(\"div\", {\n        ref: this.myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main_results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, this.state.displayResults ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"results_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"map_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        height: this.state.div_height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"plot_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Test_Plot_Dates, {\n        options: this.state.options,\n        historical_data: this.state.historical_data,\n        forecasted_data: this.state.forecasted_data,\n        number_of_series: this.state.forecasted_data.length,\n        keywords: this.state.keywords,\n        height: this.state.div_height,\n        x_trans: this.state.x_trans,\n        y_trans: this.state.y_trans,\n        y_trans2: this.state.y_trans2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"tables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.rate_table_data,\n        title: \"Growth Rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.growth_table_data,\n        title: \"Projected growth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }))));\n    } else {\n      return React.createElement(\"div\", {\n        ref: this.myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Login, {\n        callbackFromLogin: this.toLoginCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }));\n    }\n  }\n\n  getGrowthTableData(data) {\n    let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: headers\n    };\n    return result;\n  }\n\n  getRateTableData(data) {\n    let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"];\n    let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: table_headers\n    };\n    return result;\n  }\n\n  get_historical_data(keywords, result) {\n    let data = [];\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword];\n      let arr = Object.keys(result[k_w][MA_Day_5 + k_w]).slice(4, 260).map(function (key) {\n        return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7), key.substring(8, 10)), result[k_w][MA_Day_5 + k_w][key], result[k_w][LOWER_BAND + k_w][key], result[k_w][UPPER_BAND + k_w][key]];\n      });\n      data.push(arr);\n    }\n\n    return data;\n  }\n\n  get_forecasted_data(keywords, result) {\n    let data = [];\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword];\n      let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(function (key) {\n        return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7), key.substring(8, 10)), result[keywords[keyword] + \"F\"][MA_Day_5 + k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND + k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND + k_w][key]];\n      });\n      data.push(arr);\n    }\n\n    return data;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/App.js"],"names":["React","Header","Input","Row","Col","Login","Table","Chart","Test_Plot_Dates","capitalizeString","appConfig","dimensions","MA_Day_5","LOWER_BAND","UPPER_BAND","ratio","App","PureComponent","constructor","props","fetchCallback","keywords","selected_state_name","selected_time_frame","setState","displayResults","fetchData","updateWindowDimensions","bind","state","username","authenticated","region_state","options","title","x_label","y_label","historical_data","forecasted_data","rate_table_data","growth_table_data","x_trans","y_trans","myRef","createRef","url","KEYWORDS_NEW","fetch","method","headers","body","JSON","stringify","time_frame","then","res","json","result","width","current","offsetWidth","height","y_trans2","length","get_historical_data","get_forecasted_data","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","div_height","componentDidMount","window","addEventListener","focus","componentWillUnmount","removeEventListener","render","toLoginCallback","data","arr","Object","keys","map","key","table_headers","keyword","index","k_w","slice","Date","UTC","substring","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css'\n\nimport { appConfig } from './config.js';\n\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\nconst ratio = 4.5;\n\n\n\nclass App extends React.PureComponent {\n  \n    constructor(props){\n      super(props);\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n      this.state = {\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        selected_time_frame: \"today 5-y\",\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n        historical_data: [],\n        forecasted_data: [],\n        rate_table_data: [],\n        growth_table_data: [],\n        x_trans: 85,\n        y_trans: 85\n      };\n\n      this.myRef = React.createRef();\n\n    }\n\n    fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(keywords, selected_state_name, selected_time_frame)\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n        let url = appConfig.KEYWORDS_NEW;\n        // let url = \"/new\"\n        \n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: keywords, region_state: state, time_frame: selected_time_frame\n          }),\n        }).then(res => res.json())\n            .then(\n            (result) => {\n\n              let width = this.myRef.current.offsetWidth;\n              let height = width/(ratio);\n              let x_trans = this.state.x_trans;\n              let y_trans = this.state.y_trans;\n              let y_trans2 = this.state.y_trans;\n\n              if(width>1800){\n                height = height;\n                x_trans = 80;\n                y_trans = 80;\n                y_trans2 = 80;\n              }\n\n              if(width<=1800){\n                height = (1.2)*width/(ratio);\n                x_trans = 80;\n                y_trans = 80;\n                y_trans2 = 80;\n              }\n        \n              if(width<=1600){\n                height = (1.4)*width/(ratio);\n                x_trans = 80;\n                y_trans = 80;\n                y_trans2 = 80;\n              }\n              \n              if(width<=1400){\n                height = (1.6)*width/(ratio);\n                x_trans = 70;\n                y_trans = 70;\n                y_trans2 = 70;\n              }\n        \n              if(width<=1200){\n                height = (1.8)*width/(ratio);\n                x_trans = 60;\n                y_trans = 60;\n                y_trans2 = 60;\n              }\n        \n              if(width<=800){\n                height = (2.8)*width/(ratio);\n                x_trans = 40;\n                y_trans = 60;\n                y_trans2 = 60;\n              }\n        \n              if(width<=500){\n                height = (3.2)*width/(ratio);\n                x_trans = 40;\n                y_trans = 40;\n                y_trans2 = keywords.length*20 + 50;\n              }\n\n              this.setState({\n                  keywords: keywords,\n                  displayResults: true,\n                  region_state: state,\n                  selected_time_frame: selected_time_frame,\n                  displayResults: true,\n                  historical_data: this.get_historical_data(keywords, result),\n                  forecasted_data: this.get_forecasted_data(keywords, result),\n                  rate_table_data: this.getRateTableData(result.growth_rate_result),\n                  growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n                  div_height: height,\n                  x_trans: x_trans,\n                  y_trans: y_trans,\n                  y_trans2: y_trans2,\n              });\n            })\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n      this.myRef.current.focus();\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n      let width = this.myRef.current.offsetWidth;\n      let height = width/(ratio);\n      let x_trans = this.state.x_trans;\n      let y_trans = this.state.y_trans;\n      let y_trans2 = this.state.y_trans;\n\n      if(width>1800){\n        height = height;\n        x_trans = 80;\n        y_trans = 80;\n        y_trans2 = 80;\n      }\n\n      if(width<=1800){\n        height = (1.2)*width/(ratio);\n        x_trans = 80;\n        y_trans = 80;\n        y_trans2 = 80;\n      }\n\n      if(width<=1600){\n        height = (1.4)*width/(ratio);\n        x_trans = 80;\n        y_trans = 80;\n        y_trans2 = 80;\n      }\n      \n      if(width<=1400){\n        height = (1.6)*width/(ratio);\n        x_trans = 70;\n        y_trans = 70;\n        y_trans2 = 70;\n      }\n\n      if(width<=1200){\n        height = (1.8)*width/(ratio);\n        x_trans = 60;\n        y_trans = 60;\n        y_trans2 = 60;\n      }\n\n      if(width<=800){\n        height = (3.2)*width/(ratio);\n        x_trans = 40;\n        y_trans = 60;\n        y_trans2 = 60;\n      }\n\n      if(width<=500){\n        height = (4)*width/(ratio);\n        x_trans = 40;\n        y_trans = 40;\n        y_trans2 = this.state.keywords.length*30 + 10;\n      }\n\n      this.setState({\n        div_height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        y_trans2: y_trans2,\n      });\n    }\n\n    render() {\n\n        if (this.state.authenticated) {\n        // console.log(\"##\")\n        // console.log(this.state.y_trans)\n        // console.log(this.state.y_trans2)\n        // console.log(\"----\")\n\n        return (\n          <div ref={this.myRef}>\n            <div className=\"main_results\">\n            {this.state.displayResults ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"results_div\">\n                {/* <Row>  */}\n                    <div className=\"map_div\">\n                      <Chart height={this.state.div_height} />\n                      {/* <Chart callbackFromApp={this.mapCallback}/> */}\n                    </div>\n                    <div id=\"plot_div\"> \n                        <Test_Plot_Dates options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} y_trans2={this.state.y_trans2} />\n                        {/* <Plot options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} /> */}\n                    </div>\n                {/* </Row>  */}\n              </div>\n              <div className=\"tables\">\n                <Row>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.rate_table_data} title={\"Growth Rate\"}/>\n                    </div>\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.growth_table_data} title={\"Projected growth\"} />\n                    </div>\n                </Row>\n              </div>\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"intro\">\n              </div>\n            </div>\n            )\n          }\n          </div>\n        </div>\n      );\n        } else{\n        return (\n        <div ref={this.myRef}>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n        </div>);      \n        }\n    }\n    \n      getGrowthTableData(data){\n        let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"]\n        \n        \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n    \n      getRateTableData(data){\n        let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"]\n        let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: table_headers\n        }\n    \n        return result;\n      }\n\n      get_historical_data(keywords, result){\n        let data = []\n\n        for (let keyword in keywords) {  \n            let index = 0;\n            let k_w = keywords[keyword]\n            let arr = Object.keys(result[k_w][MA_Day_5+k_w]).slice(4,260).map(\n            function(key){\n                return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n            );\n            data.push(arr)\n        }\n\n        return data;\n    }\n    \n    get_forecasted_data(keywords, result){\n    let data = []\n\n    for (let keyword in keywords) {  \n        let index = 0;\n        let k_w = keywords[keyword]\n        let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n        function(key){\n            return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n        }\n        );\n        data.push(arr)\n    }\n\n    return data;\n    }\n}\n  \n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}