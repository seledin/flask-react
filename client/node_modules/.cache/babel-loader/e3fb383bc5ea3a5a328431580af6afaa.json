{"ast":null,"code":"import React from'react';import{get_y_axis,get_y_axis_label}from\"../utils_dates/graphics\";// class AxisY extends React.PureComponent {\n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//       return (\n//         <g>\n//             <g dangerouslySetInnerHTML={{ __html: get_y_axis(0, 0, this.props.dimensions.height, this.props.lower_bound/10, this.props.upper_bound/10) }} />\n//             <g dangerouslySetInnerHTML={{ __html: get_y_axis_label(this.props.y_label, this.props.dimensions.height, this.props.dimensions.x_trans) }} />\n//         </g>\n//       );\n//     }\n//   }\n//   export default AxisY;\nReact.createElement(\"path\",{fill:\"none\",\"data-z-index\":\"0\",class:\"plot_mark_line\",d:\"M 0 0 L 0 \".concat(props.height),visibility:\"mark_line.visibility\"});export var AxisY=function AxisY(props){return React.createElement(\"g\",null,React.createElement(\"g\",{transform:\"translate(\".concat(-(props.x_trans/2+10),\",\").concat(props.height/2,\")\")},React.createElement(\"text\",{x:\"0\",\"text-anchor\":\"middle\",transform:\"rotate(-90 0,0)\",class:\"plot_yaxis_title\",y:\"0\"},React.createElement(\"tspan\",null,\"$\",props.title))));};export default AxisY;// export function get_y_axis_label(title, height, x_trans){\n//     return `<g transform=\"translate(${-(x_trans/2 + 10)},${height/2})\"><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>${title}</tspan></text></g>`\n// }\n// export function get_y_axis(x, y, height, lower_index, upper_index) {\n//   let result = [];\n//   let lines_number = upper_index - lower_index;\n//   let frame = height / lines_number;\n//   // let lower_index = 10 - lines_number;\n//   let difference = Math.abs(lower_index)\n//   // for(let i=0; i<=lines_number; i++){\n//   //     result.push(make_y_tick(-20, height - frame*(i),i * 10));\n//   // }\n//   for(let i=lower_index; i<=upper_index; i++){\n//       result.push(make_y_tick(-20, height - frame*(i -lower_index),i * 10));\n//   }\n//   let line = `M ${x} ${y} L ${x} ${y + height}`;\n//   result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n//   return result;\n// }\n// function make_y_tick(x, y, value) {\n//   return `<text x=\"${x}\" text-anchor=\"end\" class=\"plot_ytick\" y=\"${y}\">${value}</text>`\n// }","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/components/plot3/src/plot/parts/AxisY.js"],"names":["React","get_y_axis","get_y_axis_label","props","height","AxisY","x_trans","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,yBAA7C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,4BAAM,IAAI,CAAC,MAAX,CAAkB,eAAa,GAA/B,CAAmC,KAAK,CAAC,gBAAzC,CAA0D,CAAC,qBAAeC,KAAK,CAACC,MAArB,CAA3D,CAA0F,UAAU,uBAApG,GAGA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAAAF,KAAK,CAAI,CAC5B,MACE,8BACE,yBAAG,SAAS,qBAAe,EAAEA,KAAK,CAACG,OAAN,CAAc,CAAd,CAAkB,EAApB,CAAf,aAA0CH,KAAK,CAACC,MAAN,CAAa,CAAvD,KAAZ,EAAyE,4BAAM,CAAC,CAAC,GAAR,CAAY,cAAY,QAAxB,CAAiC,SAAS,CAAC,iBAA3C,CAA6D,KAAK,CAAC,kBAAnE,CAAsF,CAAC,CAAC,GAAxF,EAA4F,qCAASD,KAAK,CAACI,KAAf,CAA5F,CAAzE,CADF,CADF,CAKD,CANM,CAQP,cAAeF,CAAAA,KAAf,CAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { get_y_axis, get_y_axis_label } from \"../utils_dates/graphics\"\n\n// class AxisY extends React.PureComponent {\n//     constructor(props) {\n//         super(props);\n//     }\n    \n//     render() {\n//       return (\n//         <g>\n//             <g dangerouslySetInnerHTML={{ __html: get_y_axis(0, 0, this.props.dimensions.height, this.props.lower_bound/10, this.props.upper_bound/10) }} />\n//             <g dangerouslySetInnerHTML={{ __html: get_y_axis_label(this.props.y_label, this.props.dimensions.height, this.props.dimensions.x_trans) }} />\n//         </g>\n//       );\n//     }\n//   }\n\n//   export default AxisY;\n\n\n\n<path fill=\"none\" data-z-index=\"0\" class=\"plot_mark_line\" d={`M 0 0 L 0 ${props.height}`} visibility={`mark_line.visibility`} />         \n\n\nexport const AxisY = props => {\n  return (\n    <g>\n      <g transform={`translate(${-(props.x_trans/2 + 10)},${props.height/2})`}><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>${props.title}</tspan></text></g>\n    </g>\n  )\n};\n\nexport default AxisY\n\n// export function get_y_axis_label(title, height, x_trans){\n//     return `<g transform=\"translate(${-(x_trans/2 + 10)},${height/2})\"><text x=\"0\" text-anchor=\"middle\" transform=\"rotate(-90 0,0)\" class=\"plot_yaxis_title\" y=\"0\"><tspan>${title}</tspan></text></g>`\n// }\n\n// export function get_y_axis(x, y, height, lower_index, upper_index) {\n//   let result = [];\n\n//   let lines_number = upper_index - lower_index;\n\n//   let frame = height / lines_number;\n\n//   // let lower_index = 10 - lines_number;\n\n//   let difference = Math.abs(lower_index)\n\n//   // for(let i=0; i<=lines_number; i++){\n//   //     result.push(make_y_tick(-20, height - frame*(i),i * 10));\n//   // }\n\n//   for(let i=lower_index; i<=upper_index; i++){\n//       result.push(make_y_tick(-20, height - frame*(i -lower_index),i * 10));\n//   }\n\n//   let line = `M ${x} ${y} L ${x} ${y + height}`;\n//   result.push(`<path d=\"${line}\" fill=\"none\" class=\"plot_line\" data-z-index=\"0\" />`)\n\n//   return result;\n// }\n\n// function make_y_tick(x, y, value) {\n//   return `<text x=\"${x}\" text-anchor=\"end\" class=\"plot_ytick\" y=\"${y}\">${value}</text>`\n// }\n"]},"metadata":{},"sourceType":"module"}