{"ast":null,"code":"export function add(a,b){return a+b;}// get random int\nexport function get_random(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min;}//get random double\nexport function get_random_double(min,max){min=Math.ceil(min);max=Math.floor(max);return Math.floor(Math.random()*(max-min+1))+min;}export function get_random_array(size,min_x,max_x,min_y,max_y){var result=[];for(var i=0;i<size;i++){result.push([get_random(min_x,max_x),get_random(min_y,max_y)]);}return result;}export function get_random_area_array(size,min_x,max_x,min_y,max_y,s_dev){var result=[];for(var i=0;i<size;i++){var y=get_random(min_y,max_y);result.push([i,y-s_dev,y+s_dev,y]);}return result;}export function scale_data(data,ranges,width,height){var result=[];var x_diff=ranges.max_x-ranges.min_x;var y_diff=ranges.max_y-ranges.min_y;var x_frame=width/x_diff;var y_frame=height/y_diff;for(var i=0;i<data.length;i++){result.push([data[i][0]*x_frame,height-data[i][1]*y_frame]);}return result;}export function scale_area_data(area_data,ranges,width,height){var result=[];var x_diff=ranges.max_x-ranges.min_x;var y_diff=ranges.max_y-ranges.min_y;var x_frame=width/x_diff;var y_frame=height/y_diff;for(var i=0;i<area_data.length;i++){result.push([area_data[i][0]*x_frame,height-area_data[i][1]*y_frame,height-area_data[i][2]*y_frame,height-area_data[i][3]*y_frame]);}return result;}/////////////\n// MOCKED DATA\nexport function get_random_mock_array(size,min_x,max_x,min_y,max_y){var result=[];for(var i=min_x;i<=max_x;i++){result.push([i,get_random(min_y,max_y)]);}return result;}// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\nexport function get_random_colors(number){var colors=[\"#a2cd9f\",\"#6ef4ef\",\"#ea6e2e\",\"#6e224c\",\"#edfc35\",\"\",\"\"];return colors.slice(0,number);}export function get_box_height(number){if(number===0){return 0;}return 25*(number+1)+10;}///////////////////////////////\n// MOCKED DATA with DATES\nexport function get_random_mock_array_dates(dates,min_y,max_y){var result=[];for(var i=0;i<dates.length;i++){result.push([i,dates[i],get_random(min_y,max_y)]);}return result;}// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n//     return result;\n// }\nexport function scale_data_dates(data,ranges,width,height){var result=[];var x_diff=ranges.max_x-ranges.min_x;var y_diff=ranges.max_y-ranges.min_y;var x_frame=width/x_diff;var y_frame=height/y_diff;for(var i=0;i<data.length;i++){result.push([data[i][0]*x_frame,data[i][1],height-data[i][2]*y_frame]);}return result;}export function scale_data_area_dates(data,ranges,width,height){var prefix=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var result=[];var x_diff=ranges.max_x-ranges.min_x;var y_diff=ranges.max_y-ranges.min_y;var x_frame=width/x_diff;var y_frame=height/y_diff;for(var i=0;i<data.length;i++){// console.log(data[i])\n// if(i<255){\n//     result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n// }else{\n//     result.push([(data[i][0] + 256) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n// }\nresult.push([(i+prefix)*x_frame,data[i][1],height-data[i][2]*y_frame,height-data[i][3]*y_frame,height-data[i][4]*y_frame]);}// console.log(result)\nreturn result;}export function get_random_mock_area_array_dates(dates,min_y,max_y){var result=[];for(var i=0;i<dates.length;i++){var s_d1=get_random(2,8);var s_d2=get_random(2,8);var random=get_random(min_y,max_y);result.push([i,dates[i],random,random-s_d1,random+s_d2]);}return result;}export function get_data_mocks_area_DATES(data_mocks_area_DATES1,data_mocks_area_DATES2,number){var result=[];for(var i=0;i<number;i++){result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]));}return result;}export function scale_data_mocks(data_mocks_area_DATES1,data_mocks_area_DATES2,ranges,dimensions,number_of_plots){var scaled_data_mocks_area_DATES=[];var scaled_data_mocks_area_future_DATES=[];for(var i=0;i<number_of_plots;i++){scaled_data_mocks_area_DATES.push(scale_data_area_dates(data_mocks_area_DATES1[i],ranges,dimensions.width,dimensions.height));scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i],ranges,dimensions.width,dimensions.height,256));}return[scaled_data_mocks_area_DATES,scaled_data_mocks_area_future_DATES];}export function get_data_map_area_DATES(data_mocks_area_DATES,array_length_dates,number_of_plots){var data_map_area_DATES=[];for(var i=0;i<array_length_dates;i++){var y_data_normal=[];var y_data_min=[];var y_data_max=[];var date=void 0;date=data_mocks_area_DATES[0][i][1];for(var j=0;j<number_of_plots;j++){y_data_normal.push(data_mocks_area_DATES[j][i][2]);y_data_min.push(data_mocks_area_DATES[j][i][3]);y_data_max.push(data_mocks_area_DATES[j][i][4]);}data_map_area_DATES[i]=[i,date,y_data_normal,y_data_min,y_data_max];}return data_map_area_DATES;}export function capitalizeString(string){return string.charAt(0).toUpperCase()+string.slice(1);}","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/utils_dates/functions.js"],"names":["add","a","b","get_random","min","max","Math","ceil","floor","random","get_random_double","get_random_array","size","min_x","max_x","min_y","max_y","result","i","push","get_random_area_array","s_dev","y","scale_data","data","ranges","width","height","x_diff","y_diff","x_frame","y_frame","length","scale_area_data","area_data","get_random_mock_array","get_random_colors","number","colors","slice","get_box_height","get_random_mock_array_dates","dates","scale_data_dates","scale_data_area_dates","prefix","get_random_mock_area_array_dates","s_d1","s_d2","get_data_mocks_area_DATES","data_mocks_area_DATES1","data_mocks_area_DATES2","concat","scale_data_mocks","dimensions","number_of_plots","scaled_data_mocks_area_DATES","scaled_data_mocks_area_future_DATES","get_data_map_area_DATES","data_mocks_area_DATES","array_length_dates","data_map_area_DATES","y_data_normal","y_data_min","y_data_max","date","j","capitalizeString","string","charAt","toUpperCase"],"mappings":"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","sourcesContent":["\n\nexport function add(a, b){\n    return a + b;\n}\n\n// get random int\nexport function get_random(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n//get random double\nexport function get_random_double(min, max){\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function get_random_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        result.push([get_random(min_x, max_x), get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\nexport function get_random_area_array(size, min_x, max_x, min_y, max_y, s_dev){\n    let result = [];\n\n    for (let i=0;i< size; i++){\n        let y = get_random(min_y, max_y);\n        result.push([i, y - s_dev, y + s_dev, y])\n    }\n\n    return result;\n}\n\nexport function scale_data(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, height - data[i][1] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_area_data(area_data, ranges, width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<area_data.length; i++){\n        result.push([area_data[i][0] * x_frame, height - area_data[i][1] * y_frame, height - area_data[i][2] * y_frame, height - area_data[i][3] * y_frame])\n    }\n\n    return result;\n}\n\n\n/////////////\n// MOCKED DATA\n\nexport function get_random_mock_array(size, min_x, max_x, min_y, max_y){\n    let result = [];\n\n    for (let i=min_x; i<=max_x; i++){\n        result.push([i, get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n\n// /// RANDOM COLOR\n// export function random_rgba() {\n//     var o = Math.round, r = Math.random, s = 123;\n//     return 'rgb(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + r().toFixed(1) + ')';\n// }\n\n\nexport function get_random_colors(number) {\n    let colors = [\"#a2cd9f\", \"#6ef4ef\", \"#ea6e2e\", \"#6e224c\", \"#edfc35\", \"\", \"\"];\n\n    return colors.slice(0, number);\n}\n\nexport function get_box_height(number){\n    if (number === 0){\n        return 0;\n    }\n    return 25*(number + 1) + 10;\n}\n\n\n///////////////////////////////\n// MOCKED DATA with DATES\n\n\nexport function get_random_mock_array_dates(dates, min_y, max_y){\n    let result = [];\n\n    for (let i=0; i<dates.length; i++){\n        result.push([i, dates[i] ,get_random(min_y, max_y)])\n    }\n\n    return result;\n}\n\n// export function get_random_mock_array_area_dates(dates, min_y, max_y){\n//     let result = [];\n//     let std\n\n//     for (let i=0; i<dates.length; i++){\n//         result.push([i, dates[i] ,get_random(min_y, max_y)])\n//     }\n\n//     return result;\n// }\n\nexport function scale_data_dates(data, ranges ,width, height){\n    let result = [];\n\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame ])\n    }\n\n    return result;\n}\n\nexport function scale_data_area_dates(data, ranges ,width, height, prefix=0){\n    let result = [];\n    let x_diff = ranges.max_x - ranges.min_x;\n    let y_diff = ranges.max_y - ranges.min_y;\n\n    let x_frame = width/x_diff;\n    let y_frame = height/y_diff;\n\n    for (let i=0; i<data.length; i++){\n        // console.log(data[i])\n        // if(i<255){\n        //     result.push([data[i][0] * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }else{\n        //     result.push([(data[i][0] + 256) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        // }\n\n        result.push([(i+prefix) * x_frame, data[i][1], height - data[i][2] * y_frame, height - data[i][3] * y_frame, height - data[i][4] * y_frame ])\n        \n    }\n\n    // console.log(result)\n\n    return result;\n}\n\nexport function get_random_mock_area_array_dates(dates, min_y, max_y){\n    let result = [];\n    \n\n\n\n    for (let i=0; i<dates.length; i++){\n        let s_d1 = get_random(2,8);\n        let s_d2 = get_random(2,8);\n        let random = get_random(min_y, max_y);\n        result.push([i, dates[i], random, random - s_d1, random + s_d2])\n    }\n\n    return result;\n}\n\nexport function get_data_mocks_area_DATES(data_mocks_area_DATES1, data_mocks_area_DATES2, number){\n    let result = []\n\n    for(let i=0;i<number;i++){\n        result.push(data_mocks_area_DATES1[i].concat(data_mocks_area_DATES2[i]))\n    }\n\n    return result\n\n}\n\nexport function scale_data_mocks(data_mocks_area_DATES1, data_mocks_area_DATES2, ranges, dimensions, number_of_plots){\n    let scaled_data_mocks_area_DATES = []\n    let scaled_data_mocks_area_future_DATES = []\n\n    for (let i=0; i<number_of_plots; i++){\n        scaled_data_mocks_area_DATES.push(scale_data_area_dates(data_mocks_area_DATES1[i], ranges, dimensions.width, dimensions.height));\n        scaled_data_mocks_area_future_DATES.push(scale_data_area_dates(data_mocks_area_DATES2[i], ranges, dimensions.width, dimensions.height, 256));\n    }\n\n    return [scaled_data_mocks_area_DATES, scaled_data_mocks_area_future_DATES]\n}\n\nexport function get_data_map_area_DATES(data_mocks_area_DATES, array_length_dates, number_of_plots){\n\n    let data_map_area_DATES = []\n\n    for(let i = 0; i<array_length_dates; i++) {\n        let y_data_normal = [];\n        let y_data_min = [];\n        let y_data_max = [];\n        let date;\n      \n        date = data_mocks_area_DATES[0][i][1]\n      \n      \n        for(let j=0; j<number_of_plots; j++) {\n          y_data_normal.push(data_mocks_area_DATES[j][i][2])\n          y_data_min.push(data_mocks_area_DATES[j][i][3])\n          y_data_max.push(data_mocks_area_DATES[j][i][4])\n        }\n      \n        data_map_area_DATES[i] = [i, date, y_data_normal, y_data_min, y_data_max]\n    }\n\n    return data_map_area_DATES;\n}\n\nexport function capitalizeString(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n"]},"metadata":{},"sourceType":"module"}