{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/components/plot/src/plot/parts/AxisX.js\";\nimport React from 'react';\nexport class AxisX extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"g\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, prepare_x_axis(this.props.dimensions.width, this.props.dimensions.height, this.props.ticks, this.props.dates, this.props.x_label, this.props.dimensions.y_trans_bottom));\n  }\n\n}\nexport default AxisX;\n\nfunction make_x_tick(x, y) {\n  let line = `M ${x} ${y} L ${x} ${y + 10}`;\n  return React.createElement(\"path\", {\n    key: x,\n    className: \"plot_xmark\",\n    d: line,\n    \"data-z-index\": \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  });\n}\n\nfunction prepare_x_axis(width, height, ticks, data_mock, title, y_trans) {\n  let result = [];\n  let ticks_number = ticks + 1;\n\n  if (width <= 700) {\n    ticks_number = 6 + 1;\n  }\n\n  let length = Object.keys(data_mock).length;\n  let data_frame = Math.floor(length / (ticks_number - 1));\n  let frame = width / (ticks_number - 1);\n\n  for (let i = 0; i < ticks_number; i++) {\n    let point = frame * i;\n    result.push(make_x_tick(point, height));\n  }\n\n  if (width <= 700) {\n    for (let i = 0; i < ticks_number; i++) {\n      result.push(React.createElement(\"text\", {\n        key: i,\n        x: frame * i,\n        className: \"plot_xtick\",\n        textAnchor: \"middle\",\n        y: height + 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, formatDate_monthly(data_mock[data_frame * i][1])));\n    }\n  } else {\n    for (let i = 0; i < ticks_number; i++) {\n      result.push(React.createElement(\"text\", {\n        key: i,\n        x: frame * i,\n        className: \"plot_xtick\",\n        textAnchor: \"middle\",\n        y: height + 25,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, formatDate(data_mock[data_frame * i][1])));\n    }\n  }\n\n  let line = `M 0 ${height} H ${width}`;\n  let height_trans = y_trans;\n\n  if (width > 700) {\n    result.push(React.createElement(\"text\", {\n      x: width / 2,\n      key: 9911141,\n      textAnchor: \"middle\",\n      className: \"plot_xaxis_title\",\n      y: height + height_trans - 30,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"tspan\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, title)));\n  } else {\n    result.push(React.createElement(\"text\", {\n      x: width / 2,\n      key: 2,\n      textAnchor: \"middle\",\n      className: \"plot_xaxis_title\",\n      y: height + 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"tspan\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, title)));\n  }\n\n  result.push(React.createElement(\"path\", {\n    key: height,\n    d: line,\n    fill: \"none\",\n    className: \"plot_line\",\n    \"data-z-index\": \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }));\n  return result;\n}\n\nfunction formatDate(d) {\n  let date = new Date(d);\n  var dd = date.getDate();\n  var mm = date.getMonth() + 1;\n  var yyyy = date.getFullYear();\n\n  if (dd < 10) {\n    dd = '0' + dd;\n  }\n\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n\n  ;\n  return d = dd + '-' + mm + '-' + yyyy;\n}\n\nfunction formatDate_monthly(d) {\n  let date = new Date(d);\n  var dd = date.getDate();\n  var mm = date.getMonth() + 1;\n  var yyyy = date.getFullYear();\n\n  if (dd < 10) {\n    dd = '0' + dd;\n  }\n\n  if (mm < 10) {\n    mm = '0' + mm;\n  }\n\n  ;\n  return d = mm + '-' + yyyy;\n}","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/components/plot/src/plot/parts/AxisX.js"],"names":["React","AxisX","PureComponent","constructor","props","render","prepare_x_axis","dimensions","width","height","ticks","dates","x_label","y_trans_bottom","make_x_tick","x","y","line","data_mock","title","y_trans","result","ticks_number","length","Object","keys","data_frame","Math","floor","frame","i","point","push","formatDate_monthly","formatDate","height_trans","d","date","Date","dd","getDate","mm","getMonth","yyyy","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\n\nexport class AxisX extends React.PureComponent {\t\n\n  constructor(props) {\n    super(props);\n  }\n\n  render(){\n    return (\n      <g>\n        { prepare_x_axis(this.props.dimensions.width, this.props.dimensions.height, this.props.ticks, this.props.dates, this.props.x_label, this.props.dimensions.y_trans_bottom) }\n      </g>\n    )\n  }\n}\n\nexport default AxisX\n\n\n\nfunction make_x_tick(x, y) {\n  let line = `M ${x} ${y} L ${x} ${y + 10}`;\n  return <path key={x} className=\"plot_xmark\" d={line} data-z-index=\"0\" />\n}\n\nfunction prepare_x_axis(width, height, ticks, data_mock, title, y_trans){\n  let result = []\n\n  let ticks_number = ticks + 1;\n    \n  if(width<=700) {\n    ticks_number = 6 + 1;\n  }\n\n  let length = Object.keys(data_mock).length;\n  let data_frame = Math.floor(length/(ticks_number-1));\n\n  let frame = width / (ticks_number - 1)\n\n  for (let i=0; i<ticks_number; i++){\n    let point = frame * i;\n    result.push(make_x_tick(point, height))\n  }\n\n  if(width<=700){\n    for(let i=0; i<ticks_number; i++){\n      result.push(<text key={i} x={frame*i} className=\"plot_xtick\" textAnchor=\"middle\" y={height + 25}>{formatDate_monthly(data_mock[data_frame*i][1])}</text>)\n    }\n  } else {\n    for(let i=0; i<ticks_number; i++){\n      result.push(<text key={i} x={frame*i} className=\"plot_xtick\" textAnchor=\"middle\" y={height + 25}>{formatDate(data_mock[data_frame*i][1])}</text>)\n    }\n  }\n\n  let line = `M 0 ${height} H ${width}`;\n  let height_trans = y_trans\n\n  if(width>700) {\n    result.push(<text x={width/2} key={9911141} textAnchor=\"middle\" className=\"plot_xaxis_title\" y={height + height_trans - 30}><tspan>{title}</tspan></text>)\n  } else {\n    result.push(<text x={width/2} key={2} textAnchor=\"middle\" className=\"plot_xaxis_title\" y={height +40}><tspan>{title}</tspan></text>)\n  }\n\n  result.push(<path key={height} d={line} fill=\"none\" className=\"plot_line\" data-z-index=\"0\" />)\n\n  return result \n}\n\n\n\nfunction formatDate(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = dd+'-'+mm+'-'+yyyy\n}\n\nfunction formatDate_monthly(d)\n {\n  let date = new Date(d)\n  var dd = date.getDate(); \n  var mm = date.getMonth()+1;\n  var yyyy = date.getFullYear(); \n  if(dd<10){dd='0'+dd} \n  if(mm<10){mm='0'+mm};\n  return d = mm+'-'+yyyy\n}"]},"metadata":{},"sourceType":"module"}