{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/App.js\";\nimport React from 'react';\nimport Header from \"./components/Header\";\nimport Input from './components/Input';\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport Loader from \"react-loader-spinner\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { get_min_value, get_max_value } from './utils_dates/functions';\nimport './styles/plot.css';\nimport { appConfig } from './config.js';\nlet dimensions = appConfig.dimensions;\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\nconst ratio = 4.5;\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n      this.setState({\n        displayResults: false\n      });\n      this.fetchData(keywords, this.state.region_state, selected_time_frame);\n    };\n\n    this.mapCallback = state => {\n      // console.log(\"state \" + state)\n      this.setState({\n        displayResults: false\n      });\n      this.fetchData(this.state.keywords, state, this.state.selected_time_frame);\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n    this.state = {\n      username: \"user\",\n      keywords: [],\n      authenticated: true,\n      displayResults: false,\n      region_state: \"US\",\n      selected_time_frame: \"today 5-y\",\n      options: {\n        title: \"Trends Forecast\",\n        x_label: \"Date\",\n        y_label: \"Search interest (%)\",\n        dimensions: dimensions\n      },\n      historical_data: [],\n      forecasted_data: [],\n      rate_table_data: [],\n      growth_table_data: [],\n      x_trans: 85,\n      y_trans: 85,\n      fetching_results: false\n    };\n    this.myRef = React.createRef();\n  }\n\n  fetchData(keywords, state, selected_time_frame) {\n    let url = appConfig.KEYWORDS_NEW; // let url = \"/new\"\n\n    this.setState({\n      fetching_results: true\n    }); // console.log(\"state \" + state)\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        keywords: keywords,\n        region_state: state,\n        time_frame: selected_time_frame\n      })\n    }).then(res => res.json()).then(result => {\n      // console.log(\"result:\")\n      // console.log(result)\n      let width = this.myRef.current.offsetWidth;\n      let height = width / ratio;\n      let x_trans = this.state.x_trans;\n      let y_trans = this.state.y_trans;\n      let x_trans2 = this.state.x_trans;\n      let y_trans2 = this.state.y_trans;\n\n      if (width > 1800) {\n        height = height;\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n\n      if (width <= 1800) {\n        height = 1.2 * width / ratio;\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n\n      if (width <= 1600) {\n        height = 1.4 * width / ratio;\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n\n      if (width <= 1400) {\n        height = 1.6 * width / ratio;\n        x_trans = 70;\n        y_trans = 70;\n        x_trans2 = 50;\n        y_trans2 = 70;\n      }\n\n      if (width <= 1200) {\n        height = 1.8 * width / ratio;\n        x_trans = 60;\n        y_trans = 60;\n        x_trans2 = 50;\n        y_trans2 = 60;\n      } // if(width<=800){\n      //   height = (2.2)*width/(ratio);\n      //   x_trans = 60;\n      //   y_trans = 20;\n      //   x_trans2 = 20;\n      //   y_trans2 = 60;\n      // }\n\n\n      if (width <= 700) {\n        height = 4 * width / ratio;\n        x_trans = 60;\n        y_trans = 20;\n        x_trans2 = 50;\n        y_trans2 = keywords.length * 14 + 80;\n      }\n\n      this.setState({\n        keywords: keywords,\n        displayResults: true,\n        region_state: state,\n        selected_time_frame: selected_time_frame,\n        displayResults: true,\n        historical_data: this.get_historical_data(keywords, result),\n        forecasted_data: this.get_forecasted_data(keywords, result),\n        rate_table_data: this.getRateTableData(result.growth_rate_result),\n        growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n        div_height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        x_trans2: x_trans2,\n        y_trans2: y_trans2,\n        fetching_results: false\n      });\n    }).catch(function (error) {\n      console.log(\"error:\"); //  this.setState({\n      //   fetching_results: false\n      // });\n\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    this.myRef.current.focus();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    let width = this.myRef.current.offsetWidth;\n    let height = width / ratio;\n    let x_trans = this.state.x_trans;\n    let y_trans = this.state.y_trans;\n    let x_trans2 = this.state.x_trans;\n    let y_trans2 = this.state.y_trans;\n\n    if (width > 1800) {\n      height = height;\n      x_trans = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1800) {\n      height = 1.2 * width / ratio;\n      x_trans = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1600) {\n      height = 1.4 * width / ratio;\n      x_trans = 80;\n      y_trans = 80;\n      x_trans2 = 50;\n      y_trans2 = 80;\n    }\n\n    if (width <= 1400) {\n      height = 1.6 * width / ratio;\n      x_trans = 70;\n      y_trans = 70;\n      x_trans2 = 50;\n      y_trans2 = 70;\n    }\n\n    if (width <= 1200) {\n      height = 1.8 * width / ratio;\n      x_trans = 60;\n      y_trans = 60;\n      x_trans2 = 50;\n      y_trans2 = 70;\n    } // if(width<=800){\n    //   height = (2.2)*width/(ratio);\n    //   x_trans = 60;\n    //   y_trans = 20;\n    //   x_trans2 = 20;\n    //   y_trans2 = 60;\n    // }\n\n\n    if (width <= 700) {\n      height = 4 * width / ratio;\n      x_trans = 60;\n      y_trans = 20;\n      x_trans2 = 50;\n      y_trans2 = this.state.keywords.length * 14 + 80;\n    }\n\n    this.setState({\n      div_height: height,\n      x_trans: x_trans,\n      y_trans: y_trans,\n      x_trans2: x_trans2,\n      y_trans2: y_trans2\n    });\n  }\n\n  render() {\n    let ranges = {\n      max_x: 261 + 52 + 0,\n      min_x: 0,\n      max_y: 120,\n      min_y: -10\n    };\n\n    if (this.state.displayResults) {\n      let min_y = get_min_value(this.state.historical_data);\n      let max_y = get_max_value(this.state.historical_data);\n      let lower_bound = (Math.ceil((min_y + 1) / 10) - 1) * 10;\n      let upper_bound = Math.ceil((Math.abs(max_y) + 1) / 10) * 10;\n      ranges = {\n        max_x: this.state.historical_data[0].length + this.state.forecasted_data[0].length,\n        min_x: 0,\n        max_y: upper_bound,\n        min_y: lower_bound\n      }; // console.log(\"ranges\")\n      // console.log(ranges)\n    }\n\n    if (this.state.authenticated) {\n      return React.createElement(\"div\", {\n        ref: this.myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main_results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, this.state.keywords.length <= 5 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, this.state.displayResults ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"results_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"map_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        callbackFromApp: this.mapCallback,\n        height: this.state.div_height,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        id: \"plot_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Test_Plot_Dates, {\n        options: this.state.options,\n        ranges: ranges,\n        historical_data: this.state.historical_data,\n        forecasted_data: this.state.forecasted_data,\n        number_of_series: this.state.forecasted_data.length,\n        keywords: this.state.keywords,\n        height: this.state.div_height,\n        x_trans: this.state.x_trans,\n        y_trans: this.state.y_trans,\n        x_trans2: this.state.x_trans2,\n        y_trans2: this.state.y_trans2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"tables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.rate_table_data,\n        title: \"Growth Rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.growth_table_data,\n        title: \"Projected growth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }), this.state.fetching_results ? React.createElement(\"div\", {\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"Oval\",\n        color: \"#007bff\",\n        height: 200,\n        width: 200,\n        timeout: 30000,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Too many keywords\")));\n    } else {\n      return React.createElement(\"div\", {\n        ref: this.myRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(Login, {\n        callbackFromLogin: this.toLoginCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }));\n    }\n  }\n\n  getGrowthTableData(data) {\n    let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: headers\n    };\n    return result;\n  }\n\n  getRateTableData(data) {\n    let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"];\n    let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: table_headers\n    };\n    return result;\n  }\n\n  get_historical_data(keywords, result) {\n    let data = []; // console.log(result)\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword]; // console.log(Object.keys(result[k_w][MA_Day_5+k_w]).length)\n      // let arr = Object.keys(result[k_w][MA_Day_5+k_w]).slice(4,260).map(\n\n      let arr = Object.keys(result[k_w][MA_Day_5 + k_w]).map(function (key) {\n        // console.log(result[k_w][UPPER_BAND+k_w][key])\n        if (index < 4) {\n          return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7) - 1, key.substring(8, 10)), result[k_w][k_w][key], result[k_w][LOWER_BAND + k_w][key], result[k_w][UPPER_BAND + k_w][key]];\n        } else {\n          return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7) - 1, key.substring(8, 10)), result[k_w][MA_Day_5 + k_w][key], result[k_w][LOWER_BAND + k_w][key], result[k_w][UPPER_BAND + k_w][key]];\n        } // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[k_w][k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n        // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n\n      });\n      data.push(arr);\n    }\n\n    return data;\n  }\n\n  get_forecasted_data(keywords, result) {\n    let data = [];\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword]; // console.log(Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).length)\n\n      let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(function (key) {\n        if (index < 4) {\n          return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7) - 1, key.substring(8, 10)), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND + k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND + k_w][key]];\n        } else {\n          return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7) - 1, key.substring(8, 10)), result[keywords[keyword] + \"F\"][MA_Day_5 + k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND + k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND + k_w][key]];\n        } // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n        //return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n        // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n\n      });\n      data.push(arr);\n    }\n\n    return data;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/App.js"],"names":["React","Header","Input","Row","Col","Login","Table","Chart","Test_Plot_Dates","capitalizeString","Loader","get_min_value","get_max_value","appConfig","dimensions","MA_Day_5","LOWER_BAND","UPPER_BAND","ratio","App","PureComponent","constructor","props","fetchCallback","keywords","selected_state_name","selected_time_frame","setState","displayResults","fetchData","state","region_state","mapCallback","updateWindowDimensions","bind","username","authenticated","options","title","x_label","y_label","historical_data","forecasted_data","rate_table_data","growth_table_data","x_trans","y_trans","fetching_results","myRef","createRef","url","KEYWORDS_NEW","fetch","method","headers","body","JSON","stringify","time_frame","then","res","json","result","width","current","offsetWidth","height","x_trans2","y_trans2","length","get_historical_data","get_forecasted_data","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","div_height","catch","error","console","log","componentDidMount","window","addEventListener","focus","componentWillUnmount","removeEventListener","render","ranges","max_x","min_x","max_y","min_y","lower_bound","Math","ceil","upper_bound","abs","toLoginCallback","data","arr","Object","keys","map","key","table_headers","keyword","index","k_w","Date","UTC","substring","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport { capitalizeString } from \"./utils_dates/functions\";\nimport Loader from \"react-loader-spinner\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { get_min_value, get_max_value} from './utils_dates/functions'\nimport './styles/plot.css'\n\nimport { appConfig } from './config.js';\n\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\nconst ratio = 4.5;\n\n\n\nclass App extends React.PureComponent {\n  \n    constructor(props){\n      super(props);\n      this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n\n      this.state = {\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        selected_time_frame: \"today 5-y\",\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n        historical_data: [],\n        forecasted_data: [],\n        rate_table_data: [],\n        growth_table_data: [],\n        x_trans: 85,\n        y_trans: 85,\n        fetching_results: false,\n      };\n\n      this.myRef = React.createRef();\n\n    }\n\n    fetchCallback = (keywords, selected_state_name, selected_time_frame) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(keywords, this.state.region_state, selected_time_frame)\n    }\n\n    mapCallback = (state) => {\n      // console.log(\"state \" + state)\n\n      this.setState({\n        displayResults: false,\n      });\n\n      this.fetchData(this.state.keywords, state, this.state.selected_time_frame)\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n        let url = appConfig.KEYWORDS_NEW;\n        // let url = \"/new\"\n\n        this.setState({\n          fetching_results: true\n        })\n\n        // console.log(\"state \" + state)\n        \n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: keywords, region_state: state, time_frame: selected_time_frame\n          }),\n        }).then(res => res.json())\n            .then(\n            (result) => {\n\n              // console.log(\"result:\")\n              // console.log(result)\n\n              let width = this.myRef.current.offsetWidth;\n              let height = width/(ratio);\n              let x_trans = this.state.x_trans;\n              let y_trans = this.state.y_trans;\n\n              let x_trans2 = this.state.x_trans;\n              let y_trans2 = this.state.y_trans;\n\n              if(width>1800){\n                height = height;\n                x_trans = 80;\n                y_trans = 80;\n                x_trans2 = 50;\n                y_trans2 = 80;\n              }\n        \n              if(width<=1800){\n                height = (1.2)*width/(ratio);\n                x_trans = 80;\n                y_trans = 80;\n                x_trans2 = 50;\n                y_trans2 = 80;\n              }\n        \n              if(width<=1600){\n                height = (1.4)*width/(ratio);\n                x_trans = 80;\n                y_trans = 80;\n                x_trans2 = 50;\n                y_trans2 = 80;\n              }\n              \n              if(width<=1400){\n                height = (1.6)*width/(ratio);\n                x_trans = 70;\n                y_trans = 70;\n                x_trans2 = 50;\n                y_trans2 = 70;\n              }\n        \n              if(width<=1200){\n                height = (1.8)*width/(ratio);\n                x_trans = 60;\n                y_trans = 60;\n                x_trans2 = 50;\n                y_trans2 = 60;\n              }\n        \n              // if(width<=800){\n              //   height = (2.2)*width/(ratio);\n              //   x_trans = 60;\n              //   y_trans = 20;\n              //   x_trans2 = 20;\n              //   y_trans2 = 60;\n              // }\n        \n              if(width<=700){\n                height = (4)*width/(ratio);\n                x_trans = 60;\n                y_trans = 20;\n                x_trans2 = 50;\n                y_trans2 = keywords.length*14+ 80;\n              }\n        \n              this.setState({\n                  keywords: keywords,\n                  displayResults: true,\n                  region_state: state,\n                  selected_time_frame: selected_time_frame,\n                  displayResults: true,\n                  historical_data: this.get_historical_data(keywords, result),\n                  forecasted_data: this.get_forecasted_data(keywords, result),\n                  rate_table_data: this.getRateTableData(result.growth_rate_result),\n                  growth_table_data: this.getGrowthTableData(result.projected_growth_result),\n                  div_height: height,\n                  x_trans: x_trans,\n                  y_trans: y_trans,\n                  x_trans2: x_trans2,\n                  y_trans2: y_trans2,\n                  fetching_results: false\n              });\n            }).catch(function(error) {\n                 console.log(\"error:\")\n                //  this.setState({\n                //   fetching_results: false\n                // });\n                 console.log(error)\n          })\n    }\n\n    componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n      this.myRef.current.focus();\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n    \n    updateWindowDimensions() {\n      let width = this.myRef.current.offsetWidth;\n      let height = width/(ratio);\n      let x_trans = this.state.x_trans;\n      let y_trans = this.state.y_trans;\n      let x_trans2 = this.state.x_trans;\n      let y_trans2 = this.state.y_trans;\n\n      if(width>1800){\n        height = height;\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n\n      if(width<=1800){\n        height = (1.2)*width/(ratio);\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n\n      if(width<=1600){\n        height = (1.4)*width/(ratio);\n        x_trans = 80;\n        y_trans = 80;\n        x_trans2 = 50;\n        y_trans2 = 80;\n      }\n      \n      if(width<=1400){\n        height = (1.6)*width/(ratio);\n        x_trans = 70;\n        y_trans = 70;\n        x_trans2 = 50;\n        y_trans2 = 70;\n      }\n\n      if(width<=1200){\n        height = (1.8)*width/(ratio);\n        x_trans = 60;\n        y_trans = 60;\n        x_trans2 = 50;\n        y_trans2 = 70;\n      }\n\n      // if(width<=800){\n      //   height = (2.2)*width/(ratio);\n      //   x_trans = 60;\n      //   y_trans = 20;\n      //   x_trans2 = 20;\n      //   y_trans2 = 60;\n      // }\n\n      if(width<=700){\n        height = (4)*width/(ratio);\n        x_trans = 60;\n        y_trans = 20;\n        x_trans2 = 50;\n        y_trans2 = this.state.keywords.length*14 + 80;\n      }\n\n      this.setState({\n        div_height: height,\n        x_trans: x_trans,\n        y_trans: y_trans,\n        x_trans2: x_trans2,\n        y_trans2: y_trans2,\n      });\n    }\n\n    render() {\n\n      let ranges =  {\n        max_x: (261 + 52 + 0),\n        min_x: 0,\n        max_y: 120,\n        min_y: -10,\n      }\n\n        if(this.state.displayResults){\n\n          let min_y = get_min_value(this.state.historical_data);\n          let max_y = get_max_value(this.state.historical_data);\n\n          \n\n          let lower_bound = (Math.ceil(((min_y)+1) / 10)-1) * 10\n          let upper_bound = Math.ceil((Math.abs(max_y)+1) / 10) * 10\n\n          ranges = {\n            max_x: (this.state.historical_data[0].length + this.state.forecasted_data[0].length),\n            min_x: 0,\n            max_y: upper_bound,\n            min_y: lower_bound,\n          }\n\n          // console.log(\"ranges\")\n          // console.log(ranges)\n        }\n\n\n        if (this.state.authenticated) {\n\n        return (\n          <div ref={this.myRef}>\n            <div className=\"main_results\">\n\n            {this.state.keywords.length<=5 ? (<div>\n\n            {this.state.displayResults ? (\n                        \n              <div>\n                <Header username={this.state.username} />\n\n                <Input callbackFromParent={this.fetchCallback}/>\n\n                <div className=\"results_div\">\n                      <div className=\"map_div\">\n                        {/* <Chart height={this.state.div_height} /> */}\n                        <Chart callbackFromApp={this.mapCallback} height={this.state.div_height} />\n                      </div>\n                      <div id=\"plot_div\"> \n                          <Test_Plot_Dates options={this.state.options} ranges={ranges} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} height={this.state.div_height} x_trans={this.state.x_trans} y_trans={this.state.y_trans} x_trans2={this.state.x_trans2} y_trans2={this.state.y_trans2} />\n                          {/* <Plot options={this.state.options} historical_data={this.state.historical_data} forecasted_data={this.state.forecasted_data} number_of_series={this.state.forecasted_data.length} keywords={this.state.keywords} /> */}\n                      </div>\n                </div>\n                <div className=\"tables\">\n                  <Row>\n                      <div className=\"table-responsive result_table\">\n                          <Table tableData={this.state.rate_table_data} title={\"Growth Rate\"}/>\n                      </div>\n                      <div className=\"table-responsive result_table\">\n                          <Table tableData={this.state.growth_table_data} title={\"Projected growth\"} />\n                      </div>\n                  </Row>\n                </div>\n              </div>  ) : (\n              \n              <div>\n                <Header username={this.state.username} />\n                <Input callbackFromParent={this.fetchCallback}/>\n\n                <div className=\"intro\">\n                </div>\n                {this.state.fetching_results ? (    \n                  <div className=\"spinner\">\n                    <Loader type=\"Oval\" color=\"#007bff\" height={200} width={200} timeout={30000}/>\n                  </div>   \n                  ) : (<div></div>) }\n\n\n              </div>\n              )\n            }\n\n\n            </div>) : (<div>Too many keywords</div>)\n              \n            }\n\n            \n          </div>\n        </div>\n      );\n        } else{\n        return (\n        <div ref={this.myRef}>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n            \n        </div>);      \n        }\n    }\n    \n      getGrowthTableData(data){\n        let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"]\n        \n        \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n    \n      getRateTableData(data){\n        let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"]\n        let table_headers = [\"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\", \"Growth Rate 5\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [capitalizeString(data[\"Keyword\"][key]), data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: table_headers\n        }\n    \n        return result;\n      }\n\n      get_historical_data(keywords, result){\n        let data = []\n        // console.log(result)\n\n        for (let keyword in keywords) {  \n            let index = 0;\n\n            \n\n            let k_w = keywords[keyword]\n\n            \n\n            // console.log(Object.keys(result[k_w][MA_Day_5+k_w]).length)\n            // let arr = Object.keys(result[k_w][MA_Day_5+k_w]).slice(4,260).map(\n            let arr = Object.keys(result[k_w][MA_Day_5+k_w]).map(\n            function(key){\n              // console.log(result[k_w][UPPER_BAND+k_w][key])\n              if(index<4){\n                return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[k_w][k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n              }else{\n                return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n              }\n              \n              // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[k_w][k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n                // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n            );\n            data.push(arr)\n        }\n\n        return data;\n    }\n    \n    get_forecasted_data(keywords, result){\n    let data = []\n\n    for (let keyword in keywords) {  \n        let index = 0;\n        let k_w = keywords[keyword]\n\n        // console.log(Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).length)\n\n        let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n        function(key){\n\n          if(index<4){\n            return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n          }else{\n            return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n          }\n\n          // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n          //return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[keywords[keyword] + \"F\"][k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n          // return [index++, Date.UTC(key.substring(0,4), key.substring(5,7)-1, key.substring(8,10)-1), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n        }\n        );\n        data.push(arr)\n    }\n\n    return data;\n    }\n}\n  \n  \nexport default App;\n"]},"metadata":{},"sourceType":"module"}