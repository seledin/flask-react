{"ast":null,"code":"var _jsxFileName = \"/Users/marcin/workspace/react/flask-react-app/client/src/App.js\";\nimport React from 'react';\nimport Header from \"./components/Header\";\nimport Input from './components/Input';\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css';\nimport { appConfig } from './config.js';\nlet dimensions = appConfig.dimensions;\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCallback = data => {\n      this.setState({\n        displayResults: false\n      });\n      this.fetchData(data.keywords, data.selected_state_name, data.selected_time_frame);\n    };\n\n    this.state = {\n      title: \"before\",\n      username: \"user\",\n      keywords: [],\n      authenticated: true,\n      displayResults: false,\n      region_state: \"US\",\n      data: [],\n      futureData: [],\n      selected_time_frame: \"today 5-y\",\n      rankRates: [],\n      growthRates: [],\n      options: {\n        title: \"Trends Forecast\",\n        x_label: \"Date\",\n        y_label: \"Search interest (%)\",\n        dimensions: dimensions\n      }\n    };\n  }\n\n  fetchData(keywords, state, selected_time_frame) {\n    let url = appConfig.KEYWORDS_NEW; // let url = \"/new\"\n\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        keywords: keywords,\n        region_state: state,\n        time_frame: selected_time_frame\n      })\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        data: this.dataMapping2(keywords, result),\n        futureData: this.futureData2(keywords, result),\n        keywords: keywords,\n        displayResults: true,\n        region_state: state,\n        selected_time_frame: selected_time_frame,\n        displayResults: true,\n        rankRates: this.getRateTableData(result.growth_rate_result),\n        growthRates: this.getGrowthTableData(result.projected_growth_result)\n      });\n    });\n  }\n\n  render() {\n    if (this.state.authenticated) {\n      return React.createElement(\"div\", {\n        className: \"main_results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.state.displayResults ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"results_div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Test_Plot_Dates, {\n        options: this.state.options,\n        data: this.state.data,\n        futureData: this.state.futureData,\n        number_of_series: this.state.futureData.length,\n        keywords: this.state.keywords,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"tables\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.rankRates,\n        title: \"Growth Rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"table-responsive result_table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Table, {\n        tableData: this.state.growthRates,\n        title: \"Projected growth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Header, {\n        username: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Input, {\n        callbackFromParent: this.fetchCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Login, {\n        callbackFromLogin: this.toLoginCallback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }));\n    }\n  }\n\n  getGrowthTableData(data) {\n    let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: headers\n    };\n    return result;\n  }\n\n  getRateTableData(data) {\n    let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"];\n    let table_headers = [\"Growth Rate 0\", \"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\"];\n    let arr = Object.keys(data[\"Keyword\"]).map(function (key) {\n      // return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n      return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]];\n    });\n    let result = {\n      data: arr,\n      headers: table_headers\n    };\n    return result;\n  }\n\n  dataMapping2(keywords, result) {\n    let data = [];\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword];\n      let arr = Object.keys(result[k_w][MA_Day_5 + k_w]).slice(4, 260).map(function (key) {\n        return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7), key.substring(8, 10)), result[k_w][MA_Day_5 + k_w][key], result[k_w][LOWER_BAND + k_w][key], result[k_w][UPPER_BAND + k_w][key]];\n      });\n      data.push(arr);\n    }\n\n    return data;\n  }\n\n  futureData2(keywords, result) {\n    let data = [];\n\n    for (let keyword in keywords) {\n      let index = 0;\n      let k_w = keywords[keyword];\n      let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(function (key) {\n        return [index++, Date.UTC(key.substring(0, 4), key.substring(5, 7), key.substring(8, 10)), result[keywords[keyword] + \"F\"][MA_Day_5 + k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND + k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND + k_w][key]];\n      });\n      data.push(arr);\n    }\n\n    return data;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marcin/workspace/react/flask-react-app/client/src/App.js"],"names":["React","Header","Input","Row","Col","Login","Table","Chart","Test_Plot_Dates","appConfig","dimensions","MA_Day_5","LOWER_BAND","UPPER_BAND","App","Component","constructor","props","fetchCallback","data","setState","displayResults","fetchData","keywords","selected_state_name","selected_time_frame","state","title","username","authenticated","region_state","futureData","rankRates","growthRates","options","x_label","y_label","url","KEYWORDS_NEW","fetch","method","headers","body","JSON","stringify","time_frame","then","res","json","result","dataMapping2","futureData2","getRateTableData","growth_rate_result","getGrowthTableData","projected_growth_result","render","length","toLoginCallback","arr","Object","keys","map","key","table_headers","keyword","index","k_w","slice","Date","UTC","substring","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from \"./components/Header\"\nimport Input from './components/Input'\nimport { Row, Col } from 'react-bootstrap';\nimport Login from './components/Login';\nimport Table from './components/Table';\nimport Chart from './components/Chart';\nimport Test_Plot_Dates from './Test_Plot_Dates';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/plot.css'\n\nimport { appConfig } from './config.js';\n\nlet dimensions = appConfig.dimensions;\n\nconst MA_Day_5 = \"5 Day MA for \";\nconst LOWER_BAND = \"Lower Band for \";\nconst UPPER_BAND = \"Upper Band for \";\n\n\n\nclass App extends React.Component {\n  \n    constructor(props){\n      super(props);\n      this.state = {\n        title: \"before\",\n        username: \"user\",\n        keywords: [],\n        authenticated: true,\n        displayResults: false,\n        region_state: \"US\",\n        data: [],\n        futureData: [],\n        selected_time_frame: \"today 5-y\",\n        rankRates: [],\n        growthRates: [],\n        options: {\n          title: \"Trends Forecast\",\n          x_label: \"Date\",\n          y_label: \"Search interest (%)\",\n          dimensions: dimensions,\n        },\n      };\n\n    }\n\n    fetchCallback = (data) => {\n        this.setState({\n            displayResults: false,\n        });\n  \n        this.fetchData(data.keywords, data.selected_state_name, data.selected_time_frame)\n    }\n\n    fetchData(keywords, state, selected_time_frame){\n\n        let url = appConfig.KEYWORDS_NEW;\n        // let url = \"/new\"\n        \n        fetch(url, {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            keywords: keywords, region_state: state, time_frame: selected_time_frame\n          }),\n        }).then(res => res.json())\n            .then(\n            (result) => {\n                this.setState({\n                    data: this.dataMapping2(keywords, result),\n                    futureData: this.futureData2(keywords, result),\n                    keywords: keywords,\n                    displayResults: true,\n                    region_state: state,\n                    selected_time_frame: selected_time_frame,\n                    displayResults: true,\n                    rankRates: this.getRateTableData(result.growth_rate_result),\n                    growthRates: this.getGrowthTableData(result.projected_growth_result)\n                });\n            })\n    }\n    \n    render() {\n\n        if (this.state.authenticated) {\n        return (\n            <div className=\"main_results\">\n            {this.state.displayResults ? (\n            \n            <div>\n              <Header username={this.state.username} />\n\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"results_div\">\n              <Row> \n                  <Col sm={5}>\n                    <div>\n                      <Chart />\n                      {/* <Chart callbackFromApp={this.mapCallback}/> */}\n                    </div>\n                  </Col>\n                  <Col sm={7}>\n                    <div> \n                      <Test_Plot_Dates options={this.state.options} data={this.state.data} futureData={this.state.futureData} number_of_series={this.state.futureData.length} keywords={this.state.keywords} />\n                    </div>\n                  </Col>\n              </Row> \n              </div>\n              <div className=\"tables\">\n                <Row>\n                  {/* <Col sm={6}> */}\n                    {/* <div className=\"result_table\"> */}\n                    <div className=\"table-responsive result_table\">\n                        <Table tableData={this.state.rankRates} title={\"Growth Rate\"}/>\n                    </div>\n                  {/* </Col> */}\n                  {/* <Col sm={6}> */}\n                    <div className=\"table-responsive result_table\">\n                    {/* <div className=\"result_table\"> */}\n                        <Table tableData={this.state.growthRates} title={\"Projected growth\"} />\n                    </div>\n                  {/* </Col> */}\n                </Row>\n              </div>\n\n            </div>  ) : (\n            \n            <div>\n              <Header username={this.state.username} />\n              <Input callbackFromParent={this.fetchCallback}/>\n\n              <div className=\"intro\">\n              </div>\n            </div>\n            )\n          }\n            </div>\n            );\n        } else{\n        return (\n        <div>\n            <Login callbackFromLogin={this.toLoginCallback}/>\n        </div>);      \n        }\n    }\n    \n      getGrowthTableData(data){\n        let headers = [\"Projected growth in 5 weeks for US (for all keywords) [%]\", \"Projected growth in 5 weeks for US (for one keyword) [%]\"]\n        \n        \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: headers\n        }\n    \n        return result;\n      }\n    \n      getRateTableData(data){\n        let headers = [\"Growth_Rate_0_1\", \"Growth_Rate_0_2\", \"Growth_Rate_0_3\", \"Growth_Rate_1_2\", \"Growth_Rate_2_3\"]\n        let table_headers = [\"Growth Rate 0\", \"Growth Rate 1\", \"Growth Rate 2\", \"Growth Rate 3\", \"Growth Rate 4\"]\n    \n        let arr = Object.keys(data[\"Keyword\"]).map(\n          function(key){\n            // return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n            return [data[\"Keyword\"][key], data[headers[0]][key], data[headers[1]][key], data[headers[2]][key], data[headers[3]][key], data[headers[4]][key]]\n          }\n        );\n    \n        let result = {\n          data: arr,\n          headers: table_headers\n        }\n    \n        return result;\n      }\n\n\n      dataMapping2(keywords, result){\n        let data = []\n    \n        for (let keyword in keywords) {  \n            let index = 0;\n            let k_w = keywords[keyword]\n            let arr = Object.keys(result[k_w][MA_Day_5+k_w]).slice(4,260).map(\n            function(key){\n              return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[k_w][MA_Day_5+k_w][key], result[k_w][LOWER_BAND+k_w][key], result[k_w][UPPER_BAND+k_w][key]]\n            }\n          );\n          data.push(arr)\n        }\n    \n        return data;\n      }\n    \n    \n      futureData2(keywords, result){\n    \n        let data = []\n    \n        for (let keyword in keywords) {  \n          let index = 0;\n          let k_w = keywords[keyword]\n          let arr = Object.keys(result[keywords[keyword] + \"F\"][keywords[keyword]]).map(\n            function(key){\n              return [index++, Date.UTC(key.substring(0,4), key.substring(5,7), key.substring(8,10)), result[keywords[keyword] + \"F\"][MA_Day_5+k_w][key], result[keywords[keyword] + \"F\"][LOWER_BAND+k_w][key], result[keywords[keyword] + \"F\"][UPPER_BAND+k_w][key]]\n            }\n          );\n          data.push(arr)\n        }\n    \n        return data;\n      }\n  }\n  \n  \n  export default App;\n"]},"metadata":{},"sourceType":"module"}